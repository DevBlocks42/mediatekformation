1738044959
84e399b8f2181ccd73394fdeddff1638-phpdoc%3A9f129ee2685358ea355ca5830358bb5a-a392fd03a94037e29d3d680e8842a216
s:100844:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjE5OiJBdHRyaWJ1dGVEcml2ZXIucGhwIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MTp7czoyODoiXERvY3RyaW5lXE9STVxNYXBwaW5nXERyaXZlciI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjI4OiJcRG9jdHJpbmVcT1JNXE1hcHBpbmdcRHJpdmVyIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NjoiRHJpdmVyIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjE6e3M6NDQ6IlxEb2N0cmluZVxPUk1cTWFwcGluZ1xEcml2ZXJcQXR0cmlidXRlRHJpdmVyIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXyI6MTU6e3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBpbXBsZW1lbnRzIjthOjE6e3M6NTA6IlxEb2N0cmluZVxQZXJzaXN0ZW5jZVxNYXBwaW5nXERyaXZlclxNYXBwaW5nRHJpdmVyIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTA6IlxEb2N0cmluZVxQZXJzaXN0ZW5jZVxNYXBwaW5nXERyaXZlclxNYXBwaW5nRHJpdmVyIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTM6Ik1hcHBpbmdEcml2ZXIiO319czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGNvbnN0YW50cyI7YToxOntzOjcwOiJcRG9jdHJpbmVcT1JNXE1hcHBpbmdcRHJpdmVyXEF0dHJpYnV0ZURyaXZlcjo6RU5USVRZX0FUVFJJQlVURV9DTEFTU0VTIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50Ijo5OntzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MzE7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjM0O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjcwOiJcRG9jdHJpbmVcT1JNXE1hcHBpbmdcRHJpdmVyXEF0dHJpYnV0ZURyaXZlcjo6RU5USVRZX0FUVFJJQlVURV9DTEFTU0VTIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MjQ6IkVOVElUWV9BVFRSSUJVVEVfQ0xBU1NFUyI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AGRvY0Jsb2NrIjtOO3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AHZhbHVlIjtzOjk0OiJbXERvY3RyaW5lXE9STVxNYXBwaW5nXEVudGl0eTo6Y2xhc3MgPT4gMSwgXERvY3RyaW5lXE9STVxNYXBwaW5nXE1hcHBlZFN1cGVyY2xhc3M6OmNsYXNzID0+IDJdIjtzOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABmaW5hbCI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AG1ldGFkYXRhIjthOjA6e31zOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABhdHRyaWJ1dGVzIjthOjA6e319fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBwcm9wZXJ0aWVzIjthOjE6e3M6NTM6IlxEb2N0cmluZVxPUk1cTWFwcGluZ1xEcml2ZXJcQXR0cmlidXRlRHJpdmVyOjokcmVhZGVyIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5IjoxMjp7czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZXMiO2E6MDp7fXM6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MzY7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjM2O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTM6IlxEb2N0cmluZVxPUk1cTWFwcGluZ1xEcml2ZXJcQXR0cmlidXRlRHJpdmVyOjokcmVhZGVyIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NjoicmVhZGVyIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZG9jQmxvY2siO047czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZGVmYXVsdCI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBzdGF0aWMiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDQ6IlxEb2N0cmluZVxPUk1cTWFwcGluZ1xEcml2ZXJcQXR0cmlidXRlUmVhZGVyIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTU6IkF0dHJpYnV0ZVJlYWRlciI7fX1zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQByZWFkT25seSI7YjoxO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AG1ldGFkYXRhIjthOjA6e31zOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBhdHRyaWJ1dGVzIjthOjA6e319fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBtZXRob2RzIjthOjg6e3M6NTk6IlxEb2N0cmluZVxPUk1cTWFwcGluZ1xEcml2ZXJcQXR0cmlidXRlRHJpdmVyOjpfX2NvbnN0cnVjdCgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6Mjp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjM6e3M6MTI6IgAqAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6MTA6IgAqAGtleVR5cGUiO047czoxNzoiACoAZGVmYXVsdEtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NToicGF0aHMiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MTtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQm9vbGVhbiI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6MjU6InJlcG9ydEZpZWxkc1doZXJlRGVjbGFyZWQiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO3M6NDoidHJ1ZSI7czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjQyO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjExMDc7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NTM7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTU1NTt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1OToiXERvY3RyaW5lXE9STVxNYXBwaW5nXERyaXZlclxBdHRyaWJ1dGVEcml2ZXI6Ol9fY29uc3RydWN0KCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMToiX19jb25zdHJ1Y3QiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czowOiIiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6Mjp7aTowO086NDQ6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtIjo2OntzOjc6IgAqAG5hbWUiO3M6NToicGFyYW0iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czo3OiIAKgB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQXJyYXlfIjozOntzOjEyOiIAKgB2YWx1ZVR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9czoxMDoiACoAa2V5VHlwZSI7TjtzOjE3OiIAKgBkZWZhdWx0S2V5VHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoyOntzOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fX1zOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHRva2VuIjtzOjE6InwiO319czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czo1OiJwYXRocyI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzVmFyaWFkaWMiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNSZWZlcmVuY2UiO2I6MDt9aToxO086NDQ6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtIjo2OntzOjc6IgAqAG5hbWUiO3M6NToicGFyYW0iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjI3OiJuby1vcCwgdG8gYmUgcmVtb3ZlZCBpbiA0LjAiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6NzoiACoAdHlwZSI7Tzo0MjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBzZXVkb1R5cGVzXFRydWVfIjowOnt9czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czoyNToicmVwb3J0RmllbGRzV2hlcmVEZWNsYXJlZCI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzVmFyaWFkaWMiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNSZWZlcmVuY2UiO2I6MDt9fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6Mjc6IkRvY3RyaW5lXE9STVxNYXBwaW5nXERyaXZlciI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MTI6e3M6NjoiRXZlbnRzIjtzOjE5OiJEb2N0cmluZVxPUk1cRXZlbnRzIjtzOjc6Ik1hcHBpbmciO3M6MjA6IkRvY3RyaW5lXE9STVxNYXBwaW5nIjtzOjIxOiJFbnRpdHlMaXN0ZW5lckJ1aWxkZXIiO3M6NTA6IkRvY3RyaW5lXE9STVxNYXBwaW5nXEJ1aWxkZXJcRW50aXR5TGlzdGVuZXJCdWlsZGVyIjtzOjEzOiJDbGFzc01ldGFkYXRhIjtzOjM0OiJEb2N0cmluZVxPUk1cTWFwcGluZ1xDbGFzc01ldGFkYXRhIjtzOjE2OiJNYXBwaW5nRXhjZXB0aW9uIjtzOjM3OiJEb2N0cmluZVxPUk1cTWFwcGluZ1xNYXBwaW5nRXhjZXB0aW9uIjtzOjI0OiJQZXJzaXN0ZW5jZUNsYXNzTWV0YWRhdGEiO3M6NDI6IkRvY3RyaW5lXFBlcnNpc3RlbmNlXE1hcHBpbmdcQ2xhc3NNZXRhZGF0YSI7czoyMjoiQ29sb2NhdGVkTWFwcGluZ0RyaXZlciI7czo1ODoiRG9jdHJpbmVcUGVyc2lzdGVuY2VcTWFwcGluZ1xEcml2ZXJcQ29sb2NhdGVkTWFwcGluZ0RyaXZlciI7czoxMzoiTWFwcGluZ0RyaXZlciI7czo0OToiRG9jdHJpbmVcUGVyc2lzdGVuY2VcTWFwcGluZ1xEcml2ZXJcTWFwcGluZ0RyaXZlciI7czoyNDoiSW52YWxpZEFyZ3VtZW50RXhjZXB0aW9uIjtzOjI0OiJJbnZhbGlkQXJndW1lbnRFeGNlcHRpb24iO3M6MTU6IlJlZmxlY3Rpb25DbGFzcyI7czoxNToiUmVmbGVjdGlvbkNsYXNzIjtzOjE2OiJSZWZsZWN0aW9uTWV0aG9kIjtzOjE2OiJSZWZsZWN0aW9uTWV0aG9kIjtzOjE4OiJSZWZsZWN0aW9uUHJvcGVydHkiO3M6MTg6IlJlZmxlY3Rpb25Qcm9wZXJ0eSI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhdHRyaWJ1dGVzIjthOjA6e319czo1OToiXERvY3RyaW5lXE9STVxNYXBwaW5nXERyaXZlclxBdHRyaWJ1dGVEcml2ZXI6OmlzVHJhbnNpZW50KCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjk6ImNsYXNzTmFtZSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NTU7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTU2Mjt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo2NztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxOTg5O31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEJvb2xlYW4iOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1OToiXERvY3RyaW5lXE9STVxNYXBwaW5nXERyaXZlclxBdHRyaWJ1dGVEcml2ZXI6OmlzVHJhbnNpZW50KCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMToiaXNUcmFuc2llbnQiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhdHRyaWJ1dGVzIjthOjA6e319czo2ODoiXERvY3RyaW5lXE9STVxNYXBwaW5nXERyaXZlclxBdHRyaWJ1dGVEcml2ZXI6OmxvYWRNZXRhZGF0YUZvckNsYXNzKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToyOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjk6ImNsYXNzTmFtZSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aToxO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0MzoiXERvY3RyaW5lXFBlcnNpc3RlbmNlXE1hcHBpbmdcQ2xhc3NNZXRhZGF0YSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEzOiJDbGFzc01ldGFkYXRhIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6ODoibWV0YWRhdGEiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjc3O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjIxNzA7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NTkzO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjI2MTk3O31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFZvaWRfIjowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6Njg6IlxEb2N0cmluZVxPUk1cTWFwcGluZ1xEcml2ZXJcQXR0cmlidXRlRHJpdmVyOjpsb2FkTWV0YWRhdGFGb3JDbGFzcygpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MjA6ImxvYWRNZXRhZGF0YUZvckNsYXNzIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MTM6IntAaW5oZXJpdERvY30iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6Mzp7aTowO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEdlbmVyaWMiOjI6e3M6NzoiACoAbmFtZSI7czoxMToicHNhbG0tcGFyYW0iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjI2OiJjbGFzcy1zdHJpbmc8VD4gJGNsYXNzTmFtZSI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MTtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xHZW5lcmljIjoyOntzOjc6IgAqAG5hbWUiO3M6MTE6InBzYWxtLXBhcmFtIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czoyNjoiQ2xhc3NNZXRhZGF0YTxUPiAkbWV0YWRhdGEiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX1pOjI7Tzo0NzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcVGVtcGxhdGUiOjU6e3M6NzoiACoAbmFtZSI7czo4OiJ0ZW1wbGF0ZSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjYxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcVGVtcGxhdGUAdGVtcGxhdGVOYW1lIjtzOjE6IlQiO3M6NTQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xUZW1wbGF0ZQBib3VuZCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7Tjt9czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFRlbXBsYXRlAGRlZmF1bHQiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjoxMjM7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NjA6IlxEb2N0cmluZVxPUk1cTWFwcGluZ1xEcml2ZXJcQXR0cmlidXRlRHJpdmVyOjpnZXRGZXRjaE1vZGUoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjI6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6OToiY2xhc3NOYW1lIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjE7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjk6ImZldGNoTW9kZSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NjA1O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjI2NTM4O31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjYxMjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToyNjg3ODt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NjA6IlxEb2N0cmluZVxPUk1cTWFwcGluZ1xEcml2ZXJcQXR0cmlidXRlRHJpdmVyOjpnZXRGZXRjaE1vZGUoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEyOiJnZXRGZXRjaE1vZGUiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MzU6IkF0dGVtcHRzIHRvIHJlc29sdmUgdGhlIGZldGNoIG1vZGUuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjQ6e2k6MDtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6Njp7czo3OiIAKgBuYW1lIjtzOjU6InBhcmFtIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czoxNToiVGhlIGNsYXNzIG5hbWUuIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjc6IgAqAHR5cGUiO086NDI6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDbGFzc1N0cmluZyI6MTp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDbGFzc1N0cmluZwBmcXNlbiI7Tjt9czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czo5OiJjbGFzc05hbWUiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1ZhcmlhZGljIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzUmVmZXJlbmNlIjtiOjA7fWk6MTtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6Njp7czo3OiIAKgBuYW1lIjtzOjU6InBhcmFtIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czoxNToiVGhlIGZldGNoIG1vZGUuIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjc6IgAqAHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czo5OiJmZXRjaE1vZGUiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1ZhcmlhZGljIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzUmVmZXJlbmNlIjtiOjA7fWk6MjtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xSZXR1cm5fIjozOntzOjc6IgAqAG5hbWUiO3M6NjoicmV0dXJuIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czo0MzoiVGhlIGZldGNoIG1vZGUgYXMgZGVmaW5lZCBpbiBDbGFzc01ldGFkYXRhLiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czo3OiIAKgB0eXBlIjtPOjUyOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUHNldWRvVHlwZXNcQ29uc3RFeHByZXNzaW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBzZXVkb1R5cGVzXENvbnN0RXhwcmVzc2lvbgBvd25lciI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjM1OiJcRG9jdHJpbmVcT1JNXE1hcHBpbmdcQ2xhc3NNZXRhZGF0YSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEzOiJDbGFzc01ldGFkYXRhIjt9fXM6NjQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUHNldWRvVHlwZXNcQ29uc3RFeHByZXNzaW9uAGV4cHJlc3Npb24iO3M6NzoiRkVUQ0hfKiI7fX1pOjM7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcVGhyb3dzIjozOntzOjc6IgAqAG5hbWUiO3M6NjoidGhyb3dzIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czozMToiSWYgdGhlIGZldGNoIG1vZGUgaXMgbm90IHZhbGlkLiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czo3OiIAKgB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6Mzg6IlxEb2N0cmluZVxPUk1cTWFwcGluZ1xNYXBwaW5nRXhjZXB0aW9uIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTY6Ik1hcHBpbmdFeGNlcHRpb24iO319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6MTIzO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjY0OiJcRG9jdHJpbmVcT1JNXE1hcHBpbmdcRHJpdmVyXEF0dHJpYnV0ZURyaXZlcjo6Z2V0R2VuZXJhdGVkTW9kZSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MTp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czoxMzoiZ2VuZXJhdGVkTW9kZSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NjE5O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjI3MDE5O31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjYyNjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToyNzM2MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NjQ6IlxEb2N0cmluZVxPUk1cTWFwcGluZ1xEcml2ZXJcQXR0cmlidXRlRHJpdmVyOjpnZXRHZW5lcmF0ZWRNb2RlKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNjoiZ2V0R2VuZXJhdGVkTW9kZSI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo3OiJwcml2YXRlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czozOToiQXR0ZW1wdHMgdG8gcmVzb2x2ZSB0aGUgZ2VuZXJhdGVkIG1vZGUuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xUaHJvd3MiOjM6e3M6NzoiACoAbmFtZSI7czo2OiJ0aHJvd3MiO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjMxOiJJZiB0aGUgZmV0Y2ggbW9kZSBpcyBub3QgdmFsaWQuIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjc6IgAqAHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czozODoiXERvY3RyaW5lXE9STVxNYXBwaW5nXE1hcHBpbmdFeGNlcHRpb24iO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNjoiTWFwcGluZ0V4Y2VwdGlvbiI7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjoxMjM7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NjY6IlxEb2N0cmluZVxPUk1cTWFwcGluZ1xEcml2ZXJcQXR0cmlidXRlRHJpdmVyOjpnZXRNZXRob2RDYWxsYmFja3MoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MTc6IlxSZWZsZWN0aW9uTWV0aG9kIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTY6IlJlZmxlY3Rpb25NZXRob2QiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo2OiJtZXRob2QiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjYzNDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToyNzUxOTt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo2NzQ7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6Mjg5MDk7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQXJyYXlfIjozOntzOjEyOiIAKgB2YWx1ZVR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjEwOiIAKgBrZXlUeXBlIjtOO3M6MTc6IgAqAGRlZmF1bHRLZXlUeXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQiOjI6e3M6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdHlwZXMiO2E6Mjp7aTowO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9aToxO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9fXM6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdG9rZW4iO3M6MToifCI7fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo2NjoiXERvY3RyaW5lXE9STVxNYXBwaW5nXERyaXZlclxBdHRyaWJ1dGVEcml2ZXI6OmdldE1ldGhvZENhbGxiYWNrcygpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTg6ImdldE1ldGhvZENhbGxiYWNrcyI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo3OiJwcml2YXRlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoyNDoiUGFyc2VzIHRoZSBnaXZlbiBtZXRob2QuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjI6e2k6MDtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xSZXR1cm5fIjozOntzOjc6IgAqAG5hbWUiO3M6NjoicmV0dXJuIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6NzoiACoAdHlwZSI7Tzo0MjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBzZXVkb1R5cGVzXExpc3RfIjozOntzOjEyOiIAKgB2YWx1ZVR5cGUiO086NDc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQc2V1ZG9UeXBlc1xBcnJheVNoYXBlIjoxOntzOjU0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBzZXVkb1R5cGVzXEFycmF5U2hhcGUAaXRlbXMiO2E6Mjp7aTowO086NTE6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQc2V1ZG9UeXBlc1xBcnJheVNoYXBlSXRlbSI6Mzp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQc2V1ZG9UeXBlc1xTaGFwZUl0ZW0Aa2V5IjtzOjA6IiI7czo1MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQc2V1ZG9UeXBlc1xTaGFwZUl0ZW0AdmFsdWUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQc2V1ZG9UeXBlc1xTaGFwZUl0ZW0Ab3B0aW9uYWwiO2I6MDt9aToxO086NTE6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQc2V1ZG9UeXBlc1xBcnJheVNoYXBlSXRlbSI6Mzp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQc2V1ZG9UeXBlc1xTaGFwZUl0ZW0Aa2V5IjtzOjA6IiI7czo1MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQc2V1ZG9UeXBlc1xTaGFwZUl0ZW0AdmFsdWUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQc2V1ZG9UeXBlc1xTaGFwZUl0ZW0Ab3B0aW9uYWwiO2I6MDt9fX1zOjEwOiIAKgBrZXlUeXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fXM6MTc6IgAqAGRlZmF1bHRLZXlUeXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQiOjI6e3M6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdHlwZXMiO2E6Mjp7aTowO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9aToxO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9fXM6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdG9rZW4iO3M6MToifCI7fX19aToxO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEdlbmVyaWMiOjI6e3M6NzoiACoAbmFtZSI7czoxMjoicHNhbG0tcmV0dXJuIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czozMjoibGlzdDxhcnJheXtzdHJpbmcsIChFdmVudHM6OiopfT4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtyOjEyMztzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhdHRyaWJ1dGVzIjthOjA6e319czo2NToiXERvY3RyaW5lXE9STVxNYXBwaW5nXERyaXZlclxBdHRyaWJ1dGVEcml2ZXI6OmpvaW5Db2x1bW5Ub0FycmF5KCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoyOntzOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MzI6IlxEb2N0cmluZVxPUk1cTWFwcGluZ1xKb2luQ29sdW1uIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTA6IkpvaW5Db2x1bW4iO319aToxO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czozOToiXERvY3RyaW5lXE9STVxNYXBwaW5nXEludmVyc2VKb2luQ29sdW1uIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTc6IkludmVyc2VKb2luQ29sdW1uIjt9fX1zOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHRva2VuIjtzOjE6InwiO31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjEwOiJqb2luQ29sdW1uIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo2OTA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MjkzODk7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NzA2O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjI5OTgyO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFycmF5XyI6Mzp7czoxMjoiACoAdmFsdWVUeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czoxMDoiACoAa2V5VHlwZSI7TjtzOjE3OiIAKgBkZWZhdWx0S2V5VHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoyOntzOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fX1zOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHRva2VuIjtzOjE6InwiO319czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NjU6IlxEb2N0cmluZVxPUk1cTWFwcGluZ1xEcml2ZXJcQXR0cmlidXRlRHJpdmVyOjpqb2luQ29sdW1uVG9BcnJheSgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTc6ImpvaW5Db2x1bW5Ub0FycmF5Ijt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjM1OiJQYXJzZSB0aGUgZ2l2ZW4gSm9pbkNvbHVtbiBhcyBhcnJheSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToyOntpOjA7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjc6IgAqAHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjM6e3M6MTI6IgAqAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6MTA6IgAqAGtleVR5cGUiO047czoxNzoiACoAZGVmYXVsdEtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9fX1pOjE7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcR2VuZXJpYyI6Mjp7czo3OiIAKgBuYW1lIjtzOjEyOiJwc2FsbS1yZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjE5NDoiYXJyYXl7CiAgICBuYW1lOiBzdHJpbmd8bnVsbCwKICAgIHVuaXF1ZTogYm9vbCwKICAgIG51bGxhYmxlOiBib29sLAogICAgb25EZWxldGU6IG1peGVkLAogICAgY29sdW1uRGVmaW5pdGlvbjogc3RyaW5nfG51bGwsCiAgICByZWZlcmVuY2VkQ29sdW1uTmFtZTogc3RyaW5nLAogICAgb3B0aW9ucz86IGFycmF5PHN0cmluZywgbWl4ZWQ+Cn0iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtyOjEyMztzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhdHRyaWJ1dGVzIjthOjA6e319czo2MToiXERvY3RyaW5lXE9STVxNYXBwaW5nXERyaXZlclxBdHRyaWJ1dGVEcml2ZXI6OmNvbHVtblRvQXJyYXkoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjI6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6OToiZmllbGROYW1lIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjE7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjI4OiJcRG9jdHJpbmVcT1JNXE1hcHBpbmdcQ29sdW1uIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NjoiQ29sdW1uIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NjoiY29sdW1uIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo3MjY7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MzA1OTQ7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NzY3O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjMxODA2O31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFycmF5XyI6Mzp7czoxMjoiACoAdmFsdWVUeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czoxMDoiACoAa2V5VHlwZSI7TjtzOjE3OiIAKgBkZWZhdWx0S2V5VHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoyOntzOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fX1zOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHRva2VuIjtzOjE6InwiO319czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NjE6IlxEb2N0cmluZVxPUk1cTWFwcGluZ1xEcml2ZXJcQXR0cmlidXRlRHJpdmVyOjpjb2x1bW5Ub0FycmF5KCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMzoiY29sdW1uVG9BcnJheSI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo3OiJwcml2YXRlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czozMToiUGFyc2UgdGhlIGdpdmVuIENvbHVtbiBhcyBhcnJheSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToyOntpOjA7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjc6IgAqAHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjM6e3M6MTI6IgAqAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6MTA6IgAqAGtleVR5cGUiO047czoxNzoiACoAZGVmYXVsdEtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9fX1pOjE7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcR2VuZXJpYyI6Mjp7czo3OiIAKgBuYW1lIjtzOjEyOiJwc2FsbS1yZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjI0NjoiYXJyYXl7CiAgICBmaWVsZE5hbWU6IHN0cmluZywKICAgIHR5cGU6IG1peGVkLAogICAgc2NhbGU6IGludCwKICAgIGxlbmd0aDogaW50LAogICAgdW5pcXVlOiBib29sLAogICAgbnVsbGFibGU6IGJvb2wsCiAgICBwcmVjaXNpb246IGludCwKICAgIGVudW1UeXBlPzogY2xhc3Mtc3RyaW5nLAogICAgb3B0aW9ucz86IG1peGVkW10sCiAgICBjb2x1bW5OYW1lPzogc3RyaW5nLAogICAgY29sdW1uRGVmaW5pdGlvbj86IHN0cmluZwp9IjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjoxMjM7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fX1zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AdXNlZFRyYWl0cyI7YToyOntzOjU5OiJcRG9jdHJpbmVcUGVyc2lzdGVuY2VcTWFwcGluZ1xEcml2ZXJcQ29sb2NhdGVkTWFwcGluZ0RyaXZlciI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjU5OiJcRG9jdHJpbmVcUGVyc2lzdGVuY2VcTWFwcGluZ1xEcml2ZXJcQ29sb2NhdGVkTWFwcGluZ0RyaXZlciI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjIyOiJDb2xvY2F0ZWRNYXBwaW5nRHJpdmVyIjt9czo1MDoiXERvY3RyaW5lXE9STVxNYXBwaW5nXERyaXZlclxSZWZsZWN0aW9uQmFzZWREcml2ZXIiO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1MDoiXERvY3RyaW5lXE9STVxNYXBwaW5nXERyaXZlclxSZWZsZWN0aW9uQmFzZWREcml2ZXIiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoyMToiUmVmbGVjdGlvbkJhc2VkRHJpdmVyIjt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjY7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo3Njg7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDQ6IlxEb2N0cmluZVxPUk1cTWFwcGluZ1xEcml2ZXJcQXR0cmlidXRlRHJpdmVyIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTU6IkF0dHJpYnV0ZURyaXZlciI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBkb2NCbG9jayI7TjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AcGFyZW50IjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmaW5hbCI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwByZWFkT25seSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGF0dHJpYnV0ZXMiO2E6MDp7fX19czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBoYXNoIjtzOjMyOiJhMzkyZmQwM2E5NDAzN2UyOWQzZDY4MGU4ODQyYTIxNiI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjU4OiJ2ZW5kb3IvZG9jdHJpbmUvb3JtL3NyYy9NYXBwaW5nL0RyaXZlci9BdHRyaWJ1dGVEcml2ZXIucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czozMTgxMDoiPD9waHAKCmRlY2xhcmUoc3RyaWN0X3R5cGVzPTEpOwoKbmFtZXNwYWNlIERvY3RyaW5lXE9STVxNYXBwaW5nXERyaXZlcjsKCnVzZSBEb2N0cmluZVxPUk1cRXZlbnRzOwp1c2UgRG9jdHJpbmVcT1JNXE1hcHBpbmc7CnVzZSBEb2N0cmluZVxPUk1cTWFwcGluZ1xCdWlsZGVyXEVudGl0eUxpc3RlbmVyQnVpbGRlcjsKdXNlIERvY3RyaW5lXE9STVxNYXBwaW5nXENsYXNzTWV0YWRhdGE7CnVzZSBEb2N0cmluZVxPUk1cTWFwcGluZ1xNYXBwaW5nRXhjZXB0aW9uOwp1c2UgRG9jdHJpbmVcUGVyc2lzdGVuY2VcTWFwcGluZ1xDbGFzc01ldGFkYXRhIGFzIFBlcnNpc3RlbmNlQ2xhc3NNZXRhZGF0YTsKdXNlIERvY3RyaW5lXFBlcnNpc3RlbmNlXE1hcHBpbmdcRHJpdmVyXENvbG9jYXRlZE1hcHBpbmdEcml2ZXI7CnVzZSBEb2N0cmluZVxQZXJzaXN0ZW5jZVxNYXBwaW5nXERyaXZlclxNYXBwaW5nRHJpdmVyOwp1c2UgSW52YWxpZEFyZ3VtZW50RXhjZXB0aW9uOwp1c2UgUmVmbGVjdGlvbkNsYXNzOwp1c2UgUmVmbGVjdGlvbk1ldGhvZDsKdXNlIFJlZmxlY3Rpb25Qcm9wZXJ0eTsKCnVzZSBmdW5jdGlvbiBhc3NlcnQ7CnVzZSBmdW5jdGlvbiBjbGFzc19leGlzdHM7CnVzZSBmdW5jdGlvbiBjb25zdGFudDsKdXNlIGZ1bmN0aW9uIGRlZmluZWQ7CnVzZSBmdW5jdGlvbiBzcHJpbnRmOwoKY2xhc3MgQXR0cmlidXRlRHJpdmVyIGltcGxlbWVudHMgTWFwcGluZ0RyaXZlcgp7CiAgICB1c2UgQ29sb2NhdGVkTWFwcGluZ0RyaXZlcjsKICAgIHVzZSBSZWZsZWN0aW9uQmFzZWREcml2ZXI7CgogICAgcHJpdmF0ZSBjb25zdCBFTlRJVFlfQVRUUklCVVRFX0NMQVNTRVMgPSBbCiAgICAgICAgTWFwcGluZ1xFbnRpdHk6OmNsYXNzID0+IDEsCiAgICAgICAgTWFwcGluZ1xNYXBwZWRTdXBlcmNsYXNzOjpjbGFzcyA9PiAyLAogICAgXTsKCiAgICBwcml2YXRlIHJlYWRvbmx5IEF0dHJpYnV0ZVJlYWRlciAkcmVhZGVyOwoKICAgIC8qKgogICAgICogQHBhcmFtIGFycmF5PHN0cmluZz4gJHBhdGhzCiAgICAgKiBAcGFyYW0gdHJ1ZSAgICAgICAgICAkcmVwb3J0RmllbGRzV2hlcmVEZWNsYXJlZCBuby1vcCwgdG8gYmUgcmVtb3ZlZCBpbiA0LjAKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIF9fY29uc3RydWN0KGFycmF5ICRwYXRocywgYm9vbCAkcmVwb3J0RmllbGRzV2hlcmVEZWNsYXJlZCA9IHRydWUpCiAgICB7CiAgICAgICAgaWYgKCEgJHJlcG9ydEZpZWxkc1doZXJlRGVjbGFyZWQpIHsKICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWRBcmd1bWVudEV4Y2VwdGlvbihzcHJpbnRmKAogICAgICAgICAgICAgICAgJ1RoZSAkcmVwb3J0RmllbGRzV2hlcmVEZWNsYXJlZCBhcmd1bWVudCBpcyBubyBsb25nZXIgc3VwcG9ydGVkLCBtYWtlIHN1cmUgdG8gb21pdCBpdCB3aGVuIGNhbGxpbmcgJXMuJywKICAgICAgICAgICAgICAgIF9fTUVUSE9EX18sCiAgICAgICAgICAgICkpOwogICAgICAgIH0KCiAgICAgICAgJHRoaXMtPnJlYWRlciA9IG5ldyBBdHRyaWJ1dGVSZWFkZXIoKTsKICAgICAgICAkdGhpcy0+YWRkUGF0aHMoJHBhdGhzKTsKICAgIH0KCiAgICBwdWJsaWMgZnVuY3Rpb24gaXNUcmFuc2llbnQoc3RyaW5nICRjbGFzc05hbWUpOiBib29sCiAgICB7CiAgICAgICAgJGNsYXNzQXR0cmlidXRlcyA9ICR0aGlzLT5yZWFkZXItPmdldENsYXNzQXR0cmlidXRlcyhuZXcgUmVmbGVjdGlvbkNsYXNzKCRjbGFzc05hbWUpKTsKCiAgICAgICAgZm9yZWFjaCAoJGNsYXNzQXR0cmlidXRlcyBhcyAkYSkgewogICAgICAgICAgICAkYXR0ciA9ICRhIGluc3RhbmNlb2YgUmVwZWF0YWJsZUF0dHJpYnV0ZUNvbGxlY3Rpb24gPyAkYVswXSA6ICRhOwogICAgICAgICAgICBpZiAoaXNzZXQoc2VsZjo6RU5USVRZX0FUVFJJQlVURV9DTEFTU0VTWyRhdHRyOjpjbGFzc10pKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIC8qKgogICAgICoge0Bpbmhlcml0RG9jfQogICAgICoKICAgICAqIEBwc2FsbS1wYXJhbSBjbGFzcy1zdHJpbmc8VD4gJGNsYXNzTmFtZQogICAgICogQHBzYWxtLXBhcmFtIENsYXNzTWV0YWRhdGE8VD4gJG1ldGFkYXRhCiAgICAgKgogICAgICogQHRlbXBsYXRlIFQgb2Ygb2JqZWN0CiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBsb2FkTWV0YWRhdGFGb3JDbGFzcyhzdHJpbmcgJGNsYXNzTmFtZSwgUGVyc2lzdGVuY2VDbGFzc01ldGFkYXRhICRtZXRhZGF0YSk6IHZvaWQKICAgIHsKICAgICAgICAkcmVmbGVjdGlvbkNsYXNzID0gJG1ldGFkYXRhLT5nZXRSZWZsZWN0aW9uQ2xhc3MoKQogICAgICAgICAgICAvLyB0aGlzIGhhcHBlbnMgd2hlbiBydW5uaW5nIGF0dHJpYnV0ZSBkcml2ZXIgaW4gY29tYmluYXRpb24gd2l0aAogICAgICAgICAgICAvLyBzdGF0aWMgcmVmbGVjdGlvbiBzZXJ2aWNlcy4gVGhpcyBpcyBub3QgdGhlIG5pY2VzdCBmaXgKICAgICAgICAgICAgPz8gbmV3IFJlZmxlY3Rpb25DbGFzcygkbWV0YWRhdGEtPm5hbWUpOwoKICAgICAgICAkY2xhc3NBdHRyaWJ1dGVzID0gJHRoaXMtPnJlYWRlci0+Z2V0Q2xhc3NBdHRyaWJ1dGVzKCRyZWZsZWN0aW9uQ2xhc3MpOwoKICAgICAgICAvLyBFdmFsdWF0ZSBFbnRpdHkgYXR0cmlidXRlCiAgICAgICAgaWYgKGlzc2V0KCRjbGFzc0F0dHJpYnV0ZXNbTWFwcGluZ1xFbnRpdHk6OmNsYXNzXSkpIHsKICAgICAgICAgICAgJGVudGl0eUF0dHJpYnV0ZSA9ICRjbGFzc0F0dHJpYnV0ZXNbTWFwcGluZ1xFbnRpdHk6OmNsYXNzXTsKICAgICAgICAgICAgaWYgKCRlbnRpdHlBdHRyaWJ1dGUtPnJlcG9zaXRvcnlDbGFzcyAhPT0gbnVsbCkgewogICAgICAgICAgICAgICAgJG1ldGFkYXRhLT5zZXRDdXN0b21SZXBvc2l0b3J5Q2xhc3MoJGVudGl0eUF0dHJpYnV0ZS0+cmVwb3NpdG9yeUNsYXNzKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCRlbnRpdHlBdHRyaWJ1dGUtPnJlYWRPbmx5KSB7CiAgICAgICAgICAgICAgICAkbWV0YWRhdGEtPm1hcmtSZWFkT25seSgpOwogICAgICAgICAgICB9CiAgICAgICAgfSBlbHNlaWYgKGlzc2V0KCRjbGFzc0F0dHJpYnV0ZXNbTWFwcGluZ1xNYXBwZWRTdXBlcmNsYXNzOjpjbGFzc10pKSB7CiAgICAgICAgICAgICRtYXBwZWRTdXBlcmNsYXNzQXR0cmlidXRlID0gJGNsYXNzQXR0cmlidXRlc1tNYXBwaW5nXE1hcHBlZFN1cGVyY2xhc3M6OmNsYXNzXTsKCiAgICAgICAgICAgICRtZXRhZGF0YS0+c2V0Q3VzdG9tUmVwb3NpdG9yeUNsYXNzKCRtYXBwZWRTdXBlcmNsYXNzQXR0cmlidXRlLT5yZXBvc2l0b3J5Q2xhc3MpOwogICAgICAgICAgICAkbWV0YWRhdGEtPmlzTWFwcGVkU3VwZXJjbGFzcyA9IHRydWU7CiAgICAgICAgfSBlbHNlaWYgKGlzc2V0KCRjbGFzc0F0dHJpYnV0ZXNbTWFwcGluZ1xFbWJlZGRhYmxlOjpjbGFzc10pKSB7CiAgICAgICAgICAgICRtZXRhZGF0YS0+aXNFbWJlZGRlZENsYXNzID0gdHJ1ZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aHJvdyBNYXBwaW5nRXhjZXB0aW9uOjpjbGFzc0lzTm90QVZhbGlkRW50aXR5T3JNYXBwZWRTdXBlckNsYXNzKCRjbGFzc05hbWUpOwogICAgICAgIH0KCiAgICAgICAgJHByaW1hcnlUYWJsZSA9IFtdOwoKICAgICAgICBpZiAoaXNzZXQoJGNsYXNzQXR0cmlidXRlc1tNYXBwaW5nXFRhYmxlOjpjbGFzc10pKSB7CiAgICAgICAgICAgICR0YWJsZUFubm90ICAgICAgICAgICAgID0gJGNsYXNzQXR0cmlidXRlc1tNYXBwaW5nXFRhYmxlOjpjbGFzc107CiAgICAgICAgICAgICRwcmltYXJ5VGFibGVbJ25hbWUnXSAgID0gJHRhYmxlQW5ub3QtPm5hbWU7CiAgICAgICAgICAgICRwcmltYXJ5VGFibGVbJ3NjaGVtYSddID0gJHRhYmxlQW5ub3QtPnNjaGVtYTsKCiAgICAgICAgICAgIGlmICgkdGFibGVBbm5vdC0+b3B0aW9ucykgewogICAgICAgICAgICAgICAgJHByaW1hcnlUYWJsZVsnb3B0aW9ucyddID0gJHRhYmxlQW5ub3QtPm9wdGlvbnM7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChpc3NldCgkY2xhc3NBdHRyaWJ1dGVzW01hcHBpbmdcSW5kZXg6OmNsYXNzXSkpIHsKICAgICAgICAgICAgaWYgKCRtZXRhZGF0YS0+aXNFbWJlZGRlZENsYXNzKSB7CiAgICAgICAgICAgICAgICB0aHJvdyBNYXBwaW5nRXhjZXB0aW9uOjppbnZhbGlkQXR0cmlidXRlT25FbWJlZGRhYmxlKCRtZXRhZGF0YS0+bmFtZSwgTWFwcGluZ1xJbmRleDo6Y2xhc3MpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBmb3JlYWNoICgkY2xhc3NBdHRyaWJ1dGVzW01hcHBpbmdcSW5kZXg6OmNsYXNzXSBhcyAkaWR4ID0+ICRpbmRleEFubm90KSB7CiAgICAgICAgICAgICAgICAkaW5kZXggPSBbXTsKCiAgICAgICAgICAgICAgICBpZiAoISBlbXB0eSgkaW5kZXhBbm5vdC0+Y29sdW1ucykpIHsKICAgICAgICAgICAgICAgICAgICAkaW5kZXhbJ2NvbHVtbnMnXSA9ICRpbmRleEFubm90LT5jb2x1bW5zOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmICghIGVtcHR5KCRpbmRleEFubm90LT5maWVsZHMpKSB7CiAgICAgICAgICAgICAgICAgICAgJGluZGV4WydmaWVsZHMnXSA9ICRpbmRleEFubm90LT5maWVsZHM7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKAogICAgICAgICAgICAgICAgICAgIGlzc2V0KCRpbmRleFsnY29sdW1ucyddLCAkaW5kZXhbJ2ZpZWxkcyddKQogICAgICAgICAgICAgICAgICAgIHx8ICgKICAgICAgICAgICAgICAgICAgICAgICAgISBpc3NldCgkaW5kZXhbJ2NvbHVtbnMnXSkKICAgICAgICAgICAgICAgICAgICAgICAgJiYgISBpc3NldCgkaW5kZXhbJ2ZpZWxkcyddKQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgICAgIHRocm93IE1hcHBpbmdFeGNlcHRpb246OmludmFsaWRJbmRleENvbmZpZ3VyYXRpb24oCiAgICAgICAgICAgICAgICAgICAgICAgICRjbGFzc05hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgIChzdHJpbmcpICgkaW5kZXhBbm5vdC0+bmFtZSA/PyAkaWR4KSwKICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmICghIGVtcHR5KCRpbmRleEFubm90LT5mbGFncykpIHsKICAgICAgICAgICAgICAgICAgICAkaW5kZXhbJ2ZsYWdzJ10gPSAkaW5kZXhBbm5vdC0+ZmxhZ3M7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKCEgZW1wdHkoJGluZGV4QW5ub3QtPm9wdGlvbnMpKSB7CiAgICAgICAgICAgICAgICAgICAgJGluZGV4WydvcHRpb25zJ10gPSAkaW5kZXhBbm5vdC0+b3B0aW9uczsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoISBlbXB0eSgkaW5kZXhBbm5vdC0+bmFtZSkpIHsKICAgICAgICAgICAgICAgICAgICAkcHJpbWFyeVRhYmxlWydpbmRleGVzJ11bJGluZGV4QW5ub3QtPm5hbWVdID0gJGluZGV4OwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAkcHJpbWFyeVRhYmxlWydpbmRleGVzJ11bXSA9ICRpbmRleDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKGlzc2V0KCRjbGFzc0F0dHJpYnV0ZXNbTWFwcGluZ1xVbmlxdWVDb25zdHJhaW50OjpjbGFzc10pKSB7CiAgICAgICAgICAgIGlmICgkbWV0YWRhdGEtPmlzRW1iZWRkZWRDbGFzcykgewogICAgICAgICAgICAgICAgdGhyb3cgTWFwcGluZ0V4Y2VwdGlvbjo6aW52YWxpZEF0dHJpYnV0ZU9uRW1iZWRkYWJsZSgkbWV0YWRhdGEtPm5hbWUsIE1hcHBpbmdcVW5pcXVlQ29uc3RyYWludDo6Y2xhc3MpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBmb3JlYWNoICgkY2xhc3NBdHRyaWJ1dGVzW01hcHBpbmdcVW5pcXVlQ29uc3RyYWludDo6Y2xhc3NdIGFzICRpZHggPT4gJHVuaXF1ZUNvbnN0cmFpbnRBbm5vdCkgewogICAgICAgICAgICAgICAgJHVuaXF1ZUNvbnN0cmFpbnQgPSBbXTsKCiAgICAgICAgICAgICAgICBpZiAoISBlbXB0eSgkdW5pcXVlQ29uc3RyYWludEFubm90LT5jb2x1bW5zKSkgewogICAgICAgICAgICAgICAgICAgICR1bmlxdWVDb25zdHJhaW50Wydjb2x1bW5zJ10gPSAkdW5pcXVlQ29uc3RyYWludEFubm90LT5jb2x1bW5zOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmICghIGVtcHR5KCR1bmlxdWVDb25zdHJhaW50QW5ub3QtPmZpZWxkcykpIHsKICAgICAgICAgICAgICAgICAgICAkdW5pcXVlQ29uc3RyYWludFsnZmllbGRzJ10gPSAkdW5pcXVlQ29uc3RyYWludEFubm90LT5maWVsZHM7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKAogICAgICAgICAgICAgICAgICAgIGlzc2V0KCR1bmlxdWVDb25zdHJhaW50Wydjb2x1bW5zJ10sICR1bmlxdWVDb25zdHJhaW50WydmaWVsZHMnXSkKICAgICAgICAgICAgICAgICAgICB8fCAoCiAgICAgICAgICAgICAgICAgICAgICAgICEgaXNzZXQoJHVuaXF1ZUNvbnN0cmFpbnRbJ2NvbHVtbnMnXSkKICAgICAgICAgICAgICAgICAgICAgICAgJiYgISBpc3NldCgkdW5pcXVlQ29uc3RyYWludFsnZmllbGRzJ10pCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgICAgICAgdGhyb3cgTWFwcGluZ0V4Y2VwdGlvbjo6aW52YWxpZFVuaXF1ZUNvbnN0cmFpbnRDb25maWd1cmF0aW9uKAogICAgICAgICAgICAgICAgICAgICAgICAkY2xhc3NOYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAoc3RyaW5nKSAoJHVuaXF1ZUNvbnN0cmFpbnRBbm5vdC0+bmFtZSA/PyAkaWR4KSwKICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmICghIGVtcHR5KCR1bmlxdWVDb25zdHJhaW50QW5ub3QtPm9wdGlvbnMpKSB7CiAgICAgICAgICAgICAgICAgICAgJHVuaXF1ZUNvbnN0cmFpbnRbJ29wdGlvbnMnXSA9ICR1bmlxdWVDb25zdHJhaW50QW5ub3QtPm9wdGlvbnM7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKCEgZW1wdHkoJHVuaXF1ZUNvbnN0cmFpbnRBbm5vdC0+bmFtZSkpIHsKICAgICAgICAgICAgICAgICAgICAkcHJpbWFyeVRhYmxlWyd1bmlxdWVDb25zdHJhaW50cyddWyR1bmlxdWVDb25zdHJhaW50QW5ub3QtPm5hbWVdID0gJHVuaXF1ZUNvbnN0cmFpbnQ7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICRwcmltYXJ5VGFibGVbJ3VuaXF1ZUNvbnN0cmFpbnRzJ11bXSA9ICR1bmlxdWVDb25zdHJhaW50OwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAkbWV0YWRhdGEtPnNldFByaW1hcnlUYWJsZSgkcHJpbWFyeVRhYmxlKTsKCiAgICAgICAgLy8gRXZhbHVhdGUgI1tDYWNoZV0gYXR0cmlidXRlCiAgICAgICAgaWYgKGlzc2V0KCRjbGFzc0F0dHJpYnV0ZXNbTWFwcGluZ1xDYWNoZTo6Y2xhc3NdKSkgewogICAgICAgICAgICBpZiAoJG1ldGFkYXRhLT5pc0VtYmVkZGVkQ2xhc3MpIHsKICAgICAgICAgICAgICAgIHRocm93IE1hcHBpbmdFeGNlcHRpb246OmludmFsaWRBdHRyaWJ1dGVPbkVtYmVkZGFibGUoJG1ldGFkYXRhLT5uYW1lLCBNYXBwaW5nXENhY2hlOjpjbGFzcyk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICRjYWNoZUF0dHJpYnV0ZSA9ICRjbGFzc0F0dHJpYnV0ZXNbTWFwcGluZ1xDYWNoZTo6Y2xhc3NdOwogICAgICAgICAgICAkY2FjaGVNYXAgICAgICAgPSBbCiAgICAgICAgICAgICAgICAncmVnaW9uJyA9PiAkY2FjaGVBdHRyaWJ1dGUtPnJlZ2lvbiwKICAgICAgICAgICAgICAgICd1c2FnZScgID0+IGNvbnN0YW50KCdEb2N0cmluZVxPUk1cTWFwcGluZ1xDbGFzc01ldGFkYXRhOjpDQUNIRV9VU0FHRV8nIC4gJGNhY2hlQXR0cmlidXRlLT51c2FnZSksCiAgICAgICAgICAgIF07CgogICAgICAgICAgICAkbWV0YWRhdGEtPmVuYWJsZUNhY2hlKCRjYWNoZU1hcCk7CiAgICAgICAgfQoKICAgICAgICAvLyBFdmFsdWF0ZSBJbmhlcml0YW5jZVR5cGUgYXR0cmlidXRlCiAgICAgICAgaWYgKGlzc2V0KCRjbGFzc0F0dHJpYnV0ZXNbTWFwcGluZ1xJbmhlcml0YW5jZVR5cGU6OmNsYXNzXSkpIHsKICAgICAgICAgICAgaWYgKCRtZXRhZGF0YS0+aXNFbWJlZGRlZENsYXNzKSB7CiAgICAgICAgICAgICAgICB0aHJvdyBNYXBwaW5nRXhjZXB0aW9uOjppbnZhbGlkQXR0cmlidXRlT25FbWJlZGRhYmxlKCRtZXRhZGF0YS0+bmFtZSwgTWFwcGluZ1xJbmhlcml0YW5jZVR5cGU6OmNsYXNzKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgJGluaGVyaXRhbmNlVHlwZUF0dHJpYnV0ZSA9ICRjbGFzc0F0dHJpYnV0ZXNbTWFwcGluZ1xJbmhlcml0YW5jZVR5cGU6OmNsYXNzXTsKCiAgICAgICAgICAgICRtZXRhZGF0YS0+c2V0SW5oZXJpdGFuY2VUeXBlKAogICAgICAgICAgICAgICAgY29uc3RhbnQoJ0RvY3RyaW5lXE9STVxNYXBwaW5nXENsYXNzTWV0YWRhdGE6OklOSEVSSVRBTkNFX1RZUEVfJyAuICRpbmhlcml0YW5jZVR5cGVBdHRyaWJ1dGUtPnZhbHVlKSwKICAgICAgICAgICAgKTsKCiAgICAgICAgICAgIGlmICgkbWV0YWRhdGEtPmluaGVyaXRhbmNlVHlwZSAhPT0gQ2xhc3NNZXRhZGF0YTo6SU5IRVJJVEFOQ0VfVFlQRV9OT05FKSB7CiAgICAgICAgICAgICAgICAvLyBFdmFsdWF0ZSBEaXNjcmltaW5hdG9yQ29sdW1uIGF0dHJpYnV0ZQogICAgICAgICAgICAgICAgaWYgKGlzc2V0KCRjbGFzc0F0dHJpYnV0ZXNbTWFwcGluZ1xEaXNjcmltaW5hdG9yQ29sdW1uOjpjbGFzc10pKSB7CiAgICAgICAgICAgICAgICAgICAgJGRpc2NyQ29sdW1uQXR0cmlidXRlID0gJGNsYXNzQXR0cmlidXRlc1tNYXBwaW5nXERpc2NyaW1pbmF0b3JDb2x1bW46OmNsYXNzXTsKICAgICAgICAgICAgICAgICAgICBhc3NlcnQoJGRpc2NyQ29sdW1uQXR0cmlidXRlIGluc3RhbmNlb2YgTWFwcGluZ1xEaXNjcmltaW5hdG9yQ29sdW1uKTsKCiAgICAgICAgICAgICAgICAgICAgJGNvbHVtbkRlZiA9IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ25hbWUnICAgICAgICAgICAgID0+ICRkaXNjckNvbHVtbkF0dHJpYnV0ZS0+bmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgJ3R5cGUnICAgICAgICAgICAgID0+ICRkaXNjckNvbHVtbkF0dHJpYnV0ZS0+dHlwZSA/PyAnc3RyaW5nJywKICAgICAgICAgICAgICAgICAgICAgICAgJ2xlbmd0aCcgICAgICAgICAgID0+ICRkaXNjckNvbHVtbkF0dHJpYnV0ZS0+bGVuZ3RoID8/IDI1NSwKICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbkRlZmluaXRpb24nID0+ICRkaXNjckNvbHVtbkF0dHJpYnV0ZS0+Y29sdW1uRGVmaW5pdGlvbiwKICAgICAgICAgICAgICAgICAgICAgICAgJ2VudW1UeXBlJyAgICAgICAgID0+ICRkaXNjckNvbHVtbkF0dHJpYnV0ZS0+ZW51bVR5cGUsCiAgICAgICAgICAgICAgICAgICAgXTsKCiAgICAgICAgICAgICAgICAgICAgaWYgKCRkaXNjckNvbHVtbkF0dHJpYnV0ZS0+b3B0aW9ucykgewogICAgICAgICAgICAgICAgICAgICAgICAkY29sdW1uRGVmWydvcHRpb25zJ10gPSAkZGlzY3JDb2x1bW5BdHRyaWJ1dGUtPm9wdGlvbnM7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAkbWV0YWRhdGEtPnNldERpc2NyaW1pbmF0b3JDb2x1bW4oJGNvbHVtbkRlZik7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICRtZXRhZGF0YS0+c2V0RGlzY3JpbWluYXRvckNvbHVtbihbJ25hbWUnID0+ICdkdHlwZScsICd0eXBlJyA9PiAnc3RyaW5nJywgJ2xlbmd0aCcgPT4gMjU1XSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLy8gRXZhbHVhdGUgRGlzY3JpbWluYXRvck1hcCBhdHRyaWJ1dGUKICAgICAgICAgICAgICAgIGlmIChpc3NldCgkY2xhc3NBdHRyaWJ1dGVzW01hcHBpbmdcRGlzY3JpbWluYXRvck1hcDo6Y2xhc3NdKSkgewogICAgICAgICAgICAgICAgICAgICRkaXNjck1hcEF0dHJpYnV0ZSA9ICRjbGFzc0F0dHJpYnV0ZXNbTWFwcGluZ1xEaXNjcmltaW5hdG9yTWFwOjpjbGFzc107CiAgICAgICAgICAgICAgICAgICAgJG1ldGFkYXRhLT5zZXREaXNjcmltaW5hdG9yTWFwKCRkaXNjck1hcEF0dHJpYnV0ZS0+dmFsdWUpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAvLyBFdmFsdWF0ZSBEb2N0cmluZUNoYW5nZVRyYWNraW5nUG9saWN5IGF0dHJpYnV0ZQogICAgICAgIGlmIChpc3NldCgkY2xhc3NBdHRyaWJ1dGVzW01hcHBpbmdcQ2hhbmdlVHJhY2tpbmdQb2xpY3k6OmNsYXNzXSkpIHsKICAgICAgICAgICAgaWYgKCRtZXRhZGF0YS0+aXNFbWJlZGRlZENsYXNzKSB7CiAgICAgICAgICAgICAgICB0aHJvdyBNYXBwaW5nRXhjZXB0aW9uOjppbnZhbGlkQXR0cmlidXRlT25FbWJlZGRhYmxlKCRtZXRhZGF0YS0+bmFtZSwgTWFwcGluZ1xDaGFuZ2VUcmFja2luZ1BvbGljeTo6Y2xhc3MpOwogICAgICAgICAgICB9CgogICAgICAgICAgICAkY2hhbmdlVHJhY2tpbmdBdHRyaWJ1dGUgPSAkY2xhc3NBdHRyaWJ1dGVzW01hcHBpbmdcQ2hhbmdlVHJhY2tpbmdQb2xpY3k6OmNsYXNzXTsKICAgICAgICAgICAgJG1ldGFkYXRhLT5zZXRDaGFuZ2VUcmFja2luZ1BvbGljeShjb25zdGFudCgnRG9jdHJpbmVcT1JNXE1hcHBpbmdcQ2xhc3NNZXRhZGF0YTo6Q0hBTkdFVFJBQ0tJTkdfJyAuICRjaGFuZ2VUcmFja2luZ0F0dHJpYnV0ZS0+dmFsdWUpKTsKICAgICAgICB9CgogICAgICAgIGZvcmVhY2ggKCRyZWZsZWN0aW9uQ2xhc3MtPmdldFByb3BlcnRpZXMoKSBhcyAkcHJvcGVydHkpIHsKICAgICAgICAgICAgYXNzZXJ0KCRwcm9wZXJ0eSBpbnN0YW5jZW9mIFJlZmxlY3Rpb25Qcm9wZXJ0eSk7CgogICAgICAgICAgICBpZiAoJHRoaXMtPmlzUmVwZWF0ZWRQcm9wZXJ0eURlY2xhcmF0aW9uKCRwcm9wZXJ0eSwgJG1ldGFkYXRhKSkgewogICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICRtYXBwaW5nICAgICAgICAgICAgICA9IFtdOwogICAgICAgICAgICAkbWFwcGluZ1snZmllbGROYW1lJ10gPSAkcHJvcGVydHktPm5hbWU7CgogICAgICAgICAgICAvLyBFdmFsdWF0ZSAjW0NhY2hlXSBhdHRyaWJ1dGUKICAgICAgICAgICAgJGNhY2hlQXR0cmlidXRlID0gJHRoaXMtPnJlYWRlci0+Z2V0UHJvcGVydHlBdHRyaWJ1dGUoJHByb3BlcnR5LCBNYXBwaW5nXENhY2hlOjpjbGFzcyk7CiAgICAgICAgICAgIGlmICgkY2FjaGVBdHRyaWJ1dGUgIT09IG51bGwpIHsKICAgICAgICAgICAgICAgIGFzc2VydCgkY2FjaGVBdHRyaWJ1dGUgaW5zdGFuY2VvZiBNYXBwaW5nXENhY2hlKTsKCiAgICAgICAgICAgICAgICAkbWFwcGluZ1snY2FjaGUnXSA9ICRtZXRhZGF0YS0+Z2V0QXNzb2NpYXRpb25DYWNoZURlZmF1bHRzKAogICAgICAgICAgICAgICAgICAgICRtYXBwaW5nWydmaWVsZE5hbWUnXSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICd1c2FnZScgID0+IChpbnQpIGNvbnN0YW50KCdEb2N0cmluZVxPUk1cTWFwcGluZ1xDbGFzc01ldGFkYXRhOjpDQUNIRV9VU0FHRV8nIC4gJGNhY2hlQXR0cmlidXRlLT51c2FnZSksCiAgICAgICAgICAgICAgICAgICAgICAgICdyZWdpb24nID0+ICRjYWNoZUF0dHJpYnV0ZS0+cmVnaW9uLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICApOwogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBDaGVjayBmb3IgSm9pbkNvbHVtbi9Kb2luQ29sdW1ucyBhdHRyaWJ1dGVzCiAgICAgICAgICAgICRqb2luQ29sdW1ucyA9IFtdOwoKICAgICAgICAgICAgJGpvaW5Db2x1bW5BdHRyaWJ1dGVzID0gJHRoaXMtPnJlYWRlci0+Z2V0UHJvcGVydHlBdHRyaWJ1dGVDb2xsZWN0aW9uKCRwcm9wZXJ0eSwgTWFwcGluZ1xKb2luQ29sdW1uOjpjbGFzcyk7CgogICAgICAgICAgICBmb3JlYWNoICgkam9pbkNvbHVtbkF0dHJpYnV0ZXMgYXMgJGpvaW5Db2x1bW5BdHRyaWJ1dGUpIHsKICAgICAgICAgICAgICAgICRqb2luQ29sdW1uc1tdID0gJHRoaXMtPmpvaW5Db2x1bW5Ub0FycmF5KCRqb2luQ29sdW1uQXR0cmlidXRlKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gRmllbGQgY2FuIG9ubHkgYmUgYXR0cmlidXRlZCB3aXRoIG9uZSBvZjoKICAgICAgICAgICAgLy8gQ29sdW1uLCBPbmVUb09uZSwgT25lVG9NYW55LCBNYW55VG9PbmUsIE1hbnlUb01hbnksIEVtYmVkZGVkCiAgICAgICAgICAgICRjb2x1bW5BdHRyaWJ1dGUgICAgID0gJHRoaXMtPnJlYWRlci0+Z2V0UHJvcGVydHlBdHRyaWJ1dGUoJHByb3BlcnR5LCBNYXBwaW5nXENvbHVtbjo6Y2xhc3MpOwogICAgICAgICAgICAkb25lVG9PbmVBdHRyaWJ1dGUgICA9ICR0aGlzLT5yZWFkZXItPmdldFByb3BlcnR5QXR0cmlidXRlKCRwcm9wZXJ0eSwgTWFwcGluZ1xPbmVUb09uZTo6Y2xhc3MpOwogICAgICAgICAgICAkb25lVG9NYW55QXR0cmlidXRlICA9ICR0aGlzLT5yZWFkZXItPmdldFByb3BlcnR5QXR0cmlidXRlKCRwcm9wZXJ0eSwgTWFwcGluZ1xPbmVUb01hbnk6OmNsYXNzKTsKICAgICAgICAgICAgJG1hbnlUb09uZUF0dHJpYnV0ZSAgPSAkdGhpcy0+cmVhZGVyLT5nZXRQcm9wZXJ0eUF0dHJpYnV0ZSgkcHJvcGVydHksIE1hcHBpbmdcTWFueVRvT25lOjpjbGFzcyk7CiAgICAgICAgICAgICRtYW55VG9NYW55QXR0cmlidXRlID0gJHRoaXMtPnJlYWRlci0+Z2V0UHJvcGVydHlBdHRyaWJ1dGUoJHByb3BlcnR5LCBNYXBwaW5nXE1hbnlUb01hbnk6OmNsYXNzKTsKICAgICAgICAgICAgJGVtYmVkZGVkQXR0cmlidXRlICAgPSAkdGhpcy0+cmVhZGVyLT5nZXRQcm9wZXJ0eUF0dHJpYnV0ZSgkcHJvcGVydHksIE1hcHBpbmdcRW1iZWRkZWQ6OmNsYXNzKTsKCiAgICAgICAgICAgIGlmICgkY29sdW1uQXR0cmlidXRlICE9PSBudWxsKSB7CiAgICAgICAgICAgICAgICAkbWFwcGluZyA9ICR0aGlzLT5jb2x1bW5Ub0FycmF5KCRwcm9wZXJ0eS0+bmFtZSwgJGNvbHVtbkF0dHJpYnV0ZSk7CgogICAgICAgICAgICAgICAgaWYgKCR0aGlzLT5yZWFkZXItPmdldFByb3BlcnR5QXR0cmlidXRlKCRwcm9wZXJ0eSwgTWFwcGluZ1xJZDo6Y2xhc3MpKSB7CiAgICAgICAgICAgICAgICAgICAgJG1hcHBpbmdbJ2lkJ10gPSB0cnVlOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICRnZW5lcmF0ZWRWYWx1ZUF0dHJpYnV0ZSA9ICR0aGlzLT5yZWFkZXItPmdldFByb3BlcnR5QXR0cmlidXRlKCRwcm9wZXJ0eSwgTWFwcGluZ1xHZW5lcmF0ZWRWYWx1ZTo6Y2xhc3MpOwoKICAgICAgICAgICAgICAgIGlmICgkZ2VuZXJhdGVkVmFsdWVBdHRyaWJ1dGUgIT09IG51bGwpIHsKICAgICAgICAgICAgICAgICAgICAkbWV0YWRhdGEtPnNldElkR2VuZXJhdG9yVHlwZShjb25zdGFudCgnRG9jdHJpbmVcT1JNXE1hcHBpbmdcQ2xhc3NNZXRhZGF0YTo6R0VORVJBVE9SX1RZUEVfJyAuICRnZW5lcmF0ZWRWYWx1ZUF0dHJpYnV0ZS0+c3RyYXRlZ3kpKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoJHRoaXMtPnJlYWRlci0+Z2V0UHJvcGVydHlBdHRyaWJ1dGUoJHByb3BlcnR5LCBNYXBwaW5nXFZlcnNpb246OmNsYXNzKSkgewogICAgICAgICAgICAgICAgICAgICRtZXRhZGF0YS0+c2V0VmVyc2lvbk1hcHBpbmcoJG1hcHBpbmcpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICRtZXRhZGF0YS0+bWFwRmllbGQoJG1hcHBpbmcpOwoKICAgICAgICAgICAgICAgIC8vIENoZWNrIGZvciBTZXF1ZW5jZUdlbmVyYXRvci9UYWJsZUdlbmVyYXRvciBkZWZpbml0aW9uCiAgICAgICAgICAgICAgICAkc2VxR2VuZXJhdG9yQXR0cmlidXRlICAgID0gJHRoaXMtPnJlYWRlci0+Z2V0UHJvcGVydHlBdHRyaWJ1dGUoJHByb3BlcnR5LCBNYXBwaW5nXFNlcXVlbmNlR2VuZXJhdG9yOjpjbGFzcyk7CiAgICAgICAgICAgICAgICAkY3VzdG9tR2VuZXJhdG9yQXR0cmlidXRlID0gJHRoaXMtPnJlYWRlci0+Z2V0UHJvcGVydHlBdHRyaWJ1dGUoJHByb3BlcnR5LCBNYXBwaW5nXEN1c3RvbUlkR2VuZXJhdG9yOjpjbGFzcyk7CgogICAgICAgICAgICAgICAgaWYgKCRzZXFHZW5lcmF0b3JBdHRyaWJ1dGUgIT09IG51bGwpIHsKICAgICAgICAgICAgICAgICAgICAkbWV0YWRhdGEtPnNldFNlcXVlbmNlR2VuZXJhdG9yRGVmaW5pdGlvbigKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3NlcXVlbmNlTmFtZScgPT4gJHNlcUdlbmVyYXRvckF0dHJpYnV0ZS0+c2VxdWVuY2VOYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2FsbG9jYXRpb25TaXplJyA9PiAkc2VxR2VuZXJhdG9yQXR0cmlidXRlLT5hbGxvY2F0aW9uU2l6ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdpbml0aWFsVmFsdWUnID0+ICRzZXFHZW5lcmF0b3JBdHRyaWJ1dGUtPmluaXRpYWxWYWx1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgfSBlbHNlaWYgKCRjdXN0b21HZW5lcmF0b3JBdHRyaWJ1dGUgIT09IG51bGwpIHsKICAgICAgICAgICAgICAgICAgICAkbWV0YWRhdGEtPnNldEN1c3RvbUdlbmVyYXRvckRlZmluaXRpb24oCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdjbGFzcycgPT4gJGN1c3RvbUdlbmVyYXRvckF0dHJpYnV0ZS0+Y2xhc3MsCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlaWYgKCRvbmVUb09uZUF0dHJpYnV0ZSAhPT0gbnVsbCkgewogICAgICAgICAgICAgICAgaWYgKCRtZXRhZGF0YS0+aXNFbWJlZGRlZENsYXNzKSB7CiAgICAgICAgICAgICAgICAgICAgdGhyb3cgTWFwcGluZ0V4Y2VwdGlvbjo6aW52YWxpZEF0dHJpYnV0ZU9uRW1iZWRkYWJsZSgkbWV0YWRhdGEtPm5hbWUsIE1hcHBpbmdcT25lVG9PbmU6OmNsYXNzKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoJHRoaXMtPnJlYWRlci0+Z2V0UHJvcGVydHlBdHRyaWJ1dGUoJHByb3BlcnR5LCBNYXBwaW5nXElkOjpjbGFzcykpIHsKICAgICAgICAgICAgICAgICAgICAkbWFwcGluZ1snaWQnXSA9IHRydWU7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgJG1hcHBpbmdbJ3RhcmdldEVudGl0eSddICA9ICRvbmVUb09uZUF0dHJpYnV0ZS0+dGFyZ2V0RW50aXR5OwogICAgICAgICAgICAgICAgJG1hcHBpbmdbJ2pvaW5Db2x1bW5zJ10gICA9ICRqb2luQ29sdW1uczsKICAgICAgICAgICAgICAgICRtYXBwaW5nWydtYXBwZWRCeSddICAgICAgPSAkb25lVG9PbmVBdHRyaWJ1dGUtPm1hcHBlZEJ5OwogICAgICAgICAgICAgICAgJG1hcHBpbmdbJ2ludmVyc2VkQnknXSAgICA9ICRvbmVUb09uZUF0dHJpYnV0ZS0+aW52ZXJzZWRCeTsKICAgICAgICAgICAgICAgICRtYXBwaW5nWydjYXNjYWRlJ10gICAgICAgPSAkb25lVG9PbmVBdHRyaWJ1dGUtPmNhc2NhZGU7CiAgICAgICAgICAgICAgICAkbWFwcGluZ1snb3JwaGFuUmVtb3ZhbCddID0gJG9uZVRvT25lQXR0cmlidXRlLT5vcnBoYW5SZW1vdmFsOwogICAgICAgICAgICAgICAgJG1hcHBpbmdbJ2ZldGNoJ10gICAgICAgICA9ICR0aGlzLT5nZXRGZXRjaE1vZGUoJGNsYXNzTmFtZSwgJG9uZVRvT25lQXR0cmlidXRlLT5mZXRjaCk7CiAgICAgICAgICAgICAgICAkbWV0YWRhdGEtPm1hcE9uZVRvT25lKCRtYXBwaW5nKTsKICAgICAgICAgICAgfSBlbHNlaWYgKCRvbmVUb01hbnlBdHRyaWJ1dGUgIT09IG51bGwpIHsKICAgICAgICAgICAgICAgIGlmICgkbWV0YWRhdGEtPmlzRW1iZWRkZWRDbGFzcykgewogICAgICAgICAgICAgICAgICAgIHRocm93IE1hcHBpbmdFeGNlcHRpb246OmludmFsaWRBdHRyaWJ1dGVPbkVtYmVkZGFibGUoJG1ldGFkYXRhLT5uYW1lLCBNYXBwaW5nXE9uZVRvTWFueTo6Y2xhc3MpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICRtYXBwaW5nWydtYXBwZWRCeSddICAgICAgPSAkb25lVG9NYW55QXR0cmlidXRlLT5tYXBwZWRCeTsKICAgICAgICAgICAgICAgICRtYXBwaW5nWyd0YXJnZXRFbnRpdHknXSAgPSAkb25lVG9NYW55QXR0cmlidXRlLT50YXJnZXRFbnRpdHk7CiAgICAgICAgICAgICAgICAkbWFwcGluZ1snY2FzY2FkZSddICAgICAgID0gJG9uZVRvTWFueUF0dHJpYnV0ZS0+Y2FzY2FkZTsKICAgICAgICAgICAgICAgICRtYXBwaW5nWydpbmRleEJ5J10gICAgICAgPSAkb25lVG9NYW55QXR0cmlidXRlLT5pbmRleEJ5OwogICAgICAgICAgICAgICAgJG1hcHBpbmdbJ29ycGhhblJlbW92YWwnXSA9ICRvbmVUb01hbnlBdHRyaWJ1dGUtPm9ycGhhblJlbW92YWw7CiAgICAgICAgICAgICAgICAkbWFwcGluZ1snZmV0Y2gnXSAgICAgICAgID0gJHRoaXMtPmdldEZldGNoTW9kZSgkY2xhc3NOYW1lLCAkb25lVG9NYW55QXR0cmlidXRlLT5mZXRjaCk7CgogICAgICAgICAgICAgICAgJG9yZGVyQnlBdHRyaWJ1dGUgPSAkdGhpcy0+cmVhZGVyLT5nZXRQcm9wZXJ0eUF0dHJpYnV0ZSgkcHJvcGVydHksIE1hcHBpbmdcT3JkZXJCeTo6Y2xhc3MpOwoKICAgICAgICAgICAgICAgIGlmICgkb3JkZXJCeUF0dHJpYnV0ZSAhPT0gbnVsbCkgewogICAgICAgICAgICAgICAgICAgICRtYXBwaW5nWydvcmRlckJ5J10gPSAkb3JkZXJCeUF0dHJpYnV0ZS0+dmFsdWU7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgJG1ldGFkYXRhLT5tYXBPbmVUb01hbnkoJG1hcHBpbmcpOwogICAgICAgICAgICB9IGVsc2VpZiAoJG1hbnlUb09uZUF0dHJpYnV0ZSAhPT0gbnVsbCkgewogICAgICAgICAgICAgICAgaWYgKCRtZXRhZGF0YS0+aXNFbWJlZGRlZENsYXNzKSB7CiAgICAgICAgICAgICAgICAgICAgdGhyb3cgTWFwcGluZ0V4Y2VwdGlvbjo6aW52YWxpZEF0dHJpYnV0ZU9uRW1iZWRkYWJsZSgkbWV0YWRhdGEtPm5hbWUsIE1hcHBpbmdcT25lVG9NYW55OjpjbGFzcyk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgJGlkQXR0cmlidXRlID0gJHRoaXMtPnJlYWRlci0+Z2V0UHJvcGVydHlBdHRyaWJ1dGUoJHByb3BlcnR5LCBNYXBwaW5nXElkOjpjbGFzcyk7CgogICAgICAgICAgICAgICAgaWYgKCRpZEF0dHJpYnV0ZSAhPT0gbnVsbCkgewogICAgICAgICAgICAgICAgICAgICRtYXBwaW5nWydpZCddID0gdHJ1ZTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAkbWFwcGluZ1snam9pbkNvbHVtbnMnXSAgPSAkam9pbkNvbHVtbnM7CiAgICAgICAgICAgICAgICAkbWFwcGluZ1snY2FzY2FkZSddICAgICAgPSAkbWFueVRvT25lQXR0cmlidXRlLT5jYXNjYWRlOwogICAgICAgICAgICAgICAgJG1hcHBpbmdbJ2ludmVyc2VkQnknXSAgID0gJG1hbnlUb09uZUF0dHJpYnV0ZS0+aW52ZXJzZWRCeTsKICAgICAgICAgICAgICAgICRtYXBwaW5nWyd0YXJnZXRFbnRpdHknXSA9ICRtYW55VG9PbmVBdHRyaWJ1dGUtPnRhcmdldEVudGl0eTsKICAgICAgICAgICAgICAgICRtYXBwaW5nWydmZXRjaCddICAgICAgICA9ICR0aGlzLT5nZXRGZXRjaE1vZGUoJGNsYXNzTmFtZSwgJG1hbnlUb09uZUF0dHJpYnV0ZS0+ZmV0Y2gpOwogICAgICAgICAgICAgICAgJG1ldGFkYXRhLT5tYXBNYW55VG9PbmUoJG1hcHBpbmcpOwogICAgICAgICAgICB9IGVsc2VpZiAoJG1hbnlUb01hbnlBdHRyaWJ1dGUgIT09IG51bGwpIHsKICAgICAgICAgICAgICAgIGlmICgkbWV0YWRhdGEtPmlzRW1iZWRkZWRDbGFzcykgewogICAgICAgICAgICAgICAgICAgIHRocm93IE1hcHBpbmdFeGNlcHRpb246OmludmFsaWRBdHRyaWJ1dGVPbkVtYmVkZGFibGUoJG1ldGFkYXRhLT5uYW1lLCBNYXBwaW5nXE1hbnlUb01hbnk6OmNsYXNzKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAkam9pblRhYmxlICAgICAgICAgID0gW107CiAgICAgICAgICAgICAgICAkam9pblRhYmxlQXR0cmlidXRlID0gJHRoaXMtPnJlYWRlci0+Z2V0UHJvcGVydHlBdHRyaWJ1dGUoJHByb3BlcnR5LCBNYXBwaW5nXEpvaW5UYWJsZTo6Y2xhc3MpOwoKICAgICAgICAgICAgICAgIGlmICgkam9pblRhYmxlQXR0cmlidXRlICE9PSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgJGpvaW5UYWJsZSA9IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ25hbWUnID0+ICRqb2luVGFibGVBdHRyaWJ1dGUtPm5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICdzY2hlbWEnID0+ICRqb2luVGFibGVBdHRyaWJ1dGUtPnNjaGVtYSwKICAgICAgICAgICAgICAgICAgICBdOwoKICAgICAgICAgICAgICAgICAgICBpZiAoJGpvaW5UYWJsZUF0dHJpYnV0ZS0+b3B0aW9ucykgewogICAgICAgICAgICAgICAgICAgICAgICAkam9pblRhYmxlWydvcHRpb25zJ10gPSAkam9pblRhYmxlQXR0cmlidXRlLT5vcHRpb25zOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJGpvaW5UYWJsZUF0dHJpYnV0ZS0+am9pbkNvbHVtbnMgYXMgJGpvaW5Db2x1bW4pIHsKICAgICAgICAgICAgICAgICAgICAgICAgJGpvaW5UYWJsZVsnam9pbkNvbHVtbnMnXVtdID0gJHRoaXMtPmpvaW5Db2x1bW5Ub0FycmF5KCRqb2luQ29sdW1uKTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRqb2luVGFibGVBdHRyaWJ1dGUtPmludmVyc2VKb2luQ29sdW1ucyBhcyAkam9pbkNvbHVtbikgewogICAgICAgICAgICAgICAgICAgICAgICAkam9pblRhYmxlWydpbnZlcnNlSm9pbkNvbHVtbnMnXVtdID0gJHRoaXMtPmpvaW5Db2x1bW5Ub0FycmF5KCRqb2luQ29sdW1uKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgZm9yZWFjaCAoJHRoaXMtPnJlYWRlci0+Z2V0UHJvcGVydHlBdHRyaWJ1dGVDb2xsZWN0aW9uKCRwcm9wZXJ0eSwgTWFwcGluZ1xKb2luQ29sdW1uOjpjbGFzcykgYXMgJGpvaW5Db2x1bW4pIHsKICAgICAgICAgICAgICAgICAgICAkam9pblRhYmxlWydqb2luQ29sdW1ucyddW10gPSAkdGhpcy0+am9pbkNvbHVtblRvQXJyYXkoJGpvaW5Db2x1bW4pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGZvcmVhY2ggKCR0aGlzLT5yZWFkZXItPmdldFByb3BlcnR5QXR0cmlidXRlQ29sbGVjdGlvbigkcHJvcGVydHksIE1hcHBpbmdcSW52ZXJzZUpvaW5Db2x1bW46OmNsYXNzKSBhcyAkam9pbkNvbHVtbikgewogICAgICAgICAgICAgICAgICAgICRqb2luVGFibGVbJ2ludmVyc2VKb2luQ29sdW1ucyddW10gPSAkdGhpcy0+am9pbkNvbHVtblRvQXJyYXkoJGpvaW5Db2x1bW4pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICRtYXBwaW5nWydqb2luVGFibGUnXSAgICAgPSAkam9pblRhYmxlOwogICAgICAgICAgICAgICAgJG1hcHBpbmdbJ3RhcmdldEVudGl0eSddICA9ICRtYW55VG9NYW55QXR0cmlidXRlLT50YXJnZXRFbnRpdHk7CiAgICAgICAgICAgICAgICAkbWFwcGluZ1snbWFwcGVkQnknXSAgICAgID0gJG1hbnlUb01hbnlBdHRyaWJ1dGUtPm1hcHBlZEJ5OwogICAgICAgICAgICAgICAgJG1hcHBpbmdbJ2ludmVyc2VkQnknXSAgICA9ICRtYW55VG9NYW55QXR0cmlidXRlLT5pbnZlcnNlZEJ5OwogICAgICAgICAgICAgICAgJG1hcHBpbmdbJ2Nhc2NhZGUnXSAgICAgICA9ICRtYW55VG9NYW55QXR0cmlidXRlLT5jYXNjYWRlOwogICAgICAgICAgICAgICAgJG1hcHBpbmdbJ2luZGV4QnknXSAgICAgICA9ICRtYW55VG9NYW55QXR0cmlidXRlLT5pbmRleEJ5OwogICAgICAgICAgICAgICAgJG1hcHBpbmdbJ29ycGhhblJlbW92YWwnXSA9ICRtYW55VG9NYW55QXR0cmlidXRlLT5vcnBoYW5SZW1vdmFsOwogICAgICAgICAgICAgICAgJG1hcHBpbmdbJ2ZldGNoJ10gICAgICAgICA9ICR0aGlzLT5nZXRGZXRjaE1vZGUoJGNsYXNzTmFtZSwgJG1hbnlUb01hbnlBdHRyaWJ1dGUtPmZldGNoKTsKCiAgICAgICAgICAgICAgICAkb3JkZXJCeUF0dHJpYnV0ZSA9ICR0aGlzLT5yZWFkZXItPmdldFByb3BlcnR5QXR0cmlidXRlKCRwcm9wZXJ0eSwgTWFwcGluZ1xPcmRlckJ5OjpjbGFzcyk7CgogICAgICAgICAgICAgICAgaWYgKCRvcmRlckJ5QXR0cmlidXRlICE9PSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgJG1hcHBpbmdbJ29yZGVyQnknXSA9ICRvcmRlckJ5QXR0cmlidXRlLT52YWx1ZTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAkbWV0YWRhdGEtPm1hcE1hbnlUb01hbnkoJG1hcHBpbmcpOwogICAgICAgICAgICB9IGVsc2VpZiAoJGVtYmVkZGVkQXR0cmlidXRlICE9PSBudWxsKSB7CiAgICAgICAgICAgICAgICAkbWFwcGluZ1snY2xhc3MnXSAgICAgICAgPSAkZW1iZWRkZWRBdHRyaWJ1dGUtPmNsYXNzOwogICAgICAgICAgICAgICAgJG1hcHBpbmdbJ2NvbHVtblByZWZpeCddID0gJGVtYmVkZGVkQXR0cmlidXRlLT5jb2x1bW5QcmVmaXg7CgogICAgICAgICAgICAgICAgJG1ldGFkYXRhLT5tYXBFbWJlZGRlZCgkbWFwcGluZyk7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIC8vIEV2YWx1YXRlIEFzc29jaWF0aW9uT3ZlcnJpZGVzIGF0dHJpYnV0ZQogICAgICAgIGlmIChpc3NldCgkY2xhc3NBdHRyaWJ1dGVzW01hcHBpbmdcQXNzb2NpYXRpb25PdmVycmlkZXM6OmNsYXNzXSkpIHsKICAgICAgICAgICAgaWYgKCRtZXRhZGF0YS0+aXNFbWJlZGRlZENsYXNzKSB7CiAgICAgICAgICAgICAgICB0aHJvdyBNYXBwaW5nRXhjZXB0aW9uOjppbnZhbGlkQXR0cmlidXRlT25FbWJlZGRhYmxlKCRtZXRhZGF0YS0+bmFtZSwgTWFwcGluZ1xBc3NvY2lhdGlvbk92ZXJyaWRlOjpjbGFzcyk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICRhc3NvY2lhdGlvbk92ZXJyaWRlID0gJGNsYXNzQXR0cmlidXRlc1tNYXBwaW5nXEFzc29jaWF0aW9uT3ZlcnJpZGVzOjpjbGFzc107CgogICAgICAgICAgICBmb3JlYWNoICgkYXNzb2NpYXRpb25PdmVycmlkZS0+b3ZlcnJpZGVzIGFzICRhc3NvY2lhdGlvbk92ZXJyaWRlKSB7CiAgICAgICAgICAgICAgICAkb3ZlcnJpZGUgID0gW107CiAgICAgICAgICAgICAgICAkZmllbGROYW1lID0gJGFzc29jaWF0aW9uT3ZlcnJpZGUtPm5hbWU7CgogICAgICAgICAgICAgICAgLy8gQ2hlY2sgZm9yIEpvaW5Db2x1bW4vSm9pbkNvbHVtbnMgYXR0cmlidXRlcwogICAgICAgICAgICAgICAgaWYgKCRhc3NvY2lhdGlvbk92ZXJyaWRlLT5qb2luQ29sdW1ucykgewogICAgICAgICAgICAgICAgICAgICRqb2luQ29sdW1ucyA9IFtdOwoKICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkYXNzb2NpYXRpb25PdmVycmlkZS0+am9pbkNvbHVtbnMgYXMgJGpvaW5Db2x1bW4pIHsKICAgICAgICAgICAgICAgICAgICAgICAgJGpvaW5Db2x1bW5zW10gPSAkdGhpcy0+am9pbkNvbHVtblRvQXJyYXkoJGpvaW5Db2x1bW4pOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgJG92ZXJyaWRlWydqb2luQ29sdW1ucyddID0gJGpvaW5Db2x1bW5zOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmICgkYXNzb2NpYXRpb25PdmVycmlkZS0+aW52ZXJzZUpvaW5Db2x1bW5zKSB7CiAgICAgICAgICAgICAgICAgICAgJGpvaW5Db2x1bW5zID0gW107CgogICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRhc3NvY2lhdGlvbk92ZXJyaWRlLT5pbnZlcnNlSm9pbkNvbHVtbnMgYXMgJGpvaW5Db2x1bW4pIHsKICAgICAgICAgICAgICAgICAgICAgICAgJGpvaW5Db2x1bW5zW10gPSAkdGhpcy0+am9pbkNvbHVtblRvQXJyYXkoJGpvaW5Db2x1bW4pOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgJG92ZXJyaWRlWydpbnZlcnNlSm9pbkNvbHVtbnMnXSA9ICRqb2luQ29sdW1uczsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvLyBDaGVjayBmb3IgSm9pblRhYmxlIGF0dHJpYnV0ZXMKICAgICAgICAgICAgICAgIGlmICgkYXNzb2NpYXRpb25PdmVycmlkZS0+am9pblRhYmxlKSB7CiAgICAgICAgICAgICAgICAgICAgJGpvaW5UYWJsZUFubm90ID0gJGFzc29jaWF0aW9uT3ZlcnJpZGUtPmpvaW5UYWJsZTsKICAgICAgICAgICAgICAgICAgICAkam9pblRhYmxlICAgICAgPSBbCiAgICAgICAgICAgICAgICAgICAgICAgICduYW1lJyAgICAgID0+ICRqb2luVGFibGVBbm5vdC0+bmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgJ3NjaGVtYScgICAgPT4gJGpvaW5UYWJsZUFubm90LT5zY2hlbWEsCiAgICAgICAgICAgICAgICAgICAgICAgICdqb2luQ29sdW1ucycgPT4gJG92ZXJyaWRlWydqb2luQ29sdW1ucyddID8/IFtdLAogICAgICAgICAgICAgICAgICAgICAgICAnaW52ZXJzZUpvaW5Db2x1bW5zJyA9PiAkb3ZlcnJpZGVbJ2ludmVyc2VKb2luQ29sdW1ucyddID8/IFtdLAogICAgICAgICAgICAgICAgICAgIF07CgogICAgICAgICAgICAgICAgICAgIHVuc2V0KCRvdmVycmlkZVsnam9pbkNvbHVtbnMnXSwgJG92ZXJyaWRlWydpbnZlcnNlSm9pbkNvbHVtbnMnXSk7CgogICAgICAgICAgICAgICAgICAgICRvdmVycmlkZVsnam9pblRhYmxlJ10gPSAkam9pblRhYmxlOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIC8vIENoZWNrIGZvciBpbnZlcnNlZEJ5CiAgICAgICAgICAgICAgICBpZiAoJGFzc29jaWF0aW9uT3ZlcnJpZGUtPmludmVyc2VkQnkpIHsKICAgICAgICAgICAgICAgICAgICAkb3ZlcnJpZGVbJ2ludmVyc2VkQnknXSA9ICRhc3NvY2lhdGlvbk92ZXJyaWRlLT5pbnZlcnNlZEJ5OwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIC8vIENoZWNrIGZvciBgZmV0Y2hgCiAgICAgICAgICAgICAgICBpZiAoJGFzc29jaWF0aW9uT3ZlcnJpZGUtPmZldGNoKSB7CiAgICAgICAgICAgICAgICAgICAgJG92ZXJyaWRlWydmZXRjaCddID0gY29uc3RhbnQoQ2xhc3NNZXRhZGF0YTo6Y2xhc3MgLiAnOjpGRVRDSF8nIC4gJGFzc29jaWF0aW9uT3ZlcnJpZGUtPmZldGNoKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAkbWV0YWRhdGEtPnNldEFzc29jaWF0aW9uT3ZlcnJpZGUoJGZpZWxkTmFtZSwgJG92ZXJyaWRlKTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLy8gRXZhbHVhdGUgQXR0cmlidXRlT3ZlcnJpZGVzIGF0dHJpYnV0ZQogICAgICAgIGlmIChpc3NldCgkY2xhc3NBdHRyaWJ1dGVzW01hcHBpbmdcQXR0cmlidXRlT3ZlcnJpZGVzOjpjbGFzc10pKSB7CiAgICAgICAgICAgIGlmICgkbWV0YWRhdGEtPmlzRW1iZWRkZWRDbGFzcykgewogICAgICAgICAgICAgICAgdGhyb3cgTWFwcGluZ0V4Y2VwdGlvbjo6aW52YWxpZEF0dHJpYnV0ZU9uRW1iZWRkYWJsZSgkbWV0YWRhdGEtPm5hbWUsIE1hcHBpbmdcQXR0cmlidXRlT3ZlcnJpZGVzOjpjbGFzcyk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICRhdHRyaWJ1dGVPdmVycmlkZXNBbm5vdCA9ICRjbGFzc0F0dHJpYnV0ZXNbTWFwcGluZ1xBdHRyaWJ1dGVPdmVycmlkZXM6OmNsYXNzXTsKCiAgICAgICAgICAgIGZvcmVhY2ggKCRhdHRyaWJ1dGVPdmVycmlkZXNBbm5vdC0+b3ZlcnJpZGVzIGFzICRhdHRyaWJ1dGVPdmVycmlkZSkgewogICAgICAgICAgICAgICAgJG1hcHBpbmcgPSAkdGhpcy0+Y29sdW1uVG9BcnJheSgkYXR0cmlidXRlT3ZlcnJpZGUtPm5hbWUsICRhdHRyaWJ1dGVPdmVycmlkZS0+Y29sdW1uKTsKCiAgICAgICAgICAgICAgICAkbWV0YWRhdGEtPnNldEF0dHJpYnV0ZU92ZXJyaWRlKCRhdHRyaWJ1dGVPdmVycmlkZS0+bmFtZSwgJG1hcHBpbmcpOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAvLyBFdmFsdWF0ZSBFbnRpdHlMaXN0ZW5lcnMgYXR0cmlidXRlCiAgICAgICAgaWYgKGlzc2V0KCRjbGFzc0F0dHJpYnV0ZXNbTWFwcGluZ1xFbnRpdHlMaXN0ZW5lcnM6OmNsYXNzXSkpIHsKICAgICAgICAgICAgaWYgKCRtZXRhZGF0YS0+aXNFbWJlZGRlZENsYXNzKSB7CiAgICAgICAgICAgICAgICB0aHJvdyBNYXBwaW5nRXhjZXB0aW9uOjppbnZhbGlkQXR0cmlidXRlT25FbWJlZGRhYmxlKCRtZXRhZGF0YS0+bmFtZSwgTWFwcGluZ1xFbnRpdHlMaXN0ZW5lcnM6OmNsYXNzKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgJGVudGl0eUxpc3RlbmVyc0F0dHJpYnV0ZSA9ICRjbGFzc0F0dHJpYnV0ZXNbTWFwcGluZ1xFbnRpdHlMaXN0ZW5lcnM6OmNsYXNzXTsKCiAgICAgICAgICAgIGZvcmVhY2ggKCRlbnRpdHlMaXN0ZW5lcnNBdHRyaWJ1dGUtPnZhbHVlIGFzICRpdGVtKSB7CiAgICAgICAgICAgICAgICAkbGlzdGVuZXJDbGFzc05hbWUgPSAkbWV0YWRhdGEtPmZ1bGx5UXVhbGlmaWVkQ2xhc3NOYW1lKCRpdGVtKTsKCiAgICAgICAgICAgICAgICBpZiAoISBjbGFzc19leGlzdHMoJGxpc3RlbmVyQ2xhc3NOYW1lKSkgewogICAgICAgICAgICAgICAgICAgIHRocm93IE1hcHBpbmdFeGNlcHRpb246OmVudGl0eUxpc3RlbmVyQ2xhc3NOb3RGb3VuZCgkbGlzdGVuZXJDbGFzc05hbWUsICRjbGFzc05hbWUpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICRoYXNNYXBwaW5nICAgID0gZmFsc2U7CiAgICAgICAgICAgICAgICAkbGlzdGVuZXJDbGFzcyA9IG5ldyBSZWZsZWN0aW9uQ2xhc3MoJGxpc3RlbmVyQ2xhc3NOYW1lKTsKCiAgICAgICAgICAgICAgICBmb3JlYWNoICgkbGlzdGVuZXJDbGFzcy0+Z2V0TWV0aG9kcyhSZWZsZWN0aW9uTWV0aG9kOjpJU19QVUJMSUMpIGFzICRtZXRob2QpIHsKICAgICAgICAgICAgICAgICAgICBhc3NlcnQoJG1ldGhvZCBpbnN0YW5jZW9mIFJlZmxlY3Rpb25NZXRob2QpOwogICAgICAgICAgICAgICAgICAgIC8vIGZpbmQgbWV0aG9kIGNhbGxiYWNrcy4KICAgICAgICAgICAgICAgICAgICAkY2FsbGJhY2tzICA9ICR0aGlzLT5nZXRNZXRob2RDYWxsYmFja3MoJG1ldGhvZCk7CiAgICAgICAgICAgICAgICAgICAgJGhhc01hcHBpbmcgPSAkaGFzTWFwcGluZyA/OiAhIGVtcHR5KCRjYWxsYmFja3MpOwoKICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkY2FsbGJhY2tzIGFzICR2YWx1ZSkgewogICAgICAgICAgICAgICAgICAgICAgICAkbWV0YWRhdGEtPmFkZEVudGl0eUxpc3RlbmVyKCR2YWx1ZVsxXSwgJGxpc3RlbmVyQ2xhc3NOYW1lLCAkdmFsdWVbMF0pOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvLyBFdmFsdWF0ZSB0aGUgbGlzdGVuZXIgdXNpbmcgbmFtaW5nIGNvbnZlbnRpb24uCiAgICAgICAgICAgICAgICBpZiAoISAkaGFzTWFwcGluZykgewogICAgICAgICAgICAgICAgICAgIEVudGl0eUxpc3RlbmVyQnVpbGRlcjo6YmluZEVudGl0eUxpc3RlbmVyKCRtZXRhZGF0YSwgJGxpc3RlbmVyQ2xhc3NOYW1lKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLy8gRXZhbHVhdGUgI1tIYXNMaWZlY3ljbGVDYWxsYmFja3NdIGF0dHJpYnV0ZQogICAgICAgIGlmIChpc3NldCgkY2xhc3NBdHRyaWJ1dGVzW01hcHBpbmdcSGFzTGlmZWN5Y2xlQ2FsbGJhY2tzOjpjbGFzc10pKSB7CiAgICAgICAgICAgIGlmICgkbWV0YWRhdGEtPmlzRW1iZWRkZWRDbGFzcykgewogICAgICAgICAgICAgICAgdGhyb3cgTWFwcGluZ0V4Y2VwdGlvbjo6aW52YWxpZEF0dHJpYnV0ZU9uRW1iZWRkYWJsZSgkbWV0YWRhdGEtPm5hbWUsIE1hcHBpbmdcSGFzTGlmZWN5Y2xlQ2FsbGJhY2tzOjpjbGFzcyk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGZvcmVhY2ggKCRyZWZsZWN0aW9uQ2xhc3MtPmdldE1ldGhvZHMoUmVmbGVjdGlvbk1ldGhvZDo6SVNfUFVCTElDKSBhcyAkbWV0aG9kKSB7CiAgICAgICAgICAgICAgICBhc3NlcnQoJG1ldGhvZCBpbnN0YW5jZW9mIFJlZmxlY3Rpb25NZXRob2QpOwogICAgICAgICAgICAgICAgZm9yZWFjaCAoJHRoaXMtPmdldE1ldGhvZENhbGxiYWNrcygkbWV0aG9kKSBhcyAkdmFsdWUpIHsKICAgICAgICAgICAgICAgICAgICAkbWV0YWRhdGEtPmFkZExpZmVjeWNsZUNhbGxiYWNrKCR2YWx1ZVswXSwgJHZhbHVlWzFdKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICAvKioKICAgICAqIEF0dGVtcHRzIHRvIHJlc29sdmUgdGhlIGZldGNoIG1vZGUuCiAgICAgKgogICAgICogQHBhcmFtIGNsYXNzLXN0cmluZyAkY2xhc3NOYW1lIFRoZSBjbGFzcyBuYW1lLgogICAgICogQHBhcmFtIHN0cmluZyAgICAgICAkZmV0Y2hNb2RlIFRoZSBmZXRjaCBtb2RlLgogICAgICoKICAgICAqIEByZXR1cm4gQ2xhc3NNZXRhZGF0YTo6RkVUQ0hfKiBUaGUgZmV0Y2ggbW9kZSBhcyBkZWZpbmVkIGluIENsYXNzTWV0YWRhdGEuCiAgICAgKgogICAgICogQHRocm93cyBNYXBwaW5nRXhjZXB0aW9uIElmIHRoZSBmZXRjaCBtb2RlIGlzIG5vdCB2YWxpZC4KICAgICAqLwogICAgcHJpdmF0ZSBmdW5jdGlvbiBnZXRGZXRjaE1vZGUoc3RyaW5nICRjbGFzc05hbWUsIHN0cmluZyAkZmV0Y2hNb2RlKTogaW50CiAgICB7CiAgICAgICAgaWYgKCEgZGVmaW5lZCgnRG9jdHJpbmVcT1JNXE1hcHBpbmdcQ2xhc3NNZXRhZGF0YTo6RkVUQ0hfJyAuICRmZXRjaE1vZGUpKSB7CiAgICAgICAgICAgIHRocm93IE1hcHBpbmdFeGNlcHRpb246OmludmFsaWRGZXRjaE1vZGUoJGNsYXNzTmFtZSwgJGZldGNoTW9kZSk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gY29uc3RhbnQoJ0RvY3RyaW5lXE9STVxNYXBwaW5nXENsYXNzTWV0YWRhdGE6OkZFVENIXycgLiAkZmV0Y2hNb2RlKTsKICAgIH0KCiAgICAvKioKICAgICAqIEF0dGVtcHRzIHRvIHJlc29sdmUgdGhlIGdlbmVyYXRlZCBtb2RlLgogICAgICoKICAgICAqIEB0aHJvd3MgTWFwcGluZ0V4Y2VwdGlvbiBJZiB0aGUgZmV0Y2ggbW9kZSBpcyBub3QgdmFsaWQuCiAgICAgKi8KICAgIHByaXZhdGUgZnVuY3Rpb24gZ2V0R2VuZXJhdGVkTW9kZShzdHJpbmcgJGdlbmVyYXRlZE1vZGUpOiBpbnQKICAgIHsKICAgICAgICBpZiAoISBkZWZpbmVkKCdEb2N0cmluZVxPUk1cTWFwcGluZ1xDbGFzc01ldGFkYXRhOjpHRU5FUkFURURfJyAuICRnZW5lcmF0ZWRNb2RlKSkgewogICAgICAgICAgICB0aHJvdyBNYXBwaW5nRXhjZXB0aW9uOjppbnZhbGlkR2VuZXJhdGVkTW9kZSgkZ2VuZXJhdGVkTW9kZSk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gY29uc3RhbnQoJ0RvY3RyaW5lXE9STVxNYXBwaW5nXENsYXNzTWV0YWRhdGE6OkdFTkVSQVRFRF8nIC4gJGdlbmVyYXRlZE1vZGUpOwogICAgfQoKICAgIC8qKgogICAgICogUGFyc2VzIHRoZSBnaXZlbiBtZXRob2QuCiAgICAgKgogICAgICogQHJldHVybiBsaXN0PGFycmF5e3N0cmluZywgc3RyaW5nfT4KICAgICAqIEBwc2FsbS1yZXR1cm4gbGlzdDxhcnJheXtzdHJpbmcsIChFdmVudHM6OiopfT4KICAgICAqLwogICAgcHJpdmF0ZSBmdW5jdGlvbiBnZXRNZXRob2RDYWxsYmFja3MoUmVmbGVjdGlvbk1ldGhvZCAkbWV0aG9kKTogYXJyYXkKICAgIHsKICAgICAgICAkY2FsbGJhY2tzICA9IFtdOwogICAgICAgICRhdHRyaWJ1dGVzID0gJHRoaXMtPnJlYWRlci0+Z2V0TWV0aG9kQXR0cmlidXRlcygkbWV0aG9kKTsKCiAgICAgICAgZm9yZWFjaCAoJGF0dHJpYnV0ZXMgYXMgJGF0dHJpYnV0ZSkgewogICAgICAgICAgICBpZiAoJGF0dHJpYnV0ZSBpbnN0YW5jZW9mIE1hcHBpbmdcUHJlUGVyc2lzdCkgewogICAgICAgICAgICAgICAgJGNhbGxiYWNrc1tdID0gWyRtZXRob2QtPm5hbWUsIEV2ZW50czo6cHJlUGVyc2lzdF07CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICgkYXR0cmlidXRlIGluc3RhbmNlb2YgTWFwcGluZ1xQb3N0UGVyc2lzdCkgewogICAgICAgICAgICAgICAgJGNhbGxiYWNrc1tdID0gWyRtZXRob2QtPm5hbWUsIEV2ZW50czo6cG9zdFBlcnNpc3RdOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoJGF0dHJpYnV0ZSBpbnN0YW5jZW9mIE1hcHBpbmdcUHJlVXBkYXRlKSB7CiAgICAgICAgICAgICAgICAkY2FsbGJhY2tzW10gPSBbJG1ldGhvZC0+bmFtZSwgRXZlbnRzOjpwcmVVcGRhdGVdOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoJGF0dHJpYnV0ZSBpbnN0YW5jZW9mIE1hcHBpbmdcUG9zdFVwZGF0ZSkgewogICAgICAgICAgICAgICAgJGNhbGxiYWNrc1tdID0gWyRtZXRob2QtPm5hbWUsIEV2ZW50czo6cG9zdFVwZGF0ZV07CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICgkYXR0cmlidXRlIGluc3RhbmNlb2YgTWFwcGluZ1xQcmVSZW1vdmUpIHsKICAgICAgICAgICAgICAgICRjYWxsYmFja3NbXSA9IFskbWV0aG9kLT5uYW1lLCBFdmVudHM6OnByZVJlbW92ZV07CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICgkYXR0cmlidXRlIGluc3RhbmNlb2YgTWFwcGluZ1xQb3N0UmVtb3ZlKSB7CiAgICAgICAgICAgICAgICAkY2FsbGJhY2tzW10gPSBbJG1ldGhvZC0+bmFtZSwgRXZlbnRzOjpwb3N0UmVtb3ZlXTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCRhdHRyaWJ1dGUgaW5zdGFuY2VvZiBNYXBwaW5nXFBvc3RMb2FkKSB7CiAgICAgICAgICAgICAgICAkY2FsbGJhY2tzW10gPSBbJG1ldGhvZC0+bmFtZSwgRXZlbnRzOjpwb3N0TG9hZF07CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICgkYXR0cmlidXRlIGluc3RhbmNlb2YgTWFwcGluZ1xQcmVGbHVzaCkgewogICAgICAgICAgICAgICAgJGNhbGxiYWNrc1tdID0gWyRtZXRob2QtPm5hbWUsIEV2ZW50czo6cHJlRmx1c2hdOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gJGNhbGxiYWNrczsKICAgIH0KCiAgICAvKioKICAgICAqIFBhcnNlIHRoZSBnaXZlbiBKb2luQ29sdW1uIGFzIGFycmF5CiAgICAgKgogICAgICogQHJldHVybiBtaXhlZFtdCiAgICAgKiBAcHNhbG0tcmV0dXJuIGFycmF5ewogICAgICogICAgICAgICAgICAgICAgICAgbmFtZTogc3RyaW5nfG51bGwsCiAgICAgKiAgICAgICAgICAgICAgICAgICB1bmlxdWU6IGJvb2wsCiAgICAgKiAgICAgICAgICAgICAgICAgICBudWxsYWJsZTogYm9vbCwKICAgICAqICAgICAgICAgICAgICAgICAgIG9uRGVsZXRlOiBtaXhlZCwKICAgICAqICAgICAgICAgICAgICAgICAgIGNvbHVtbkRlZmluaXRpb246IHN0cmluZ3xudWxsLAogICAgICogICAgICAgICAgICAgICAgICAgcmVmZXJlbmNlZENvbHVtbk5hbWU6IHN0cmluZywKICAgICAqICAgICAgICAgICAgICAgICAgIG9wdGlvbnM/OiBhcnJheTxzdHJpbmcsIG1peGVkPgogICAgICogICAgICAgICAgICAgICB9CiAgICAgKi8KICAgIHByaXZhdGUgZnVuY3Rpb24gam9pbkNvbHVtblRvQXJyYXkoTWFwcGluZ1xKb2luQ29sdW1ufE1hcHBpbmdcSW52ZXJzZUpvaW5Db2x1bW4gJGpvaW5Db2x1bW4pOiBhcnJheQogICAgewogICAgICAgICRtYXBwaW5nID0gWwogICAgICAgICAgICAnbmFtZScgPT4gJGpvaW5Db2x1bW4tPm5hbWUsCiAgICAgICAgICAgICd1bmlxdWUnID0+ICRqb2luQ29sdW1uLT51bmlxdWUsCiAgICAgICAgICAgICdudWxsYWJsZScgPT4gJGpvaW5Db2x1bW4tPm51bGxhYmxlLAogICAgICAgICAgICAnb25EZWxldGUnID0+ICRqb2luQ29sdW1uLT5vbkRlbGV0ZSwKICAgICAgICAgICAgJ2NvbHVtbkRlZmluaXRpb24nID0+ICRqb2luQ29sdW1uLT5jb2x1bW5EZWZpbml0aW9uLAogICAgICAgICAgICAncmVmZXJlbmNlZENvbHVtbk5hbWUnID0+ICRqb2luQ29sdW1uLT5yZWZlcmVuY2VkQ29sdW1uTmFtZSwKICAgICAgICBdOwoKICAgICAgICBpZiAoJGpvaW5Db2x1bW4tPm9wdGlvbnMpIHsKICAgICAgICAgICAgJG1hcHBpbmdbJ29wdGlvbnMnXSA9ICRqb2luQ29sdW1uLT5vcHRpb25zOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICRtYXBwaW5nOwogICAgfQoKICAgIC8qKgogICAgICogUGFyc2UgdGhlIGdpdmVuIENvbHVtbiBhcyBhcnJheQogICAgICoKICAgICAqIEByZXR1cm4gbWl4ZWRbXQogICAgICogQHBzYWxtLXJldHVybiBhcnJheXsKICAgICAqICAgICAgICAgICAgICAgICAgIGZpZWxkTmFtZTogc3RyaW5nLAogICAgICogICAgICAgICAgICAgICAgICAgdHlwZTogbWl4ZWQsCiAgICAgKiAgICAgICAgICAgICAgICAgICBzY2FsZTogaW50LAogICAgICogICAgICAgICAgICAgICAgICAgbGVuZ3RoOiBpbnQsCiAgICAgKiAgICAgICAgICAgICAgICAgICB1bmlxdWU6IGJvb2wsCiAgICAgKiAgICAgICAgICAgICAgICAgICBudWxsYWJsZTogYm9vbCwKICAgICAqICAgICAgICAgICAgICAgICAgIHByZWNpc2lvbjogaW50LAogICAgICogICAgICAgICAgICAgICAgICAgZW51bVR5cGU/OiBjbGFzcy1zdHJpbmcsCiAgICAgKiAgICAgICAgICAgICAgICAgICBvcHRpb25zPzogbWl4ZWRbXSwKICAgICAqICAgICAgICAgICAgICAgICAgIGNvbHVtbk5hbWU/OiBzdHJpbmcsCiAgICAgKiAgICAgICAgICAgICAgICAgICBjb2x1bW5EZWZpbml0aW9uPzogc3RyaW5nCiAgICAgKiAgICAgICAgICAgICAgIH0KICAgICAqLwogICAgcHJpdmF0ZSBmdW5jdGlvbiBjb2x1bW5Ub0FycmF5KHN0cmluZyAkZmllbGROYW1lLCBNYXBwaW5nXENvbHVtbiAkY29sdW1uKTogYXJyYXkKICAgIHsKICAgICAgICAkbWFwcGluZyA9IFsKICAgICAgICAgICAgJ2ZpZWxkTmFtZScgPT4gJGZpZWxkTmFtZSwKICAgICAgICAgICAgJ3R5cGUnICAgICAgPT4gJGNvbHVtbi0+dHlwZSwKICAgICAgICAgICAgJ3NjYWxlJyAgICAgPT4gJGNvbHVtbi0+c2NhbGUsCiAgICAgICAgICAgICdsZW5ndGgnICAgID0+ICRjb2x1bW4tPmxlbmd0aCwKICAgICAgICAgICAgJ3VuaXF1ZScgICAgPT4gJGNvbHVtbi0+dW5pcXVlLAogICAgICAgICAgICAnbnVsbGFibGUnICA9PiAkY29sdW1uLT5udWxsYWJsZSwKICAgICAgICAgICAgJ3ByZWNpc2lvbicgPT4gJGNvbHVtbi0+cHJlY2lzaW9uLAogICAgICAgIF07CgogICAgICAgIGlmICgkY29sdW1uLT5vcHRpb25zKSB7CiAgICAgICAgICAgICRtYXBwaW5nWydvcHRpb25zJ10gPSAkY29sdW1uLT5vcHRpb25zOwogICAgICAgIH0KCiAgICAgICAgaWYgKGlzc2V0KCRjb2x1bW4tPm5hbWUpKSB7CiAgICAgICAgICAgICRtYXBwaW5nWydjb2x1bW5OYW1lJ10gPSAkY29sdW1uLT5uYW1lOwogICAgICAgIH0KCiAgICAgICAgaWYgKGlzc2V0KCRjb2x1bW4tPmNvbHVtbkRlZmluaXRpb24pKSB7CiAgICAgICAgICAgICRtYXBwaW5nWydjb2x1bW5EZWZpbml0aW9uJ10gPSAkY29sdW1uLT5jb2x1bW5EZWZpbml0aW9uOwogICAgICAgIH0KCiAgICAgICAgaWYgKCRjb2x1bW4tPnVwZGF0YWJsZSA9PT0gZmFsc2UpIHsKICAgICAgICAgICAgJG1hcHBpbmdbJ25vdFVwZGF0YWJsZSddID0gdHJ1ZTsKICAgICAgICB9CgogICAgICAgIGlmICgkY29sdW1uLT5pbnNlcnRhYmxlID09PSBmYWxzZSkgewogICAgICAgICAgICAkbWFwcGluZ1snbm90SW5zZXJ0YWJsZSddID0gdHJ1ZTsKICAgICAgICB9CgogICAgICAgIGlmICgkY29sdW1uLT5nZW5lcmF0ZWQgIT09IG51bGwpIHsKICAgICAgICAgICAgJG1hcHBpbmdbJ2dlbmVyYXRlZCddID0gJHRoaXMtPmdldEdlbmVyYXRlZE1vZGUoJGNvbHVtbi0+Z2VuZXJhdGVkKTsKICAgICAgICB9CgogICAgICAgIGlmICgkY29sdW1uLT5lbnVtVHlwZSkgewogICAgICAgICAgICAkbWFwcGluZ1snZW51bVR5cGUnXSA9ICRjb2x1bW4tPmVudW1UeXBlOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICRtYXBwaW5nOwogICAgfQp9CiI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";