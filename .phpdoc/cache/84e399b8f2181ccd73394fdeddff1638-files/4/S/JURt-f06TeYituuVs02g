1738044975
84e399b8f2181ccd73394fdeddff1638-phpdoc%3A08bc2ebf85da6d702e3d475d25a46cc5-b60b32ff76bc7026521d755293ab190b
s:19692:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:6:"ha.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"b60b32ff76bc7026521d755293ab190b";s:39:" phpDocumentor\Reflection\Php\File path";s:52:"vendor/symfony/intl/Resources/data/currencies/ha.php";s:41:" phpDocumentor\Reflection\Php\File source";s:13843:"<?php

return [
    'Names' => [
        'AED' => [
            'AED',
            'Kuɗin Haɗaɗɗiyar Daular Larabawa',
        ],
        'AFN' => [
            'AFN',
            'Afghani na ƙasar Afghanistan',
        ],
        'ALL' => [
            'ALL',
            'Kuɗin Albania',
        ],
        'AMD' => [
            'AMD',
            'Kuɗin Armenia',
        ],
        'ANG' => [
            'ANG',
            'Antillean Guilder na ƙasar Netherlands',
        ],
        'AOA' => [
            'AOA',
            'Kuɗin Angola',
        ],
        'ARS' => [
            'ARS',
            'Peso na ƙasar Argentina',
        ],
        'AUD' => [
            'A$',
            'Dalar Ostareliya',
        ],
        'AWG' => [
            'AWG',
            'Florin na yankin Aruba',
        ],
        'AZN' => [
            'AZN',
            'Kuɗin Azerbaijani',
        ],
        'BAM' => [
            'BAM',
            'Kuɗaɗen Bosnia da Herzegovina',
        ],
        'BBD' => [
            'BBD',
            'Dalar ƙasar Barbados',
        ],
        'BDT' => [
            'BDT',
            'Taka na ƙasar Bangladesh',
        ],
        'BGN' => [
            'BGN',
            'Kuɗin Bulgeria',
        ],
        'BHD' => [
            'BHD',
            'Kuɗin Baharan',
        ],
        'BIF' => [
            'BIF',
            'Kuɗin Burundi',
        ],
        'BMD' => [
            'BMD',
            'Dalar ƙasar Bermuda',
        ],
        'BND' => [
            'BND',
            'Dalar Brunei',
        ],
        'BOB' => [
            'BOB',
            'Boloviano na ƙasar Bolivia',
        ],
        'BRL' => [
            'R$',
            'Ril Kudin Birazil',
        ],
        'BSD' => [
            'BSD',
            'Dalar ƙasar Bahamas',
        ],
        'BTN' => [
            'BTN',
            'Ngultrum na ƙasar Bhutan',
        ],
        'BWP' => [
            'BWP',
            'Kuɗin Baswana',
        ],
        'BYN' => [
            'BYN',
            'Kuɗin Belarus',
        ],
        'BZD' => [
            'BZD',
            'Dalar ƙasar Belize',
        ],
        'CAD' => [
            'CA$',
            'Dalar Kanada',
        ],
        'CDF' => [
            'CDF',
            'Kuɗin Kongo',
        ],
        'CHF' => [
            'CHF',
            'Kuɗin Suwizalan',
        ],
        'CLP' => [
            'CLP',
            'Peso na ƙasar Chile',
        ],
        'CNH' => [
            'CNH',
            'Yuwan na ƙasar Sin (na wajen ƙasa)',
        ],
        'CNY' => [
            'CN¥',
            'Yuwan na ƙasar Sin',
        ],
        'COP' => [
            'COP',
            'Peso na ƙasar Columbia',
        ],
        'CRC' => [
            'CRC',
            'Colón na ƙasar Costa Rica',
        ],
        'CUC' => [
            'CUC',
            'Peso mai fuska biyu na ƙasar Kuba',
        ],
        'CUP' => [
            'CUP',
            'Peso na ƙasar Kuba',
        ],
        'CVE' => [
            'CVE',
            'Kuɗin Tsibiran Kap Barde',
        ],
        'CZK' => [
            'CZK',
            'Kuɗin Czech',
        ],
        'DJF' => [
            'DJF',
            'Kuɗin Jibuti',
        ],
        'DKK' => [
            'DKK',
            'Krone na ƙasar Denmark',
        ],
        'DOP' => [
            'DOP',
            'Peso na jamhuriyar Dominica',
        ],
        'DZD' => [
            'DZD',
            'Kuɗin Aljeriya',
        ],
        'EGP' => [
            'EGP',
            'Fam kin Masar',
        ],
        'ERN' => [
            'ERN',
            'Kuɗin Eritireya',
        ],
        'ETB' => [
            'ETB',
            'Kuɗin Habasha',
        ],
        'EUR' => [
            '€',
            'Yuro',
        ],
        'FJD' => [
            'FJD',
            'Dalar Fiji',
        ],
        'FKP' => [
            'FKP',
            'Fam na ƙasar Tsibirai na Falkland',
        ],
        'GBP' => [
            '£',
            'Fam na Ingila',
        ],
        'GEL' => [
            'GEL',
            'Kuɗin Georgia',
        ],
        'GHC' => [
            'GHC',
            'Cedi',
        ],
        'GHS' => [
            'GHS',
            'Sidi na Ghana',
        ],
        'GIP' => [
            'GIP',
            'Kuɗin Gibraltal',
        ],
        'GMD' => [
            'GMD',
            'Kuɗin Gambiya',
        ],
        'GNF' => [
            'GNF',
            'Kuɗin Guinea',
        ],
        'GNS' => [
            'GNS',
            'Kuɗin Gini',
        ],
        'GTQ' => [
            'GTQ',
            'Quetzal na ƙasar Guatemala',
        ],
        'GYD' => [
            'GYD',
            'Dalar Guyana',
        ],
        'HKD' => [
            'HK$',
            'Dalar Hong Kong',
        ],
        'HNL' => [
            'HNL',
            'Lempira na ƙasar Honduras',
        ],
        'HRK' => [
            'HRK',
            'Kuɗin Croatia',
        ],
        'HTG' => [
            'HTG',
            'Gourde na ƙasar Haiti',
        ],
        'HUF' => [
            'HUF',
            'Kuɗin Hungary',
        ],
        'IDR' => [
            'IDR',
            'Rupiah na ƙasar Indonesia',
        ],
        'ILS' => [
            '₪',
            'Sabbin Kuɗin Israʼila',
        ],
        'INR' => [
            '₹',
            'Kuɗin Indiya',
        ],
        'IQD' => [
            'IQD',
            'Dinarin Iraqi',
        ],
        'IRR' => [
            'IRR',
            'Riyal na ƙasar Iran',
        ],
        'ISK' => [
            'ISK',
            'Króna na ƙasar Iceland',
        ],
        'JMD' => [
            'JMD',
            'Dalar Jamaica',
        ],
        'JOD' => [
            'JOD',
            'Dinarin Jordan',
        ],
        'JPY' => [
            '¥',
            'Yen na ƙasar Japan',
        ],
        'KES' => [
            'KES',
            'Sulen Kenya',
        ],
        'KGS' => [
            'KGS',
            'Som na ƙasar Kyrgystani',
        ],
        'KHR' => [
            'KHR',
            'Riel na ƙasar Cambodia',
        ],
        'KMF' => [
            'KMF',
            'Kuɗin Kwamoras',
        ],
        'KPW' => [
            'KPW',
            'Won na ƙasar Koriya ta Arewa',
        ],
        'KRW' => [
            '₩',
            'Won na Koriya ta Kudu',
        ],
        'KWD' => [
            'KWD',
            'Dinarin Kuwaiti',
        ],
        'KYD' => [
            'KYD',
            'Dalar ƙasar Tsibirai na Cayman',
        ],
        'KZT' => [
            'KZT',
            'Tenge na ƙasar Kazkhstan',
        ],
        'LAK' => [
            'LAK',
            'Kuɗin Laos',
        ],
        'LBP' => [
            'LBP',
            'Kuɗin Lebanon',
        ],
        'LKR' => [
            'LKR',
            'Rupee na ƙasar Sri Lanka',
        ],
        'LRD' => [
            'LRD',
            'Dalar Laberiya',
        ],
        'LSL' => [
            'LSL',
            'Kuɗin Lesoto',
        ],
        'LYD' => [
            'LYD',
            'Kuɗin Libiya',
        ],
        'MAD' => [
            'MAD',
            'Kuɗin Maroko',
        ],
        'MDL' => [
            'MDL',
            'Kuɗaɗen Moldova',
        ],
        'MGA' => [
            'MGA',
            'Kuɗin Madagaskar',
        ],
        'MKD' => [
            'MKD',
            'Dinarin Macedonia',
        ],
        'MMK' => [
            'MMK',
            'Kuɗin Myanmar',
        ],
        'MNT' => [
            'MNT',
            'Tugrik na Mongolia',
        ],
        'MOP' => [
            'MOP',
            'Pataca na ƙasar Macao',
        ],
        'MRO' => [
            'MRO',
            'Kuɗin Moritaniya (1973–2017)',
        ],
        'MRU' => [
            'MRU',
            'Kuɗin Moritaniya',
        ],
        'MUR' => [
            'MUR',
            'Kuɗin Moritus',
        ],
        'MVR' => [
            'MVR',
            'Rufiyaa na ɓasar Maldives',
        ],
        'MWK' => [
            'MWK',
            'Kuɗin Malawi',
        ],
        'MXN' => [
            'MX$',
            'Peso na ƙasar Mekziko',
        ],
        'MYR' => [
            'MYR',
            'Kuɗin Malaysia',
        ],
        'MZM' => [
            'MZM',
            'Kuɗin Mozambik',
        ],
        'MZN' => [
            'MZN',
            'Metical na ƙasar Mozambique',
        ],
        'NAD' => [
            'NAD',
            'Dalar Namibiya',
        ],
        'NGN' => [
            '₦',
            'Nairar Najeriya',
        ],
        'NIO' => [
            'NIO',
            'Córdoba na ƙasar Nicaragua',
        ],
        'NOK' => [
            'NOK',
            'Krone na ƙasar Norway',
        ],
        'NPR' => [
            'NPR',
            'Rupee na Nepal',
        ],
        'NZD' => [
            'NZ$',
            'Dalar New Zealand',
        ],
        'OMR' => [
            'OMR',
            'Riyal ɗin Oman',
        ],
        'PAB' => [
            'PAB',
            'Balboa na ƙasar Panama',
        ],
        'PEN' => [
            'PEN',
            'Sol na ƙasar Peru',
        ],
        'PGK' => [
            'PGK',
            'Kina na ƙasar Papua Sabon Guinea',
        ],
        'PHP' => [
            '₱',
            'Kuɗin Philippine',
        ],
        'PKR' => [
            'PKR',
            'Rupee na ƙasar Pakistan',
        ],
        'PLN' => [
            'PLN',
            'Kuɗin Polan',
        ],
        'PYG' => [
            'PYG',
            'Guarani na ƙasar Paraguay',
        ],
        'QAR' => [
            'QAR',
            'Riyal ɗin Qatar',
        ],
        'RON' => [
            'RON',
            'Kuɗin Romania',
        ],
        'RSD' => [
            'RSD',
            'Dinarin Serbia',
        ],
        'RUB' => [
            'RUB',
            'Ruble na ƙasar Rasha',
        ],
        'RWF' => [
            'RWF',
            'Kuɗin Ruwanda',
        ],
        'SAR' => [
            'SAR',
            'Riyal',
        ],
        'SBD' => [
            'SBD',
            'Dalar Tsibirai na Solomon',
        ],
        'SCR' => [
            'SCR',
            'Kuɗin Saishal',
        ],
        'SDG' => [
            'SDG',
            'Fam na Sudan',
        ],
        'SEK' => [
            'SEK',
            'Krona na ƙasar Sweden',
        ],
        'SGD' => [
            'SGD',
            'Dalar Singapore',
        ],
        'SHP' => [
            'SHP',
            'Fam kin San Helena',
        ],
        'SLE' => [
            'SLE',
            'Kuɗin Salewo',
        ],
        'SLL' => [
            'SLL',
            'Kuɗin Salewo (1964—2022)',
        ],
        'SOS' => [
            'SOS',
            'Sulen Somaliya',
        ],
        'SRD' => [
            'SRD',
            'Dalar ƙasar Suriname',
        ],
        'SSP' => [
            'SSP',
            'Fam na Kudancin Sudan',
        ],
        'STD' => [
            'STD',
            'Kuɗin Sawo Tome da Paransip (1977–2017)',
        ],
        'STN' => [
            'STN',
            'Kuɗin Sawo Tome da Paransip',
        ],
        'SYP' => [
            'SYP',
            'Kuɗin Siriya',
        ],
        'SZL' => [
            'SZL',
            'Kuɗin Lilangeni',
        ],
        'THB' => [
            'THB',
            'Baht na ƙasar Thailand',
        ],
        'TJS' => [
            'TJS',
            'Somoni na ƙasar Tajikistan',
        ],
        'TMT' => [
            'TMT',
            'Manat na ƙasar Turkmenistan',
        ],
        'TND' => [
            'TND',
            'Kuɗin Tunisiya',
        ],
        'TOP' => [
            'TOP',
            'Paʻanga na ƙasar Tonga',
        ],
        'TRY' => [
            'TRY',
            'Kuɗin Turkiyya',
        ],
        'TTD' => [
            'TTD',
            'Dalar ƙasar Trinidad da Tobago',
        ],
        'TWD' => [
            'NT$',
            'Sabuwar Dalar Taiwan',
        ],
        'TZS' => [
            'TZS',
            'Sulen Tanzaniya',
        ],
        'UAH' => [
            'UAH',
            'Kudin Ukrainian',
        ],
        'UGX' => [
            'UGX',
            'Sule Yuganda',
        ],
        'USD' => [
            '$',
            'Dalar Amurka',
        ],
        'UYU' => [
            'UYU',
            'Peso na ƙasar Uruguay',
        ],
        'UZS' => [
            'UZS',
            'Som na ƙasar Uzbekistan',
        ],
        'VES' => [
            'VES',
            'Bolívar na ƙasar Venezuela',
        ],
        'VND' => [
            '₫',
            'Kuɗin Vietnam',
        ],
        'VUV' => [
            'VUV',
            'Vatu da ƙasar Vanuatu',
        ],
        'WST' => [
            'WST',
            'Tala na ƙasar Samoa',
        ],
        'XAF' => [
            'FCFA',
            'Kuɗin Sefa na Afirka Ta Tsakiya',
        ],
        'XCD' => [
            'EC$',
            'Dalar Gabashin Karebiyan',
        ],
        'XOF' => [
            'F CFA',
            'Kuɗin Sefa na Afirka Ta Yamma',
        ],
        'XPF' => [
            'CFPF',
            'Kuɗin CFP franc',
        ],
        'YER' => [
            'YER',
            'Riyal ɗin Yemen',
        ],
        'ZAR' => [
            'ZAR',
            'Kuɗin Afirka Ta Kudu',
        ],
        'ZMK' => [
            'ZMK',
            'Kuɗin Zambiya (1968–2012)',
        ],
        'ZMW' => [
            'ZMW',
            'Kuɗin Zambiya',
        ],
        'ZWD' => [
            'ZWD',
            'Dalar zimbabuwe',
        ],
    ],
];
";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";