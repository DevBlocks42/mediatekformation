1738044975
84e399b8f2181ccd73394fdeddff1638-phpdoc%3A82c57309dd07f9da22ef917a52cbe775-5574cc2af92ec3470f045cfa78c23f74
s:34408:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:6:"nl.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"5574cc2af92ec3470f045cfa78c23f74";s:39:" phpDocumentor\Reflection\Php\File path";s:52:"vendor/symfony/intl/Resources/data/currencies/nl.php";s:41:" phpDocumentor\Reflection\Php\File source";s:24880:"<?php

return [
    'Names' => [
        'ADP' => [
            'ADP',
            'Andorrese peseta',
        ],
        'AED' => [
            'AED',
            'Verenigde Arabische Emiraten-dirham',
        ],
        'AFA' => [
            'AFA',
            'Afghani (1927–2002)',
        ],
        'AFN' => [
            'AFN',
            'Afghaanse afghani',
        ],
        'ALK' => [
            'ALK',
            'Albanese lek (1946–1965)',
        ],
        'ALL' => [
            'ALL',
            'Albanese lek',
        ],
        'AMD' => [
            'AMD',
            'Armeense dram',
        ],
        'ANG' => [
            'ANG',
            'Nederlands-Antilliaanse gulden',
        ],
        'AOA' => [
            'AOA',
            'Angolese kwanza',
        ],
        'AOK' => [
            'AOK',
            'Angolese kwanza (1977–1990)',
        ],
        'AON' => [
            'AON',
            'Angolese nieuwe kwanza (1990–2000)',
        ],
        'AOR' => [
            'AOR',
            'Angolese kwanza reajustado (1995–1999)',
        ],
        'ARA' => [
            'ARA',
            'Argentijnse austral',
        ],
        'ARL' => [
            'ARL',
            'Argentijnse peso ley (1970–1983)',
        ],
        'ARM' => [
            'ARM',
            'Argentijnse peso (1881–1970)',
        ],
        'ARP' => [
            'ARP',
            'Argentijnse peso (1983–1985)',
        ],
        'ARS' => [
            'ARS',
            'Argentijnse peso',
        ],
        'ATS' => [
            'ATS',
            'Oostenrijkse schilling',
        ],
        'AUD' => [
            'AU$',
            'Australische dollar',
        ],
        'AWG' => [
            'AWG',
            'Arubaanse gulden',
        ],
        'AZM' => [
            'AZM',
            'Azerbeidzjaanse manat (1993–2006)',
        ],
        'AZN' => [
            'AZN',
            'Azerbeidzjaanse manat',
        ],
        'BAD' => [
            'BAD',
            'Bosnische dinar',
        ],
        'BAM' => [
            'BAM',
            'Bosnische convertibele mark',
        ],
        'BAN' => [
            'BAN',
            'Nieuwe Bosnische dinar (1994–1997)',
        ],
        'BBD' => [
            'BBD',
            'Barbadaanse dollar',
        ],
        'BDT' => [
            'BDT',
            'Bengalese taka',
        ],
        'BEC' => [
            'BEC',
            'Belgische frank (convertibel)',
        ],
        'BEF' => [
            'BEF',
            'Belgische frank',
        ],
        'BEL' => [
            'BEL',
            'Belgische frank (financieel)',
        ],
        'BGL' => [
            'BGL',
            'Bulgaarse harde lev',
        ],
        'BGM' => [
            'BGM',
            'Bulgaarse socialistische lev',
        ],
        'BGN' => [
            'BGN',
            'Bulgaarse lev',
        ],
        'BGO' => [
            'BGO',
            'Bulgaarse lev (1879–1952)',
        ],
        'BHD' => [
            'BHD',
            'Bahreinse dinar',
        ],
        'BIF' => [
            'BIF',
            'Burundese frank',
        ],
        'BMD' => [
            'BMD',
            'Bermuda-dollar',
        ],
        'BND' => [
            'BND',
            'Bruneise dollar',
        ],
        'BOB' => [
            'BOB',
            'Boliviaanse boliviano',
        ],
        'BOL' => [
            'BOL',
            'Boliviaanse boliviano (1863–1963)',
        ],
        'BOP' => [
            'BOP',
            'Boliviaanse peso',
        ],
        'BOV' => [
            'BOV',
            'Boliviaanse mvdol',
        ],
        'BRB' => [
            'BRB',
            'Braziliaanse cruzeiro novo (1967–1986)',
        ],
        'BRC' => [
            'BRC',
            'Braziliaanse cruzado',
        ],
        'BRE' => [
            'BRE',
            'Braziliaanse cruzeiro (1990–1993)',
        ],
        'BRL' => [
            'R$',
            'Braziliaanse real',
        ],
        'BRN' => [
            'BRN',
            'Braziliaanse nieuwe cruzado (1989–1990)',
        ],
        'BRR' => [
            'BRR',
            'Braziliaanse cruzeiro',
        ],
        'BRZ' => [
            'BRZ',
            'Braziliaanse cruzeiro (1942–1967)',
        ],
        'BSD' => [
            'BSD',
            'Bahamaanse dollar',
        ],
        'BTN' => [
            'BTN',
            'Bhutaanse ngultrum',
        ],
        'BUK' => [
            'BUK',
            'Birmese kyat',
        ],
        'BWP' => [
            'BWP',
            'Botswaanse pula',
        ],
        'BYB' => [
            'BYB',
            'Wit-Russische nieuwe roebel (1994–1999)',
        ],
        'BYN' => [
            'BYN',
            'Belarussische roebel',
        ],
        'BYR' => [
            'BYR',
            'Wit-Russische roebel (2000–2016)',
        ],
        'BZD' => [
            'BZD',
            'Belizaanse dollar',
        ],
        'CAD' => [
            'C$',
            'Canadese dollar',
        ],
        'CDF' => [
            'CDF',
            'Congolese frank',
        ],
        'CHE' => [
            'CHE',
            'WIR euro',
        ],
        'CHF' => [
            'CHF',
            'Zwitserse frank',
        ],
        'CHW' => [
            'CHW',
            'WIR franc',
        ],
        'CLE' => [
            'CLE',
            'Chileense escudo',
        ],
        'CLF' => [
            'CLF',
            'Chileense unidades de fomento',
        ],
        'CLP' => [
            'CLP',
            'Chileense peso',
        ],
        'CNH' => [
            'CNH',
            'Chinese yuan (offshore)',
        ],
        'CNX' => [
            'CNX',
            'dollar van de Chinese Volksbank',
        ],
        'CNY' => [
            'CN¥',
            'Chinese yuan',
        ],
        'COP' => [
            'COP',
            'Colombiaanse peso',
        ],
        'COU' => [
            'COU',
            'Unidad de Valor Real',
        ],
        'CRC' => [
            'CRC',
            'Costa Ricaanse colon',
        ],
        'CSD' => [
            'CSD',
            'Oude Servische dinar',
        ],
        'CSK' => [
            'CSK',
            'Tsjechoslowaakse harde koruna',
        ],
        'CUC' => [
            'CUC',
            'Cubaanse convertibele peso',
        ],
        'CUP' => [
            'CUP',
            'Cubaanse peso',
        ],
        'CVE' => [
            'CVE',
            'Kaapverdische escudo',
        ],
        'CYP' => [
            'CYP',
            'Cyprisch pond',
        ],
        'CZK' => [
            'CZK',
            'Tsjechische kroon',
        ],
        'DDM' => [
            'DDM',
            'Oost-Duitse ostmark',
        ],
        'DEM' => [
            'DEM',
            'Duitse mark',
        ],
        'DJF' => [
            'DJF',
            'Djiboutiaanse frank',
        ],
        'DKK' => [
            'DKK',
            'Deense kroon',
        ],
        'DOP' => [
            'DOP',
            'Dominicaanse peso',
        ],
        'DZD' => [
            'DZD',
            'Algerijnse dinar',
        ],
        'ECS' => [
            'ECS',
            'Ecuadoraanse sucre',
        ],
        'ECV' => [
            'ECV',
            'Ecuadoraanse unidad de valor constante (UVC)',
        ],
        'EEK' => [
            'EEK',
            'Estlandse kroon',
        ],
        'EGP' => [
            'EGP',
            'Egyptisch pond',
        ],
        'ERN' => [
            'ERN',
            'Eritrese nakfa',
        ],
        'ESA' => [
            'ESA',
            'Spaanse peseta (account A)',
        ],
        'ESB' => [
            'ESB',
            'Spaanse peseta (convertibele account)',
        ],
        'ESP' => [
            'ESP',
            'Spaanse peseta',
        ],
        'ETB' => [
            'ETB',
            'Ethiopische birr',
        ],
        'EUR' => [
            '€',
            'Euro',
        ],
        'FIM' => [
            'FIM',
            'Finse markka',
        ],
        'FJD' => [
            'FJ$',
            'Fiji-dollar',
        ],
        'FKP' => [
            'FKP',
            'Falklandeilands pond',
        ],
        'FRF' => [
            'FRF',
            'Franse franc',
        ],
        'GBP' => [
            '£',
            'Britse pond',
        ],
        'GEK' => [
            'GEK',
            'Georgische kupon larit',
        ],
        'GEL' => [
            'GEL',
            'Georgische lari',
        ],
        'GHC' => [
            'GHC',
            'Ghanese cedi (1979–2007)',
        ],
        'GHS' => [
            'GHS',
            'Ghanese cedi',
        ],
        'GIP' => [
            'GIP',
            'Gibraltarees pond',
        ],
        'GMD' => [
            'GMD',
            'Gambiaanse dalasi',
        ],
        'GNF' => [
            'GNF',
            'Guinese frank',
        ],
        'GNS' => [
            'GNS',
            'Guinese syli',
        ],
        'GQE' => [
            'GQE',
            'Equatoriaal-Guinese ekwele guineana',
        ],
        'GRD' => [
            'GRD',
            'Griekse drachme',
        ],
        'GTQ' => [
            'GTQ',
            'Guatemalteekse quetzal',
        ],
        'GWE' => [
            'GWE',
            'Portugees-Guinese escudo',
        ],
        'GWP' => [
            'GWP',
            'Guinee-Bissause peso',
        ],
        'GYD' => [
            'GYD',
            'Guyaanse dollar',
        ],
        'HKD' => [
            'HK$',
            'Hongkongse dollar',
        ],
        'HNL' => [
            'HNL',
            'Hondurese lempira',
        ],
        'HRD' => [
            'HRD',
            'Kroatische dinar',
        ],
        'HRK' => [
            'HRK',
            'Kroatische kuna',
        ],
        'HTG' => [
            'HTG',
            'Haïtiaanse gourde',
        ],
        'HUF' => [
            'HUF',
            'Hongaarse forint',
        ],
        'IDR' => [
            'IDR',
            'Indonesische roepia',
        ],
        'IEP' => [
            'IEP',
            'Iers pond',
        ],
        'ILP' => [
            'ILP',
            'Israëlisch pond',
        ],
        'ILR' => [
            'ILR',
            'Israëlische sjekel (1980–1985)',
        ],
        'ILS' => [
            '₪',
            'Israëlische nieuwe shekel',
        ],
        'INR' => [
            '₹',
            'Indiase roepie',
        ],
        'IQD' => [
            'IQD',
            'Iraakse dinar',
        ],
        'IRR' => [
            'IRR',
            'Iraanse rial',
        ],
        'ISJ' => [
            'ISJ',
            'IJslandse kroon (1918–1981)',
        ],
        'ISK' => [
            'ISK',
            'IJslandse kroon',
        ],
        'ITL' => [
            'ITL',
            'Italiaanse lire',
        ],
        'JMD' => [
            'JMD',
            'Jamaicaanse dollar',
        ],
        'JOD' => [
            'JOD',
            'Jordaanse dinar',
        ],
        'JPY' => [
            'JP¥',
            'Japanse yen',
        ],
        'KES' => [
            'KES',
            'Keniaanse shilling',
        ],
        'KGS' => [
            'KGS',
            'Kirgizische som',
        ],
        'KHR' => [
            'KHR',
            'Cambodjaanse riel',
        ],
        'KMF' => [
            'KMF',
            'Comorese frank',
        ],
        'KPW' => [
            'KPW',
            'Noord-Koreaanse won',
        ],
        'KRH' => [
            'KRH',
            'Zuid-Koreaanse hwan (1953–1962)',
        ],
        'KRO' => [
            'KRO',
            'Oude Zuid-Koreaanse won (1945–1953)',
        ],
        'KRW' => [
            '₩',
            'Zuid-Koreaanse won',
        ],
        'KWD' => [
            'KWD',
            'Koeweitse dinar',
        ],
        'KYD' => [
            'KYD',
            'Kaaimaneilandse dollar',
        ],
        'KZT' => [
            'KZT',
            'Kazachse tenge',
        ],
        'LAK' => [
            'LAK',
            'Laotiaanse kip',
        ],
        'LBP' => [
            'LBP',
            'Libanees pond',
        ],
        'LKR' => [
            'LKR',
            'Sri Lankaanse roepie',
        ],
        'LRD' => [
            'LRD',
            'Liberiaanse dollar',
        ],
        'LSL' => [
            'LSL',
            'Lesothaanse loti',
        ],
        'LTL' => [
            'LTL',
            'Litouwse litas',
        ],
        'LTT' => [
            'LTT',
            'Litouwse talonas',
        ],
        'LUC' => [
            'LUC',
            'Luxemburgse convertibele franc',
        ],
        'LUF' => [
            'LUF',
            'Luxemburgse frank',
        ],
        'LUL' => [
            'LUL',
            'Luxemburgse financiële franc',
        ],
        'LVL' => [
            'LVL',
            'Letse lats',
        ],
        'LVR' => [
            'LVR',
            'Letse roebel',
        ],
        'LYD' => [
            'LYD',
            'Libische dinar',
        ],
        'MAD' => [
            'MAD',
            'Marokkaanse dirham',
        ],
        'MAF' => [
            'MAF',
            'Marokkaanse franc',
        ],
        'MCF' => [
            'MCF',
            'Monegaskische frank',
        ],
        'MDC' => [
            'MDC',
            'Moldavische cupon',
        ],
        'MDL' => [
            'MDL',
            'Moldavische leu',
        ],
        'MGA' => [
            'MGA',
            'Malagassische ariary',
        ],
        'MGF' => [
            'MGF',
            'Malagassische franc',
        ],
        'MKD' => [
            'MKD',
            'Macedonische denar',
        ],
        'MKN' => [
            'MKN',
            'Macedonische denar (1992–1993)',
        ],
        'MLF' => [
            'MLF',
            'Malinese franc',
        ],
        'MMK' => [
            'MMK',
            'Myanmarese kyat',
        ],
        'MNT' => [
            'MNT',
            'Mongoolse tugrik',
        ],
        'MOP' => [
            'MOP',
            'Macause pataca',
        ],
        'MRO' => [
            'MRO',
            'Mauritaanse ouguiya (1973–2017)',
        ],
        'MRU' => [
            'MRU',
            'Mauritaanse ouguiya',
        ],
        'MTL' => [
            'MTL',
            'Maltese lire',
        ],
        'MTP' => [
            'MTP',
            'Maltees pond',
        ],
        'MUR' => [
            'MUR',
            'Mauritiaanse roepie',
        ],
        'MVP' => [
            'MVP',
            'Maldivische roepie',
        ],
        'MVR' => [
            'MVR',
            'Maldivische rufiyaa',
        ],
        'MWK' => [
            'MWK',
            'Malawische kwacha',
        ],
        'MXN' => [
            'MX$',
            'Mexicaanse peso',
        ],
        'MXP' => [
            'MXP',
            'Mexicaanse zilveren peso (1861–1992)',
        ],
        'MXV' => [
            'MXV',
            'Mexicaanse unidad de inversion (UDI)',
        ],
        'MYR' => [
            'MYR',
            'Maleisische ringgit',
        ],
        'MZE' => [
            'MZE',
            'Mozambikaanse escudo',
        ],
        'MZM' => [
            'MZM',
            'Oude Mozambikaanse metical',
        ],
        'MZN' => [
            'MZN',
            'Mozambikaanse metical',
        ],
        'NAD' => [
            'NAD',
            'Namibische dollar',
        ],
        'NGN' => [
            'NGN',
            'Nigeriaanse naira',
        ],
        'NIC' => [
            'NIC',
            'Nicaraguaanse córdoba (1988–1991)',
        ],
        'NIO' => [
            'NIO',
            'Nicaraguaanse córdoba',
        ],
        'NLG' => [
            'NLG',
            'Nederlandse gulden',
        ],
        'NOK' => [
            'NOK',
            'Noorse kroon',
        ],
        'NPR' => [
            'NPR',
            'Nepalese roepie',
        ],
        'NZD' => [
            'NZ$',
            'Nieuw-Zeelandse dollar',
        ],
        'OMR' => [
            'OMR',
            'Omaanse rial',
        ],
        'PAB' => [
            'PAB',
            'Panamese balboa',
        ],
        'PEI' => [
            'PEI',
            'Peruaanse inti',
        ],
        'PEN' => [
            'PEN',
            'Peruaanse sol',
        ],
        'PES' => [
            'PES',
            'Peruaanse sol (1863–1965)',
        ],
        'PGK' => [
            'PGK',
            'Papoea-Nieuw-Guinese kina',
        ],
        'PHP' => [
            'PHP',
            'Filipijnse peso',
        ],
        'PKR' => [
            'PKR',
            'Pakistaanse roepie',
        ],
        'PLN' => [
            'PLN',
            'Poolse zloty',
        ],
        'PLZ' => [
            'PLZ',
            'Poolse zloty (1950–1995)',
        ],
        'PTE' => [
            'PTE',
            'Portugese escudo',
        ],
        'PYG' => [
            'PYG',
            'Paraguayaanse guarani',
        ],
        'QAR' => [
            'QAR',
            'Qatarese rial',
        ],
        'RHD' => [
            'RHD',
            'Rhodesische dollar',
        ],
        'ROL' => [
            'ROL',
            'Oude Roemeense leu',
        ],
        'RON' => [
            'RON',
            'Roemeense leu',
        ],
        'RSD' => [
            'RSD',
            'Servische dinar',
        ],
        'RUB' => [
            'RUB',
            'Russische roebel',
        ],
        'RUR' => [
            'RUR',
            'Russische roebel (1991–1998)',
        ],
        'RWF' => [
            'RWF',
            'Rwandese frank',
        ],
        'SAR' => [
            'SAR',
            'Saoedi-Arabische riyal',
        ],
        'SBD' => [
            'SI$',
            'Salomon-dollar',
        ],
        'SCR' => [
            'SCR',
            'Seychelse roepie',
        ],
        'SDD' => [
            'SDD',
            'Soedanese dinar',
        ],
        'SDG' => [
            'SDG',
            'Soedanees pond',
        ],
        'SDP' => [
            'SDP',
            'Soedanees pond (1957–1998)',
        ],
        'SEK' => [
            'SEK',
            'Zweedse kroon',
        ],
        'SGD' => [
            'SGD',
            'Singaporese dollar',
        ],
        'SHP' => [
            'SHP',
            'Sint-Heleens pond',
        ],
        'SIT' => [
            'SIT',
            'Sloveense tolar',
        ],
        'SKK' => [
            'SKK',
            'Slowaakse koruna',
        ],
        'SLE' => [
            'SLE',
            'Sierra Leoonse leone',
        ],
        'SLL' => [
            'SLL',
            'Sierra Leoonse leone (1964–2022)',
        ],
        'SOS' => [
            'SOS',
            'Somalische shilling',
        ],
        'SRD' => [
            'SRD',
            'Surinaamse dollar',
        ],
        'SRG' => [
            'SRG',
            'Surinaamse gulden',
        ],
        'SSP' => [
            'SSP',
            'Zuid-Soedanees pond',
        ],
        'STD' => [
            'STD',
            'Santomese dobra (1977–2017)',
        ],
        'STN' => [
            'STN',
            'Santomese dobra',
        ],
        'SUR' => [
            'SUR',
            'Sovjet-roebel',
        ],
        'SVC' => [
            'SVC',
            'Salvadoraanse colón',
        ],
        'SYP' => [
            'SYP',
            'Syrisch pond',
        ],
        'SZL' => [
            'SZL',
            'Swazische lilangeni',
        ],
        'THB' => [
            '฿',
            'Thaise baht',
        ],
        'TJR' => [
            'TJR',
            'Tadzjikistaanse roebel',
        ],
        'TJS' => [
            'TJS',
            'Tadzjiekse somoni',
        ],
        'TMM' => [
            'TMM',
            'Turkmeense manat (1993–2009)',
        ],
        'TMT' => [
            'TMT',
            'Turkmeense manat',
        ],
        'TND' => [
            'TND',
            'Tunesische dinar',
        ],
        'TOP' => [
            'TOP',
            'Tongaanse paʻanga',
        ],
        'TPE' => [
            'TPE',
            'Timorese escudo',
        ],
        'TRL' => [
            'TRL',
            'Turkse lire',
        ],
        'TRY' => [
            'TRY',
            'Turkse lira',
        ],
        'TTD' => [
            'TTD',
            'Trinidad en Tobago-dollar',
        ],
        'TWD' => [
            'NT$',
            'Nieuwe Taiwanese dollar',
        ],
        'TZS' => [
            'TZS',
            'Tanzaniaanse shilling',
        ],
        'UAH' => [
            'UAH',
            'Oekraïense hryvnia',
        ],
        'UAK' => [
            'UAK',
            'Oekraïense karbovanetz',
        ],
        'UGS' => [
            'UGS',
            'Oegandese shilling (1966–1987)',
        ],
        'UGX' => [
            'UGX',
            'Oegandese shilling',
        ],
        'USD' => [
            'US$',
            'Amerikaanse dollar',
        ],
        'USN' => [
            'USN',
            'Amerikaanse dollar (volgende dag)',
        ],
        'USS' => [
            'USS',
            'Amerikaanse dollar (zelfde dag)',
        ],
        'UYI' => [
            'UYI',
            'Uruguayaanse peso en geïndexeerde eenheden',
        ],
        'UYP' => [
            'UYP',
            'Uruguayaanse peso (1975–1993)',
        ],
        'UYU' => [
            'UYU',
            'Uruguayaanse peso',
        ],
        'UYW' => [
            'UYW',
            'Uruguayaanse nominale salarisindexeenheid',
        ],
        'UZS' => [
            'UZS',
            'Oezbeekse sum',
        ],
        'VEB' => [
            'VEB',
            'Venezolaanse bolivar (1871–2008)',
        ],
        'VED' => [
            'VED',
            'Bolívar Soberano',
        ],
        'VEF' => [
            'VEF',
            'Venezolaanse bolivar (2008–2018)',
        ],
        'VES' => [
            'VES',
            'Venezolaanse bolivar',
        ],
        'VND' => [
            '₫',
            'Vietnamese dong',
        ],
        'VNN' => [
            'VNN',
            'Vietnamese dong (1978–1985)',
        ],
        'VUV' => [
            'VUV',
            'Vanuatuaanse vatu',
        ],
        'WST' => [
            'WST',
            'Samoaanse tala',
        ],
        'XAF' => [
            'FCFA',
            'CFA-frank',
        ],
        'XCD' => [
            'EC$',
            'Oost-Caribische dollar',
        ],
        'XEU' => [
            'XEU',
            'European Currency Unit',
        ],
        'XFO' => [
            'XFO',
            'Franse gouden franc',
        ],
        'XFU' => [
            'XFU',
            'Franse UIC-franc',
        ],
        'XOF' => [
            'F CFA',
            'CFA-franc BCEAO',
        ],
        'XPF' => [
            'XPF',
            'CFP-frank',
        ],
        'XRE' => [
            'XRE',
            'RINET-fondsen',
        ],
        'YDD' => [
            'YDD',
            'Jemenitische dinar',
        ],
        'YER' => [
            'YER',
            'Jemenitische rial',
        ],
        'YUD' => [
            'YUD',
            'Joegoslavische harde dinar',
        ],
        'YUM' => [
            'YUM',
            'Joegoslavische noviy-dinar',
        ],
        'YUN' => [
            'YUN',
            'Joegoslavische convertibele dinar',
        ],
        'YUR' => [
            'YUR',
            'Joegoslavische hervormde dinar (1992–1993)',
        ],
        'ZAL' => [
            'ZAL',
            'Zuid-Afrikaanse rand (financieel)',
        ],
        'ZAR' => [
            'ZAR',
            'Zuid-Afrikaanse rand',
        ],
        'ZMK' => [
            'ZMK',
            'Zambiaanse kwacha (1968–2012)',
        ],
        'ZMW' => [
            'ZMW',
            'Zambiaanse kwacha',
        ],
        'ZRN' => [
            'ZRN',
            'Zaïrese nieuwe zaïre',
        ],
        'ZRZ' => [
            'ZRZ',
            'Zaïrese zaïre',
        ],
        'ZWD' => [
            'ZWD',
            'Zimbabwaanse dollar',
        ],
        'ZWL' => [
            'ZWL',
            'Zimbabwaanse dollar (2009)',
        ],
        'ZWR' => [
            'ZWR',
            'Zimbabwaanse dollar (2008)',
        ],
    ],
];
";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";