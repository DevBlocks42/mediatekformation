1738044975
84e399b8f2181ccd73394fdeddff1638-phpdoc%3A19afb77b9fee0cefa8a6ad2c832567dd-b9996891867e0f3195514b18abc31244
s:7960:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjY6Im5kLnBocCI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBoYXNoIjtzOjMyOiJiOTk5Njg5MTg2N2UwZjMxOTU1MTRiMThhYmMzMTI0NCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjUyOiJ2ZW5kb3Ivc3ltZm9ueS9pbnRsL1Jlc291cmNlcy9kYXRhL2N1cnJlbmNpZXMvbmQucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czo1MDQ1OiI8P3BocAoKcmV0dXJuIFsKICAgICdOYW1lcycgPT4gWwogICAgICAgICdBRUQnID0+IFsKICAgICAgICAgICAgJ0FFRCcsCiAgICAgICAgICAgICdEb2xhIGxhc2VBcmFiJywKICAgICAgICBdLAogICAgICAgICdBT0EnID0+IFsKICAgICAgICAgICAgJ0FPQScsCiAgICAgICAgICAgICdLd2FuemEgeWFzZSBBbmdvbGEnLAogICAgICAgIF0sCiAgICAgICAgJ0FVRCcgPT4gWwogICAgICAgICAgICAnQSQnLAogICAgICAgICAgICAnRG9sYSB5YXNlIEF1c3RyYWxpYScsCiAgICAgICAgXSwKICAgICAgICAnQkhEJyA9PiBbCiAgICAgICAgICAgICdCSEQnLAogICAgICAgICAgICAnRGluYXJpIHlhc2UgQmhhaGFyZW5pJywKICAgICAgICBdLAogICAgICAgICdCSUYnID0+IFsKICAgICAgICAgICAgJ0JJRicsCiAgICAgICAgICAgICdGdWxlbmtpIHlhc2UgQmh1cnVuZGknLAogICAgICAgIF0sCiAgICAgICAgJ0JXUCcgPT4gWwogICAgICAgICAgICAnQldQJywKICAgICAgICAgICAgJ1BodWxhIHlhc2UgQm90c3dhbmEnLAogICAgICAgIF0sCiAgICAgICAgJ0NBRCcgPT4gWwogICAgICAgICAgICAnQ0EkJywKICAgICAgICAgICAgJ0RvbGEgeWFzZSBLaGFuYWRhJywKICAgICAgICBdLAogICAgICAgICdDREYnID0+IFsKICAgICAgICAgICAgJ0NERicsCiAgICAgICAgICAgICdGdWxlbmtpIHlhc2UgS2hvbmdvJywKICAgICAgICBdLAogICAgICAgICdDSEYnID0+IFsKICAgICAgICAgICAgJ0NIRicsCiAgICAgICAgICAgICdGdWxlbmtpIHlhc2UgU3dpc2knLAogICAgICAgIF0sCiAgICAgICAgJ0NOWScgPT4gWwogICAgICAgICAgICAnQ07CpScsCiAgICAgICAgICAgICdZdWFuIFJlbm1pbmJpIHlhc2UgQ2hpbmEnLAogICAgICAgIF0sCiAgICAgICAgJ0NWRScgPT4gWwogICAgICAgICAgICAnQ1ZFJywKICAgICAgICAgICAgJ0VzY3VkbyBDYWJvdmVyZGlhbm8nLAogICAgICAgIF0sCiAgICAgICAgJ0RKRicgPT4gWwogICAgICAgICAgICAnREpGJywKICAgICAgICAgICAgJ0Z1bGVua2kgeWFzZSBKaWJodXRoaScsCiAgICAgICAgXSwKICAgICAgICAnRFpEJyA9PiBbCiAgICAgICAgICAgICdEWkQnLAogICAgICAgICAgICAnRGluYWxpIHlhc2UgQWxqZXJpeWEnLAogICAgICAgIF0sCiAgICAgICAgJ0VHUCcgPT4gWwogICAgICAgICAgICAnRUdQJywKICAgICAgICAgICAgJ1BoYXd1bmRpIGxhc2VHaWJoaWRlJywKICAgICAgICBdLAogICAgICAgICdFUk4nID0+IFsKICAgICAgICAgICAgJ0VSTicsCiAgICAgICAgICAgICdOYWtmYSB5YXNlIEVyaXRyZWEnLAogICAgICAgIF0sCiAgICAgICAgJ0VUQicgPT4gWwogICAgICAgICAgICAnRVRCJywKICAgICAgICAgICAgJ0RvbGEgbGFzZUV0aGlvcGlhJywKICAgICAgICBdLAogICAgICAgICdFVVInID0+IFsKICAgICAgICAgICAgJ+KCrCcsCiAgICAgICAgICAgICdZdXJvJywKICAgICAgICBdLAogICAgICAgICdHQlAnID0+IFsKICAgICAgICAgICAgJ8KjJywKICAgICAgICAgICAgJ1BoYXd1bmRpIHlhc2UgTmdpbGFuZGknLAogICAgICAgIF0sCiAgICAgICAgJ0dIQycgPT4gWwogICAgICAgICAgICAnR0hDJywKICAgICAgICAgICAgJ1NlZGkgeWFzZSBHaGFuYScsCiAgICAgICAgXSwKICAgICAgICAnR01EJyA9PiBbCiAgICAgICAgICAgICdHTUQnLAogICAgICAgICAgICAnRGFsYXNpIHlhc2UgR2FtYmlhJywKICAgICAgICBdLAogICAgICAgICdHTlMnID0+IFsKICAgICAgICAgICAgJ0dOUycsCiAgICAgICAgICAgICdGdWxlbmtpIHlhc2UgR2luZScsCiAgICAgICAgXSwKICAgICAgICAnSU5SJyA9PiBbCiAgICAgICAgICAgICfigrknLAogICAgICAgICAgICAnUnVwaSB5YXNlIEluZGl5YScsCiAgICAgICAgXSwKICAgICAgICAnSlBZJyA9PiBbCiAgICAgICAgICAgICdKUMKlJywKICAgICAgICAgICAgJ1llbmkgeWFzZSBKYXBoYW5pJywKICAgICAgICBdLAogICAgICAgICdLRVMnID0+IFsKICAgICAgICAgICAgJ0tFUycsCiAgICAgICAgICAgICdTaGlsaW5naSB5YXNlIEtlbnlhJywKICAgICAgICBdLAogICAgICAgICdLTUYnID0+IFsKICAgICAgICAgICAgJ0tNRicsCiAgICAgICAgICAgICdGdWxlbmtpIHlhc2UgS2hvbW9ybycsCiAgICAgICAgXSwKICAgICAgICAnTFJEJyA9PiBbCiAgICAgICAgICAgICdMUkQnLAogICAgICAgICAgICAnRG9sYSB5YXNlIExpYmhlcml5YScsCiAgICAgICAgXSwKICAgICAgICAnTFNMJyA9PiBbCiAgICAgICAgICAgICdMU0wnLAogICAgICAgICAgICAnTG90aGkgeWFzZSBMZXNvdGhvJywKICAgICAgICBdLAogICAgICAgICdMWUQnID0+IFsKICAgICAgICAgICAgJ0xZRCcsCiAgICAgICAgICAgICdEaW5hcmkgeWFzZSBMaWJ5YScsCiAgICAgICAgXSwKICAgICAgICAnTUFEJyA9PiBbCiAgICAgICAgICAgICdNQUQnLAogICAgICAgICAgICAnRGlyaGFtIHlhc2UgTW9yb2tobycsCiAgICAgICAgXSwKICAgICAgICAnTUdBJyA9PiBbCiAgICAgICAgICAgICdNR0EnLAogICAgICAgICAgICAnRnVsZW5raSB5YXNlIE1hbGFnYXNpJywKICAgICAgICBdLAogICAgICAgICdNUk8nID0+IFsKICAgICAgICAgICAgJ01STycsCiAgICAgICAgICAgICdVZ3dpeWEgeWFzZSBNb3JpdGFuaXlhICgxOTcz4oCTMjAxNyknLAogICAgICAgIF0sCiAgICAgICAgJ01SVScgPT4gWwogICAgICAgICAgICAnTVJVJywKICAgICAgICAgICAgJ1Vnd2l5YSB5YXNlIE1vcml0YW5peWEnLAogICAgICAgIF0sCiAgICAgICAgJ01VUicgPT4gWwogICAgICAgICAgICAnTVVSJywKICAgICAgICAgICAgJ1J1cGkgeWFzZSBNb3Jpc2hhc2knLAogICAgICAgIF0sCiAgICAgICAgJ01XSycgPT4gWwogICAgICAgICAgICAnTVdLJywKICAgICAgICAgICAgJ0t3YWNoYSB5YXNlIE1hbGF3aScsCiAgICAgICAgXSwKICAgICAgICAnTVpNJyA9PiBbCiAgICAgICAgICAgICdNWk0nLAogICAgICAgICAgICAnTWV0aWthbGkgeWFzZSBNb3phbWJpa2knLAogICAgICAgIF0sCiAgICAgICAgJ05BRCcgPT4gWwogICAgICAgICAgICAnTkFEJywKICAgICAgICAgICAgJ0RvbGEgeWFzZSBOYW1pYml5YScsCiAgICAgICAgXSwKICAgICAgICAnTkdOJyA9PiBbCiAgICAgICAgICAgICdOR04nLAogICAgICAgICAgICAnTmF5aXJhIHlhc2UgTmlqZXJpeWEnLAogICAgICAgIF0sCiAgICAgICAgJ1JXRicgPT4gWwogICAgICAgICAgICAnUldGJywKICAgICAgICAgICAgJ0Z1bGVua2kgeWFzZSBSdXdhbmRhJywKICAgICAgICBdLAogICAgICAgICdTQVInID0+IFsKICAgICAgICAgICAgJ1NBUicsCiAgICAgICAgICAgICdSaXlhbCB5YXNlIFNhdWRpJywKICAgICAgICBdLAogICAgICAgICdTQ1InID0+IFsKICAgICAgICAgICAgJ1NDUicsCiAgICAgICAgICAgICdSdXBpIHlhc2UgU2V5aXNoZWxpJywKICAgICAgICBdLAogICAgICAgICdTREcnID0+IFsKICAgICAgICAgICAgJ1NERycsCiAgICAgICAgICAgICdEaW5hcmkgeWFzZSBTdWRhbmknLAogICAgICAgIF0sCiAgICAgICAgJ1NEUCcgPT4gWwogICAgICAgICAgICAnU0RQJywKICAgICAgICAgICAgJ1BoYXd1bmRpIHlhc2UgU3VkYW5pJywKICAgICAgICBdLAogICAgICAgICdTSFAnID0+IFsKICAgICAgICAgICAgJ1NIUCcsCiAgICAgICAgICAgICdQaGF3dW5kaW5kaSBsYXNlU3QgSGVsZW5hJywKICAgICAgICBdLAogICAgICAgICdTTEUnID0+IFsKICAgICAgICAgICAgJ1NMRScsCiAgICAgICAgICAgICdMZXlvbmknLAogICAgICAgIF0sCiAgICAgICAgJ1NMTCcgPT4gWwogICAgICAgICAgICAnU0xMJywKICAgICAgICAgICAgJ0xleW9uaSAoMTk2NOKAlDIwMjIpJywKICAgICAgICBdLAogICAgICAgICdTT1MnID0+IFsKICAgICAgICAgICAgJ1NPUycsCiAgICAgICAgICAgICdTaGlsaW5naSB5YXNlIFNvbWFsaXlhJywKICAgICAgICBdLAogICAgICAgICdTVEQnID0+IFsKICAgICAgICAgICAgJ1NURCcsCiAgICAgICAgICAgICdEb2JyYSB5YXNlIFNhbyBUb21lIGxvIFByaW5jaXBlICgxOTc34oCTMjAxNyknLAogICAgICAgIF0sCiAgICAgICAgJ1NUTicgPT4gWwogICAgICAgICAgICAnU1ROJywKICAgICAgICAgICAgJ0RvYnJhIHlhc2UgU2FvIFRvbWUgbG8gUHJpbmNpcGUnLAogICAgICAgIF0sCiAgICAgICAgJ1NaTCcgPT4gWwogICAgICAgICAgICAnU1pMJywKICAgICAgICAgICAgJ0xpbGFuZ2VuaScsCiAgICAgICAgXSwKICAgICAgICAnVE5EJyA9PiBbCiAgICAgICAgICAgICdUTkQnLAogICAgICAgICAgICAnRGluYXJpIHlhc2UgVHVuaXNpeWEnLAogICAgICAgIF0sCiAgICAgICAgJ1RaUycgPT4gWwogICAgICAgICAgICAnVFpTJywKICAgICAgICAgICAgJ1NoaWxpbmdpIHlhc2UgVGFuemFuaXlhJywKICAgICAgICBdLAogICAgICAgICdVR1gnID0+IFsKICAgICAgICAgICAgJ1VHWCcsCiAgICAgICAgICAgICdTaGlsaW5naSB5YXNlIFVnYW5kYScsCiAgICAgICAgXSwKICAgICAgICAnVVNEJyA9PiBbCiAgICAgICAgICAgICdVUyQnLAogICAgICAgICAgICAnRG9sYSB5YXNlIEFtZWxpa2EnLAogICAgICAgIF0sCiAgICAgICAgJ1hBRicgPT4gWwogICAgICAgICAgICAnRkNGQScsCiAgICAgICAgICAgICdGdWxlbmtpIENGQSBCRUFDJywKICAgICAgICBdLAogICAgICAgICdYT0YnID0+IFsKICAgICAgICAgICAgJ0bigK9DRkEnLAogICAgICAgICAgICAnRnVsZW5raSBDRkEgQkNFQU8nLAogICAgICAgIF0sCiAgICAgICAgJ1pBUicgPT4gWwogICAgICAgICAgICAnWkFSJywKICAgICAgICAgICAgJ1JhbmRpIHlhc2UgQWZyaWthIHllIFphbnppJywKICAgICAgICBdLAogICAgICAgICdaTUsnID0+IFsKICAgICAgICAgICAgJ1pNSycsCiAgICAgICAgICAgICdLd2FjaGEgeWFzZSBaYW1iaXlhICgxOTY44oCTMjAxMiknLAogICAgICAgIF0sCiAgICAgICAgJ1pNVycgPT4gWwogICAgICAgICAgICAnWk1XJywKICAgICAgICAgICAgJ0t3YWNoYSB5YXNlIFphbWJpeWEnLAogICAgICAgIF0sCiAgICAgICAgJ1pXRCcgPT4gWwogICAgICAgICAgICAnWldEJywKICAgICAgICAgICAgJ0RvbGEgeWFzZSBaaW1iYWJ3ZScsCiAgICAgICAgXSwKICAgIF0sCl07CiI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";