1738044983
84e399b8f2181ccd73394fdeddff1638-phpdoc%3Ae36b64f06b951d89dd4937dfb936953c-b97aa1da8c79a1a51a3ca96d3e996815
s:34048:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:6:"wo.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"b97aa1da8c79a1a51a3ca96d3e996815";s:39:" phpDocumentor\Reflection\Php\File path";s:51:"vendor/symfony/intl/Resources/data/timezones/wo.php";s:41:" phpDocumentor\Reflection\Php\File source";s:24611:"<?php

return [
    'Names' => [
        'Africa/Abidjan' => 'GMT (waxtu Greenwich) (Abidjan)',
        'Africa/Accra' => 'GMT (waxtu Greenwich) (Accra)',
        'Africa/Addis_Ababa' => 'Ecopi (Addis Ababa)',
        'Africa/Algiers' => 'CTE (waxtu ëroop sàntaraal) (Algiers)',
        'Africa/Asmera' => 'Eritere (Asmara)',
        'Africa/Bamako' => 'GMT (waxtu Greenwich) (Bamako)',
        'Africa/Bangui' => 'Repiblik Sàntar Afrik (Bangui)',
        'Africa/Banjul' => 'GMT (waxtu Greenwich) (Banjul)',
        'Africa/Bissau' => 'GMT (waxtu Greenwich) (Bissau)',
        'Africa/Blantyre' => 'Malawi (Blantyre)',
        'Africa/Brazzaville' => 'Réewum Kongo (Brazzaville)',
        'Africa/Bujumbura' => 'Burundi (Bujumbura)',
        'Africa/Cairo' => 'EET (waxtu ëroop u penku) (Cairo)',
        'Africa/Casablanca' => 'WET (waxtu ëroop u sowwu-jant (Casablanca)',
        'Africa/Ceuta' => 'CTE (waxtu ëroop sàntaraal) (Ceuta)',
        'Africa/Conakry' => 'GMT (waxtu Greenwich) (Conakry)',
        'Africa/Dakar' => 'GMT (waxtu Greenwich) (Dakar)',
        'Africa/Dar_es_Salaam' => 'Taŋsani (Dar es Salaam)',
        'Africa/Djibouti' => 'Jibuti (Djibouti)',
        'Africa/Douala' => 'Kamerun (Douala)',
        'Africa/El_Aaiun' => 'WET (waxtu ëroop u sowwu-jant (El Aaiun)',
        'Africa/Freetown' => 'GMT (waxtu Greenwich) (Freetown)',
        'Africa/Gaborone' => 'Botswana (Gaborone)',
        'Africa/Harare' => 'Simbabwe (Harare)',
        'Africa/Johannesburg' => 'Afrik di Sid (Johannesburg)',
        'Africa/Juba' => 'Sudaŋ di Sid (Juba)',
        'Africa/Kampala' => 'Ugànda (Kampala)',
        'Africa/Khartoum' => 'Sudaŋ (Khartoum)',
        'Africa/Kigali' => 'Ruwànda (Kigali)',
        'Africa/Kinshasa' => 'Kongo (R K D) (Kinshasa)',
        'Africa/Lagos' => 'Niseriya (Lagos)',
        'Africa/Libreville' => 'Gaboŋ (Libreville)',
        'Africa/Lome' => 'GMT (waxtu Greenwich) (Lome)',
        'Africa/Luanda' => 'Àngolaa (Luanda)',
        'Africa/Lubumbashi' => 'Kongo (R K D) (Lubumbashi)',
        'Africa/Lusaka' => 'Sàmbi (Lusaka)',
        'Africa/Malabo' => 'Gine Ekuwatoriyal (Malabo)',
        'Africa/Maputo' => 'Mosàmbig (Maputo)',
        'Africa/Maseru' => 'Lesoto (Maseru)',
        'Africa/Mbabane' => 'Suwasilànd (Mbabane)',
        'Africa/Mogadishu' => 'Somali (Mogadishu)',
        'Africa/Monrovia' => 'GMT (waxtu Greenwich) (Monrovia)',
        'Africa/Nairobi' => 'Keeña (Nairobi)',
        'Africa/Ndjamena' => 'Càdd (Ndjamena)',
        'Africa/Niamey' => 'Niiseer (Niamey)',
        'Africa/Nouakchott' => 'GMT (waxtu Greenwich) (Nouakchott)',
        'Africa/Ouagadougou' => 'GMT (waxtu Greenwich) (Ouagadougou)',
        'Africa/Porto-Novo' => 'Benee (Porto-Novo)',
        'Africa/Sao_Tome' => 'GMT (waxtu Greenwich) (São Tomé)',
        'Africa/Tripoli' => 'EET (waxtu ëroop u penku) (Tripoli)',
        'Africa/Tunis' => 'CTE (waxtu ëroop sàntaraal) (Tunis)',
        'Africa/Windhoek' => 'Namibi (Windhoek)',
        'America/Adak' => 'Etaa Sini (Adak)',
        'America/Anchorage' => 'Etaa Sini (Anchorage)',
        'America/Anguilla' => 'AT (waxtu atlàntik) (Anguilla)',
        'America/Antigua' => 'AT (waxtu atlàntik) (Antigua)',
        'America/Araguaina' => 'Beresil (Araguaina)',
        'America/Argentina/La_Rioja' => 'Arsàntin (La Rioja)',
        'America/Argentina/Rio_Gallegos' => 'Arsàntin (Rio Gallegos)',
        'America/Argentina/Salta' => 'Arsàntin (Salta)',
        'America/Argentina/San_Juan' => 'Arsàntin (San Juan)',
        'America/Argentina/San_Luis' => 'Arsàntin (San Luis)',
        'America/Argentina/Tucuman' => 'Arsàntin (Tucuman)',
        'America/Argentina/Ushuaia' => 'Arsàntin (Ushuaia)',
        'America/Aruba' => 'AT (waxtu atlàntik) (Aruba)',
        'America/Asuncion' => 'Paraguwe (Asunción)',
        'America/Bahia' => 'Beresil (Bahia)',
        'America/Bahia_Banderas' => 'CT (waxtu sàntaral) (Bahía de Banderas)',
        'America/Barbados' => 'AT (waxtu atlàntik) (Barbados)',
        'America/Belem' => 'Beresil (Belem)',
        'America/Belize' => 'CT (waxtu sàntaral) (Belize)',
        'America/Blanc-Sablon' => 'AT (waxtu atlàntik) (Blanc-Sablon)',
        'America/Boa_Vista' => 'Beresil (Boa Vista)',
        'America/Bogota' => 'Kolombi (Bogota)',
        'America/Boise' => 'MT (waxtu tundu) (Boise)',
        'America/Buenos_Aires' => 'Arsàntin (Buenos Aires)',
        'America/Cambridge_Bay' => 'MT (waxtu tundu) (Cambridge Bay)',
        'America/Campo_Grande' => 'Beresil (Campo Grande)',
        'America/Cancun' => 'ET waxtu penku (Cancún)',
        'America/Caracas' => 'Wenesiyela (Caracas)',
        'America/Catamarca' => 'Arsàntin (Catamarca)',
        'America/Cayenne' => 'Guyaan Farañse (Cayenne)',
        'America/Cayman' => 'ET waxtu penku (Cayman)',
        'America/Chicago' => 'CT (waxtu sàntaral) (Chicago)',
        'America/Chihuahua' => 'CT (waxtu sàntaral) (Chihuahua)',
        'America/Ciudad_Juarez' => 'MT (waxtu tundu) (Ciudad Juárez)',
        'America/Coral_Harbour' => 'ET waxtu penku (Atikokan)',
        'America/Cordoba' => 'Arsàntin (Cordoba)',
        'America/Costa_Rica' => 'CT (waxtu sàntaral) (Costa Rica)',
        'America/Creston' => 'MT (waxtu tundu) (Creston)',
        'America/Cuiaba' => 'Beresil (Cuiaba)',
        'America/Curacao' => 'AT (waxtu atlàntik) (Curaçao)',
        'America/Danmarkshavn' => 'GMT (waxtu Greenwich) (Danmarkshavn)',
        'America/Dawson' => 'Kanadaa (Dawson)',
        'America/Dawson_Creek' => 'MT (waxtu tundu) (Dawson Creek)',
        'America/Denver' => 'MT (waxtu tundu) (Denver)',
        'America/Detroit' => 'ET waxtu penku (Detroit)',
        'America/Dominica' => 'AT (waxtu atlàntik) (Dominica)',
        'America/Edmonton' => 'MT (waxtu tundu) (Edmonton)',
        'America/Eirunepe' => 'Beresil (Eirunepe)',
        'America/El_Salvador' => 'CT (waxtu sàntaral) (El Salvador)',
        'America/Fort_Nelson' => 'MT (waxtu tundu) (Fort Nelson)',
        'America/Fortaleza' => 'Beresil (Fortaleza)',
        'America/Glace_Bay' => 'AT (waxtu atlàntik) (Glace Bay)',
        'America/Godthab' => 'Girinlànd (Nuuk)',
        'America/Goose_Bay' => 'AT (waxtu atlàntik) (Goose Bay)',
        'America/Grand_Turk' => 'ET waxtu penku (Grand Turk)',
        'America/Grenada' => 'AT (waxtu atlàntik) (Grenada)',
        'America/Guadeloupe' => 'AT (waxtu atlàntik) (Guadeloupe)',
        'America/Guatemala' => 'CT (waxtu sàntaral) (Guatemala)',
        'America/Guayaquil' => 'Ekwaatër (Guayaquil)',
        'America/Guyana' => 'Giyaan (Guyana)',
        'America/Halifax' => 'AT (waxtu atlàntik) (Halifax)',
        'America/Havana' => 'Kuba (Havana)',
        'America/Hermosillo' => 'Meksiko (Hermosillo)',
        'America/Indiana/Knox' => 'CT (waxtu sàntaral) (Knox, Indiana)',
        'America/Indiana/Marengo' => 'ET waxtu penku (Marengo, Indiana)',
        'America/Indiana/Petersburg' => 'ET waxtu penku (Petersburg, Indiana)',
        'America/Indiana/Tell_City' => 'CT (waxtu sàntaral) (Tell City, Indiana)',
        'America/Indiana/Vevay' => 'ET waxtu penku (Vevay, Indiana)',
        'America/Indiana/Vincennes' => 'ET waxtu penku (Vincennes, Indiana)',
        'America/Indiana/Winamac' => 'ET waxtu penku (Winamac, Indiana)',
        'America/Indianapolis' => 'ET waxtu penku (Indianapolis)',
        'America/Inuvik' => 'MT (waxtu tundu) (Inuvik)',
        'America/Iqaluit' => 'ET waxtu penku (Iqaluit)',
        'America/Jamaica' => 'ET waxtu penku (Jamaica)',
        'America/Jujuy' => 'Arsàntin (Jujuy)',
        'America/Juneau' => 'Etaa Sini (Juneau)',
        'America/Kentucky/Monticello' => 'ET waxtu penku (Monticello, Kentucky)',
        'America/Kralendijk' => 'AT (waxtu atlàntik) (Kralendijk)',
        'America/La_Paz' => 'Boliwi (La Paz)',
        'America/Lima' => 'Peru (Lima)',
        'America/Los_Angeles' => 'PT (waxtu pasifik) (Los Angeles)',
        'America/Louisville' => 'ET waxtu penku (Louisville)',
        'America/Lower_Princes' => 'AT (waxtu atlàntik) (Lower Prince’s Quarter)',
        'America/Maceio' => 'Beresil (Maceio)',
        'America/Managua' => 'CT (waxtu sàntaral) (Managua)',
        'America/Manaus' => 'Beresil (Manaus)',
        'America/Marigot' => 'AT (waxtu atlàntik) (Marigot)',
        'America/Martinique' => 'AT (waxtu atlàntik) (Martinique)',
        'America/Matamoros' => 'CT (waxtu sàntaral) (Matamoros)',
        'America/Mazatlan' => 'Meksiko (Mazatlan)',
        'America/Mendoza' => 'Arsàntin (Mendoza)',
        'America/Menominee' => 'CT (waxtu sàntaral) (Menominee)',
        'America/Merida' => 'CT (waxtu sàntaral) (Mérida)',
        'America/Metlakatla' => 'Etaa Sini (Metlakatla)',
        'America/Mexico_City' => 'CT (waxtu sàntaral) (Mexico City)',
        'America/Miquelon' => 'Saŋ Peer ak Mikeloŋ (Miquelon)',
        'America/Moncton' => 'AT (waxtu atlàntik) (Moncton)',
        'America/Monterrey' => 'CT (waxtu sàntaral) (Monterrey)',
        'America/Montevideo' => 'Uruge (Montevideo)',
        'America/Montserrat' => 'AT (waxtu atlàntik) (Montserrat)',
        'America/Nassau' => 'ET waxtu penku (Nassau)',
        'America/New_York' => 'ET waxtu penku (New York)',
        'America/Nome' => 'Etaa Sini (Nome)',
        'America/Noronha' => 'Beresil (Noronha)',
        'America/North_Dakota/Beulah' => 'CT (waxtu sàntaral) (Beulah, North Dakota)',
        'America/North_Dakota/Center' => 'CT (waxtu sàntaral) (Center, North Dakota)',
        'America/North_Dakota/New_Salem' => 'CT (waxtu sàntaral) (New Salem, North Dakota)',
        'America/Ojinaga' => 'CT (waxtu sàntaral) (Ojinaga)',
        'America/Panama' => 'ET waxtu penku (Panama)',
        'America/Paramaribo' => 'Sirinam (Paramaribo)',
        'America/Phoenix' => 'MT (waxtu tundu) (Phoenix)',
        'America/Port-au-Prince' => 'ET waxtu penku (Port-au-Prince)',
        'America/Port_of_Spain' => 'AT (waxtu atlàntik) (Port of Spain)',
        'America/Porto_Velho' => 'Beresil (Porto Velho)',
        'America/Puerto_Rico' => 'AT (waxtu atlàntik) (Puerto Rico)',
        'America/Punta_Arenas' => 'Sili (Punta Arenas)',
        'America/Rankin_Inlet' => 'CT (waxtu sàntaral) (Rankin Inlet)',
        'America/Recife' => 'Beresil (Recife)',
        'America/Regina' => 'CT (waxtu sàntaral) (Regina)',
        'America/Resolute' => 'CT (waxtu sàntaral) (Resolute)',
        'America/Rio_Branco' => 'Beresil (Rio Branco)',
        'America/Santarem' => 'Beresil (Santarem)',
        'America/Santiago' => 'Sili (Santiago)',
        'America/Santo_Domingo' => 'AT (waxtu atlàntik) (Santo Domingo)',
        'America/Sao_Paulo' => 'Beresil (Sao Paulo)',
        'America/Scoresbysund' => 'Girinlànd (Ittoqqortoormiit)',
        'America/Sitka' => 'Etaa Sini (Sitka)',
        'America/St_Barthelemy' => 'AT (waxtu atlàntik) (St. Barthélemy)',
        'America/St_Johns' => 'Kanadaa (St. John’s)',
        'America/St_Kitts' => 'AT (waxtu atlàntik) (St. Kitts)',
        'America/St_Lucia' => 'AT (waxtu atlàntik) (St. Lucia)',
        'America/St_Thomas' => 'AT (waxtu atlàntik) (St. Thomas)',
        'America/St_Vincent' => 'AT (waxtu atlàntik) (St. Vincent)',
        'America/Swift_Current' => 'CT (waxtu sàntaral) (Swift Current)',
        'America/Tegucigalpa' => 'CT (waxtu sàntaral) (Tegucigalpa)',
        'America/Thule' => 'AT (waxtu atlàntik) (Thule)',
        'America/Tijuana' => 'PT (waxtu pasifik) (Tijuana)',
        'America/Toronto' => 'ET waxtu penku (Toronto)',
        'America/Tortola' => 'AT (waxtu atlàntik) (Tortola)',
        'America/Vancouver' => 'PT (waxtu pasifik) (Vancouver)',
        'America/Whitehorse' => 'Kanadaa (Whitehorse)',
        'America/Winnipeg' => 'CT (waxtu sàntaral) (Winnipeg)',
        'America/Yakutat' => 'Etaa Sini (Yakutat)',
        'Antarctica/Casey' => 'Antarktik (Casey)',
        'Antarctica/Davis' => 'Antarktik (Davis)',
        'Antarctica/DumontDUrville' => 'Antarktik (Dumont d’Urville)',
        'Antarctica/Macquarie' => 'Ostarali (Macquarie)',
        'Antarctica/Mawson' => 'Antarktik (Mawson)',
        'Antarctica/McMurdo' => 'Antarktik (McMurdo)',
        'Antarctica/Palmer' => 'Antarktik (Palmer)',
        'Antarctica/Rothera' => 'Antarktik (Rothera)',
        'Antarctica/Syowa' => 'Antarktik (Syowa)',
        'Antarctica/Troll' => 'GMT (waxtu Greenwich) (Troll)',
        'Antarctica/Vostok' => 'Antarktik (Vostok)',
        'Arctic/Longyearbyen' => 'CTE (waxtu ëroop sàntaraal) (Longyearbyen)',
        'Asia/Aden' => 'Yaman (Aden)',
        'Asia/Almaty' => 'Kasaxstaŋ (Almaty)',
        'Asia/Amman' => 'EET (waxtu ëroop u penku) (Amman)',
        'Asia/Anadyr' => 'Risi (Anadyr)',
        'Asia/Aqtau' => 'Kasaxstaŋ (Aqtau)',
        'Asia/Aqtobe' => 'Kasaxstaŋ (Aqtobe)',
        'Asia/Ashgabat' => 'Tirkmenistaŋ (Ashgabat)',
        'Asia/Atyrau' => 'Kasaxstaŋ (Atyrau)',
        'Asia/Baghdad' => 'Irag (Baghdad)',
        'Asia/Bahrain' => 'Bahreyin (Bahrain)',
        'Asia/Baku' => 'Aserbayjaŋ (Baku)',
        'Asia/Bangkok' => 'Taylànd (Bangkok)',
        'Asia/Barnaul' => 'Risi (Barnaul)',
        'Asia/Beirut' => 'EET (waxtu ëroop u penku) (Beirut)',
        'Asia/Bishkek' => 'Kirgistaŋ (Bishkek)',
        'Asia/Brunei' => 'Burney (Brunei)',
        'Asia/Calcutta' => 'End (Kolkata)',
        'Asia/Chita' => 'Risi (Chita)',
        'Asia/Choibalsan' => 'Mongoli (Choibalsan)',
        'Asia/Colombo' => 'Siri Lànka (Colombo)',
        'Asia/Damascus' => 'EET (waxtu ëroop u penku) (Damascus)',
        'Asia/Dhaka' => 'Bengalades (Dhaka)',
        'Asia/Dili' => 'Timor Leste (Dili)',
        'Asia/Dubai' => 'Emira Arab Ini (Dubai)',
        'Asia/Dushanbe' => 'Tajikistaŋ (Dushanbe)',
        'Asia/Famagusta' => 'EET (waxtu ëroop u penku) (Famagusta)',
        'Asia/Gaza' => 'EET (waxtu ëroop u penku) (Gaza)',
        'Asia/Hebron' => 'EET (waxtu ëroop u penku) (Hebron)',
        'Asia/Hong_Kong' => 'Ooŋ Koŋ (Hong Kong)',
        'Asia/Hovd' => 'Mongoli (Hovd)',
        'Asia/Irkutsk' => 'Risi (Irkutsk)',
        'Asia/Jakarta' => 'Indonesi (Jakarta)',
        'Asia/Jayapura' => 'Indonesi (Jayapura)',
        'Asia/Jerusalem' => 'Israyel (Jerusalem)',
        'Asia/Kabul' => 'Afganistaŋ (Kabul)',
        'Asia/Kamchatka' => 'Risi (Kamchatka)',
        'Asia/Karachi' => 'Pakistaŋ (Karachi)',
        'Asia/Katmandu' => 'Nepaal (Kathmandu)',
        'Asia/Khandyga' => 'Risi (Khandyga)',
        'Asia/Krasnoyarsk' => 'Risi (Krasnoyarsk)',
        'Asia/Kuala_Lumpur' => 'Malesi (Kuala Lumpur)',
        'Asia/Kuching' => 'Malesi (Kuching)',
        'Asia/Kuwait' => 'Kowet (Kuwait)',
        'Asia/Macau' => 'Makaawo (Macao)',
        'Asia/Magadan' => 'Risi (Magadan)',
        'Asia/Makassar' => 'Indonesi (Makassar)',
        'Asia/Manila' => 'Filipin (Manila)',
        'Asia/Muscat' => 'Omaan (Muscat)',
        'Asia/Nicosia' => 'EET (waxtu ëroop u penku) (Nicosia)',
        'Asia/Novokuznetsk' => 'Risi (Novokuznetsk)',
        'Asia/Novosibirsk' => 'Risi (Novosibirsk)',
        'Asia/Omsk' => 'Risi (Omsk)',
        'Asia/Oral' => 'Kasaxstaŋ (Oral)',
        'Asia/Phnom_Penh' => 'Kàmboj (Phnom Penh)',
        'Asia/Pontianak' => 'Indonesi (Pontianak)',
        'Asia/Pyongyang' => 'Kore Noor (Pyongyang)',
        'Asia/Qatar' => 'Kataar (Qatar)',
        'Asia/Qostanay' => 'Kasaxstaŋ (Qostanay)',
        'Asia/Qyzylorda' => 'Kasaxstaŋ (Qyzylorda)',
        'Asia/Rangoon' => 'Miyanmaar (Yangon)',
        'Asia/Riyadh' => 'Arabi Sawudi (Riyadh)',
        'Asia/Saigon' => 'Wiyetnam (Ho Chi Minh)',
        'Asia/Sakhalin' => 'Risi (Sakhalin)',
        'Asia/Samarkand' => 'Usbekistaŋ (Samarkand)',
        'Asia/Shanghai' => 'Siin (Shanghai)',
        'Asia/Singapore' => 'Singapuur (Singapore)',
        'Asia/Srednekolymsk' => 'Risi (Srednekolymsk)',
        'Asia/Taipei' => 'Taywan (Taipei)',
        'Asia/Tashkent' => 'Usbekistaŋ (Tashkent)',
        'Asia/Tbilisi' => 'Seworsi (Tbilisi)',
        'Asia/Tehran' => 'Iraŋ (Tehran)',
        'Asia/Thimphu' => 'Butaŋ (Thimphu)',
        'Asia/Tokyo' => 'Sàppoŋ (Tokyo)',
        'Asia/Tomsk' => 'Risi (Tomsk)',
        'Asia/Ulaanbaatar' => 'Mongoli (Ulaanbaatar)',
        'Asia/Urumqi' => 'Siin (Urumqi)',
        'Asia/Ust-Nera' => 'Risi (Ust-Nera)',
        'Asia/Vientiane' => 'Lawos (Vientiane)',
        'Asia/Vladivostok' => 'Risi (Vladivostok)',
        'Asia/Yakutsk' => 'Risi (Yakutsk)',
        'Asia/Yekaterinburg' => 'Risi (Yekaterinburg)',
        'Asia/Yerevan' => 'Armeni (Yerevan)',
        'Atlantic/Azores' => 'Portigaal (Azores)',
        'Atlantic/Bermuda' => 'AT (waxtu atlàntik) (Bermuda)',
        'Atlantic/Canary' => 'WET (waxtu ëroop u sowwu-jant (Canary)',
        'Atlantic/Cape_Verde' => 'Kabo Werde (Cape Verde)',
        'Atlantic/Faeroe' => 'WET (waxtu ëroop u sowwu-jant (Faroe)',
        'Atlantic/Madeira' => 'WET (waxtu ëroop u sowwu-jant (Madeira)',
        'Atlantic/Reykjavik' => 'GMT (waxtu Greenwich) (Reykjavik)',
        'Atlantic/South_Georgia' => 'Seworsi di Sid ak Duni Sàndwiis di Sid (South Georgia)',
        'Atlantic/St_Helena' => 'GMT (waxtu Greenwich) (St. Helena)',
        'Atlantic/Stanley' => 'Duni Falkland (Stanley)',
        'Australia/Adelaide' => 'Ostarali (Adelaide)',
        'Australia/Brisbane' => 'Ostarali (Brisbane)',
        'Australia/Broken_Hill' => 'Ostarali (Broken Hill)',
        'Australia/Darwin' => 'Ostarali (Darwin)',
        'Australia/Eucla' => 'Ostarali (Eucla)',
        'Australia/Hobart' => 'Ostarali (Hobart)',
        'Australia/Lindeman' => 'Ostarali (Lindeman)',
        'Australia/Lord_Howe' => 'Ostarali (Lord Howe)',
        'Australia/Melbourne' => 'Ostarali (Melbourne)',
        'Australia/Perth' => 'Ostarali (Perth)',
        'Australia/Sydney' => 'Ostarali (Sydney)',
        'CST6CDT' => 'CT (waxtu sàntaral)',
        'EST5EDT' => 'ET waxtu penku',
        'Etc/GMT' => 'GMT (waxtu Greenwich)',
        'Etc/UTC' => 'CUT (waxtu iniwelsel yuñ boole)',
        'Europe/Amsterdam' => 'CTE (waxtu ëroop sàntaraal) (Amsterdam)',
        'Europe/Andorra' => 'CTE (waxtu ëroop sàntaraal) (Andorra)',
        'Europe/Astrakhan' => 'Risi (Astrakhan)',
        'Europe/Athens' => 'EET (waxtu ëroop u penku) (Athens)',
        'Europe/Belgrade' => 'CTE (waxtu ëroop sàntaraal) (Belgrade)',
        'Europe/Berlin' => 'CTE (waxtu ëroop sàntaraal) (Berlin)',
        'Europe/Bratislava' => 'CTE (waxtu ëroop sàntaraal) (Bratislava)',
        'Europe/Brussels' => 'CTE (waxtu ëroop sàntaraal) (Brussels)',
        'Europe/Bucharest' => 'EET (waxtu ëroop u penku) (Bucharest)',
        'Europe/Budapest' => 'CTE (waxtu ëroop sàntaraal) (Budapest)',
        'Europe/Busingen' => 'CTE (waxtu ëroop sàntaraal) (Busingen)',
        'Europe/Chisinau' => 'EET (waxtu ëroop u penku) (Chisinau)',
        'Europe/Copenhagen' => 'CTE (waxtu ëroop sàntaraal) (Copenhagen)',
        'Europe/Dublin' => 'GMT (waxtu Greenwich) (Dublin)',
        'Europe/Gibraltar' => 'CTE (waxtu ëroop sàntaraal) (Gibraltar)',
        'Europe/Guernsey' => 'GMT (waxtu Greenwich) (Guernsey)',
        'Europe/Helsinki' => 'EET (waxtu ëroop u penku) (Helsinki)',
        'Europe/Isle_of_Man' => 'GMT (waxtu Greenwich) (Isle of Man)',
        'Europe/Istanbul' => 'Tirki (Istanbul)',
        'Europe/Jersey' => 'GMT (waxtu Greenwich) (Jersey)',
        'Europe/Kaliningrad' => 'EET (waxtu ëroop u penku) (Kaliningrad)',
        'Europe/Kiev' => 'EET (waxtu ëroop u penku) (Kyiv)',
        'Europe/Kirov' => 'Risi (Kirov)',
        'Europe/Lisbon' => 'WET (waxtu ëroop u sowwu-jant (Lisbon)',
        'Europe/Ljubljana' => 'CTE (waxtu ëroop sàntaraal) (Ljubljana)',
        'Europe/London' => 'GMT (waxtu Greenwich) (London)',
        'Europe/Luxembourg' => 'CTE (waxtu ëroop sàntaraal) (Luxembourg)',
        'Europe/Madrid' => 'CTE (waxtu ëroop sàntaraal) (Madrid)',
        'Europe/Malta' => 'CTE (waxtu ëroop sàntaraal) (Malta)',
        'Europe/Mariehamn' => 'EET (waxtu ëroop u penku) (Mariehamn)',
        'Europe/Minsk' => 'Belaris (Minsk)',
        'Europe/Monaco' => 'CTE (waxtu ëroop sàntaraal) (Monaco)',
        'Europe/Moscow' => 'Risi (Moscow)',
        'Europe/Oslo' => 'CTE (waxtu ëroop sàntaraal) (Oslo)',
        'Europe/Paris' => 'CTE (waxtu ëroop sàntaraal) (Paris)',
        'Europe/Podgorica' => 'CTE (waxtu ëroop sàntaraal) (Podgorica)',
        'Europe/Prague' => 'CTE (waxtu ëroop sàntaraal) (Prague)',
        'Europe/Riga' => 'EET (waxtu ëroop u penku) (Riga)',
        'Europe/Rome' => 'CTE (waxtu ëroop sàntaraal) (Rome)',
        'Europe/Samara' => 'Risi (Samara)',
        'Europe/San_Marino' => 'CTE (waxtu ëroop sàntaraal) (San Marino)',
        'Europe/Sarajevo' => 'CTE (waxtu ëroop sàntaraal) (Sarajevo)',
        'Europe/Saratov' => 'Risi (Saratov)',
        'Europe/Simferopol' => 'Ikeren (Simferopol)',
        'Europe/Skopje' => 'CTE (waxtu ëroop sàntaraal) (Skopje)',
        'Europe/Sofia' => 'EET (waxtu ëroop u penku) (Sofia)',
        'Europe/Stockholm' => 'CTE (waxtu ëroop sàntaraal) (Stockholm)',
        'Europe/Tallinn' => 'EET (waxtu ëroop u penku) (Tallinn)',
        'Europe/Tirane' => 'CTE (waxtu ëroop sàntaraal) (Tirane)',
        'Europe/Ulyanovsk' => 'Risi (Ulyanovsk)',
        'Europe/Vaduz' => 'CTE (waxtu ëroop sàntaraal) (Vaduz)',
        'Europe/Vatican' => 'CTE (waxtu ëroop sàntaraal) (Vatican)',
        'Europe/Vienna' => 'CTE (waxtu ëroop sàntaraal) (Vienna)',
        'Europe/Vilnius' => 'EET (waxtu ëroop u penku) (Vilnius)',
        'Europe/Volgograd' => 'Risi (Volgograd)',
        'Europe/Warsaw' => 'CTE (waxtu ëroop sàntaraal) (Warsaw)',
        'Europe/Zagreb' => 'CTE (waxtu ëroop sàntaraal) (Zagreb)',
        'Europe/Zurich' => 'CTE (waxtu ëroop sàntaraal) (Zurich)',
        'Indian/Antananarivo' => 'Madagaskaar (Antananarivo)',
        'Indian/Christmas' => 'Dunu Kirismas (Christmas)',
        'Indian/Cocos' => 'Duni Koko (Kilin) (Cocos)',
        'Indian/Comoro' => 'Komoor (Comoro)',
        'Indian/Kerguelen' => 'Teer Ostraal gu Fraas (Kerguelen)',
        'Indian/Mahe' => 'Seysel (Mahe)',
        'Indian/Maldives' => 'Maldiiw (Maldives)',
        'Indian/Mauritius' => 'Moriis (Mauritius)',
        'Indian/Mayotte' => 'Mayot (Mayotte)',
        'Indian/Reunion' => 'Reeñoo (Réunion)',
        'MST7MDT' => 'MT (waxtu tundu)',
        'PST8PDT' => 'PT (waxtu pasifik)',
        'Pacific/Apia' => 'Samowa (Apia)',
        'Pacific/Auckland' => 'Nuwel Selànd (Auckland)',
        'Pacific/Bougainville' => 'Papuwasi Gine Gu Bees (Bougainville)',
        'Pacific/Chatham' => 'Nuwel Selànd (Chatham)',
        'Pacific/Easter' => 'Sili (Easter)',
        'Pacific/Efate' => 'Wanuatu (Efate)',
        'Pacific/Enderbury' => 'Kiribati (Enderbury)',
        'Pacific/Fakaofo' => 'Tokoloo (Fakaofo)',
        'Pacific/Fiji' => 'Fijji (Fiji)',
        'Pacific/Funafuti' => 'Tuwalo (Funafuti)',
        'Pacific/Galapagos' => 'Ekwaatër (Galapagos)',
        'Pacific/Gambier' => 'Polinesi Farañse (Gambier)',
        'Pacific/Guadalcanal' => 'Duni Salmoon (Guadalcanal)',
        'Pacific/Guam' => 'Guwam (Guam)',
        'Pacific/Honolulu' => 'Etaa Sini (Honolulu)',
        'Pacific/Kiritimati' => 'Kiribati (Kiritimati)',
        'Pacific/Kosrae' => 'Mikoronesi (Kosrae)',
        'Pacific/Kwajalein' => 'Duni Marsaal (Kwajalein)',
        'Pacific/Majuro' => 'Duni Marsaal (Majuro)',
        'Pacific/Marquesas' => 'Polinesi Farañse (Marquesas)',
        'Pacific/Midway' => 'Duni Amerig Utar meer (Midway)',
        'Pacific/Nauru' => 'Nawru (Nauru)',
        'Pacific/Niue' => 'Niw (Niue)',
        'Pacific/Norfolk' => 'Dunu Norfolk (Norfolk)',
        'Pacific/Noumea' => 'Nuwel Kaledoni (Noumea)',
        'Pacific/Pago_Pago' => 'Samowa bu Amerig (Pago Pago)',
        'Pacific/Palau' => 'Palaw (Palau)',
        'Pacific/Pitcairn' => 'Duni Pitkayirn (Pitcairn)',
        'Pacific/Ponape' => 'Mikoronesi (Pohnpei)',
        'Pacific/Port_Moresby' => 'Papuwasi Gine Gu Bees (Port Moresby)',
        'Pacific/Rarotonga' => 'Duni Kuuk (Rarotonga)',
        'Pacific/Saipan' => 'Duni Mariyaan Noor (Saipan)',
        'Pacific/Tahiti' => 'Polinesi Farañse (Tahiti)',
        'Pacific/Tarawa' => 'Kiribati (Tarawa)',
        'Pacific/Tongatapu' => 'Tonga (Tongatapu)',
        'Pacific/Truk' => 'Mikoronesi (Chuuk)',
        'Pacific/Wake' => 'Duni Amerig Utar meer (Wake)',
        'Pacific/Wallis' => 'Walis ak Futuna (Wallis)',
    ],
    'Meta' => [],
];
";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";