1738044982
84e399b8f2181ccd73394fdeddff1638-phpdoc%3A14c3ac723b47131d6679355bdb3b050d-6f6410c74a986567dfc622019486ee74
s:37820:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:6:"hu.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"6f6410c74a986567dfc622019486ee74";s:39:" phpDocumentor\Reflection\Php\File path";s:51:"vendor/symfony/intl/Resources/data/timezones/hu.php";s:41:" phpDocumentor\Reflection\Php\File source";s:27440:"<?php

return [
    'Names' => [
        'Africa/Abidjan' => 'greenwichi középidő, téli idő (Abidjan)',
        'Africa/Accra' => 'greenwichi középidő, téli idő (Accra)',
        'Africa/Addis_Ababa' => 'kelet-afrikai téli idő (Addisz-Abeba)',
        'Africa/Algiers' => 'közép-európai időzóna (Algír)',
        'Africa/Asmera' => 'kelet-afrikai téli idő (Asmera)',
        'Africa/Bamako' => 'greenwichi középidő, téli idő (Bamako)',
        'Africa/Bangui' => 'nyugat-afrikai időzóna (Bangui)',
        'Africa/Banjul' => 'greenwichi középidő, téli idő (Banjul)',
        'Africa/Bissau' => 'greenwichi középidő, téli idő (Bissau)',
        'Africa/Blantyre' => 'közép-afrikai téli idő (Blantyre)',
        'Africa/Brazzaville' => 'nyugat-afrikai időzóna (Brazzaville)',
        'Africa/Bujumbura' => 'közép-afrikai téli idő (Bujumbura)',
        'Africa/Cairo' => 'kelet-európai időzóna (Kairó)',
        'Africa/Casablanca' => 'nyugat-európai időzóna (Casablanca)',
        'Africa/Ceuta' => 'közép-európai időzóna (Ceuta)',
        'Africa/Conakry' => 'greenwichi középidő, téli idő (Conakry)',
        'Africa/Dakar' => 'greenwichi középidő, téli idő (Dakar)',
        'Africa/Dar_es_Salaam' => 'kelet-afrikai téli idő (Dar es-Salaam)',
        'Africa/Djibouti' => 'kelet-afrikai téli idő (Dzsibuti)',
        'Africa/Douala' => 'nyugat-afrikai időzóna (Douala)',
        'Africa/El_Aaiun' => 'nyugat-európai időzóna (El-Ajún)',
        'Africa/Freetown' => 'greenwichi középidő, téli idő (Freetown)',
        'Africa/Gaborone' => 'közép-afrikai téli idő (Gaborone)',
        'Africa/Harare' => 'közép-afrikai téli idő (Harare)',
        'Africa/Johannesburg' => 'dél-afrikai téli idő (Johannesburg)',
        'Africa/Juba' => 'közép-afrikai téli idő (Juba)',
        'Africa/Kampala' => 'kelet-afrikai téli idő (Kampala)',
        'Africa/Khartoum' => 'közép-afrikai téli idő (Kartúm)',
        'Africa/Kigali' => 'közép-afrikai téli idő (Kigali)',
        'Africa/Kinshasa' => 'nyugat-afrikai időzóna (Kinshasa)',
        'Africa/Lagos' => 'nyugat-afrikai időzóna (Lagos)',
        'Africa/Libreville' => 'nyugat-afrikai időzóna (Libreville)',
        'Africa/Lome' => 'greenwichi középidő, téli idő (Lome)',
        'Africa/Luanda' => 'nyugat-afrikai időzóna (Luanda)',
        'Africa/Lubumbashi' => 'közép-afrikai téli idő (Lubumbashi)',
        'Africa/Lusaka' => 'közép-afrikai téli idő (Lusaka)',
        'Africa/Malabo' => 'nyugat-afrikai időzóna (Malabó)',
        'Africa/Maputo' => 'közép-afrikai téli idő (Maputo)',
        'Africa/Maseru' => 'dél-afrikai téli idő (Maseru)',
        'Africa/Mbabane' => 'dél-afrikai téli idő (Mbabane)',
        'Africa/Mogadishu' => 'kelet-afrikai téli idő (Mogadishu)',
        'Africa/Monrovia' => 'greenwichi középidő, téli idő (Monrovia)',
        'Africa/Nairobi' => 'kelet-afrikai téli idő (Nairobi)',
        'Africa/Ndjamena' => 'nyugat-afrikai időzóna (Ndjamena)',
        'Africa/Niamey' => 'nyugat-afrikai időzóna (Niamey)',
        'Africa/Nouakchott' => 'greenwichi középidő, téli idő (Nouakchott)',
        'Africa/Ouagadougou' => 'greenwichi középidő, téli idő (Ouagadougou)',
        'Africa/Porto-Novo' => 'nyugat-afrikai időzóna (Porto-Novo)',
        'Africa/Sao_Tome' => 'greenwichi középidő, téli idő (São Tomé)',
        'Africa/Tripoli' => 'kelet-európai időzóna (Tripoli)',
        'Africa/Tunis' => 'közép-európai időzóna (Tunisz)',
        'Africa/Windhoek' => 'közép-afrikai téli idő (Windhoek)',
        'America/Adak' => 'hawaii-aleuti időzóna (Adak)',
        'America/Anchorage' => 'alaszkai idő (Anchorage)',
        'America/Anguilla' => 'atlanti-óceáni idő (Anguilla)',
        'America/Antigua' => 'atlanti-óceáni idő (Antigua)',
        'America/Araguaina' => 'brazíliai idő (Araguaína)',
        'America/Argentina/La_Rioja' => 'argentínai idő (La Rioja)',
        'America/Argentina/Rio_Gallegos' => 'argentínai idő (Río Gallegos)',
        'America/Argentina/Salta' => 'argentínai idő (Salta)',
        'America/Argentina/San_Juan' => 'argentínai idő (San Juan)',
        'America/Argentina/San_Luis' => 'argentínai idő (San Luis)',
        'America/Argentina/Tucuman' => 'argentínai idő (Tucumán)',
        'America/Argentina/Ushuaia' => 'argentínai idő (Ushuaia)',
        'America/Aruba' => 'atlanti-óceáni idő (Aruba)',
        'America/Asuncion' => 'paraguayi idő (Asunción)',
        'America/Bahia' => 'brazíliai idő (Bahia)',
        'America/Bahia_Banderas' => 'középső államokbeli idő (Bahia Banderas)',
        'America/Barbados' => 'atlanti-óceáni idő (Barbados)',
        'America/Belem' => 'brazíliai idő (Belém)',
        'America/Belize' => 'középső államokbeli idő (Belize)',
        'America/Blanc-Sablon' => 'atlanti-óceáni idő (Blanc-Sablon)',
        'America/Boa_Vista' => 'amazóniai idő (Boa Vista)',
        'America/Bogota' => 'kolumbiai idő (Bogotá)',
        'America/Boise' => 'hegyvidéki idő (Boise)',
        'America/Buenos_Aires' => 'argentínai idő (Buenos Aires)',
        'America/Cambridge_Bay' => 'hegyvidéki idő (Cambridge Bay)',
        'America/Campo_Grande' => 'amazóniai idő (Campo Grande)',
        'America/Cancun' => 'keleti államokbeli idő (Cancún)',
        'America/Caracas' => 'venezuelai idő (Caracas)',
        'America/Catamarca' => 'argentínai idő (Catamarca)',
        'America/Cayenne' => 'francia-guyanai idő (Cayenne)',
        'America/Cayman' => 'keleti államokbeli idő (Kajmán-szigetek)',
        'America/Chicago' => 'középső államokbeli idő (Chicago)',
        'America/Chihuahua' => 'középső államokbeli idő (Chihuahua)',
        'America/Ciudad_Juarez' => 'hegyvidéki idő (Ciudad Juárez)',
        'America/Coral_Harbour' => 'keleti államokbeli idő (Atikokan)',
        'America/Cordoba' => 'argentínai idő (Córdoba)',
        'America/Costa_Rica' => 'középső államokbeli idő (Costa Rica)',
        'America/Creston' => 'hegyvidéki idő (Creston)',
        'America/Cuiaba' => 'amazóniai idő (Cuiabá)',
        'America/Curacao' => 'atlanti-óceáni idő (Curaçao)',
        'America/Danmarkshavn' => 'greenwichi középidő, téli idő (Danmarkshavn)',
        'America/Dawson' => 'yukoni idő (Dawson)',
        'America/Dawson_Creek' => 'hegyvidéki idő (Dawson Creek)',
        'America/Denver' => 'hegyvidéki idő (Denver)',
        'America/Detroit' => 'keleti államokbeli idő (Detroit)',
        'America/Dominica' => 'atlanti-óceáni idő (Dominika)',
        'America/Edmonton' => 'hegyvidéki idő (Edmonton)',
        'America/Eirunepe' => 'Acre idő (Eirunepé)',
        'America/El_Salvador' => 'középső államokbeli idő (Salvador)',
        'America/Fort_Nelson' => 'hegyvidéki idő (Fort Nelson)',
        'America/Fortaleza' => 'brazíliai idő (Fortaleza)',
        'America/Glace_Bay' => 'atlanti-óceáni idő (Glace Bay)',
        'America/Godthab' => 'nyugat-grönlandi időzóna (Nuuk)',
        'America/Goose_Bay' => 'atlanti-óceáni idő (Goose Bay)',
        'America/Grand_Turk' => 'keleti államokbeli idő (Grand Turk)',
        'America/Grenada' => 'atlanti-óceáni idő (Grenada)',
        'America/Guadeloupe' => 'atlanti-óceáni idő (Guadeloupe)',
        'America/Guatemala' => 'középső államokbeli idő (Guatemala)',
        'America/Guayaquil' => 'ecuadori téli idő (Guayaquil)',
        'America/Guyana' => 'guyanai téli idő',
        'America/Halifax' => 'atlanti-óceáni idő (Halifax)',
        'America/Havana' => 'kubai időzóna (Havanna)',
        'America/Hermosillo' => 'mexikói csendes-óceáni idő (Hermosillo)',
        'America/Indiana/Knox' => 'középső államokbeli idő (Knox, Indiana)',
        'America/Indiana/Marengo' => 'keleti államokbeli idő (Marengo, Indiana)',
        'America/Indiana/Petersburg' => 'keleti államokbeli idő (Petersburg, Indiana)',
        'America/Indiana/Tell_City' => 'középső államokbeli idő (Tell City, Indiana)',
        'America/Indiana/Vevay' => 'keleti államokbeli idő (Vevay, Indiana)',
        'America/Indiana/Vincennes' => 'keleti államokbeli idő (Vincennes, Indiana)',
        'America/Indiana/Winamac' => 'keleti államokbeli idő (Winamac, Indiana)',
        'America/Indianapolis' => 'keleti államokbeli idő (Indianapolis)',
        'America/Inuvik' => 'hegyvidéki idő (Inuvik)',
        'America/Iqaluit' => 'keleti államokbeli idő (Iqaluit)',
        'America/Jamaica' => 'keleti államokbeli idő (Jamaica)',
        'America/Jujuy' => 'argentínai idő (Jujuy)',
        'America/Juneau' => 'alaszkai idő (Juneau)',
        'America/Kentucky/Monticello' => 'keleti államokbeli idő (Monticello, Kentucky)',
        'America/Kralendijk' => 'atlanti-óceáni idő (Kralendijk)',
        'America/La_Paz' => 'bolíviai téli idő (La Paz)',
        'America/Lima' => 'perui idő (Lima)',
        'America/Los_Angeles' => 'csendes-óceáni idő (Los Angeles)',
        'America/Louisville' => 'keleti államokbeli idő (Louisville)',
        'America/Lower_Princes' => 'atlanti-óceáni idő (Lower Prince’s Quarter)',
        'America/Maceio' => 'brazíliai idő (Maceió)',
        'America/Managua' => 'középső államokbeli idő (Managua)',
        'America/Manaus' => 'amazóniai idő (Manaus)',
        'America/Marigot' => 'atlanti-óceáni idő (Marigot)',
        'America/Martinique' => 'atlanti-óceáni idő (Martinique)',
        'America/Matamoros' => 'középső államokbeli idő (Matamoros)',
        'America/Mazatlan' => 'mexikói csendes-óceáni idő (Mazatlán)',
        'America/Mendoza' => 'argentínai idő (Mendoza)',
        'America/Menominee' => 'középső államokbeli idő (Menominee)',
        'America/Merida' => 'középső államokbeli idő (Mérida)',
        'America/Metlakatla' => 'alaszkai idő (Metlakatla)',
        'America/Mexico_City' => 'középső államokbeli idő (Mexikóváros)',
        'America/Miquelon' => 'Saint-Pierre és Miquelon-i idő',
        'America/Moncton' => 'atlanti-óceáni idő (Moncton)',
        'America/Monterrey' => 'középső államokbeli idő (Monterrey)',
        'America/Montevideo' => 'uruguayi idő (Montevideo)',
        'America/Montserrat' => 'atlanti-óceáni idő (Montserrat)',
        'America/Nassau' => 'keleti államokbeli idő (Nassau)',
        'America/New_York' => 'keleti államokbeli idő (New York)',
        'America/Nome' => 'alaszkai idő (Nome)',
        'America/Noronha' => 'Fernando de Noronha-i idő',
        'America/North_Dakota/Beulah' => 'középső államokbeli idő (Beulah, Észak-Dakota)',
        'America/North_Dakota/Center' => 'középső államokbeli idő (Center, Észak-Dakota)',
        'America/North_Dakota/New_Salem' => 'középső államokbeli idő (New Salem, Észak-Dakota)',
        'America/Ojinaga' => 'középső államokbeli idő (Ojinaga)',
        'America/Panama' => 'keleti államokbeli idő (Panama)',
        'America/Paramaribo' => 'szurinámi idő (Paramaribo)',
        'America/Phoenix' => 'hegyvidéki idő (Phoenix)',
        'America/Port-au-Prince' => 'keleti államokbeli idő (Port-au-Prince)',
        'America/Port_of_Spain' => 'atlanti-óceáni idő (Port of Spain)',
        'America/Porto_Velho' => 'amazóniai idő (Porto Velho)',
        'America/Puerto_Rico' => 'atlanti-óceáni idő (Puerto Rico)',
        'America/Punta_Arenas' => 'chilei időzóna (Punta Arenas)',
        'America/Rankin_Inlet' => 'középső államokbeli idő (Rankin Inlet)',
        'America/Recife' => 'brazíliai idő (Recife)',
        'America/Regina' => 'középső államokbeli idő (Regina)',
        'America/Resolute' => 'középső államokbeli idő (Resolute)',
        'America/Rio_Branco' => 'Acre idő (Río Branco)',
        'America/Santarem' => 'brazíliai idő (Santarem)',
        'America/Santiago' => 'chilei időzóna (Santiago)',
        'America/Santo_Domingo' => 'atlanti-óceáni idő (Santo Domingo)',
        'America/Sao_Paulo' => 'brazíliai idő (São Paulo)',
        'America/Scoresbysund' => 'kelet-grönlandi időzóna (Ittoqqortoormiit)',
        'America/Sitka' => 'alaszkai idő (Sitka)',
        'America/St_Barthelemy' => 'atlanti-óceáni idő (Saint-Barthélemy)',
        'America/St_Johns' => 'új-fundlandi idő (St. John’s)',
        'America/St_Kitts' => 'atlanti-óceáni idő (St. Kitts)',
        'America/St_Lucia' => 'atlanti-óceáni idő (St. Lucia)',
        'America/St_Thomas' => 'atlanti-óceáni idő (St. Thomas)',
        'America/St_Vincent' => 'atlanti-óceáni idő (St. Vincent)',
        'America/Swift_Current' => 'középső államokbeli idő (Swift Current)',
        'America/Tegucigalpa' => 'középső államokbeli idő (Tegucigalpa)',
        'America/Thule' => 'atlanti-óceáni idő (Thule)',
        'America/Tijuana' => 'csendes-óceáni idő (Tijuana)',
        'America/Toronto' => 'keleti államokbeli idő (Toronto)',
        'America/Tortola' => 'atlanti-óceáni idő (Tortola)',
        'America/Vancouver' => 'csendes-óceáni idő (Vancouver)',
        'America/Whitehorse' => 'yukoni idő (Whitehorse)',
        'America/Winnipeg' => 'középső államokbeli idő (Winnipeg)',
        'America/Yakutat' => 'alaszkai idő (Yakutat)',
        'Antarctica/Casey' => 'casey-i idő',
        'Antarctica/Davis' => 'davisi idő',
        'Antarctica/DumontDUrville' => 'dumont-d’Urville-i idő',
        'Antarctica/Macquarie' => 'kelet-ausztráliai idő (Macquarie)',
        'Antarctica/Mawson' => 'mawsoni idő',
        'Antarctica/McMurdo' => 'új-zélandi idő (McMurdo)',
        'Antarctica/Palmer' => 'chilei időzóna (Palmer)',
        'Antarctica/Rothera' => 'rotherai idő',
        'Antarctica/Syowa' => 'syowai idő',
        'Antarctica/Troll' => 'greenwichi középidő, téli idő (Troll)',
        'Antarctica/Vostok' => 'vosztoki idő',
        'Arctic/Longyearbyen' => 'közép-európai időzóna (Longyearbyen)',
        'Asia/Aden' => 'arab idő (Áden)',
        'Asia/Almaty' => 'kelet-kazahsztáni idő (Alma-Ata)',
        'Asia/Amman' => 'kelet-európai időzóna (Ammán)',
        'Asia/Anadyr' => 'Anadiri idő',
        'Asia/Aqtau' => 'nyugat-kazahsztáni idő (Aktau)',
        'Asia/Aqtobe' => 'nyugat-kazahsztáni idő (Aktöbe)',
        'Asia/Ashgabat' => 'türkmenisztáni idő (Asgabat)',
        'Asia/Atyrau' => 'nyugat-kazahsztáni idő (Atirau)',
        'Asia/Baghdad' => 'arab idő (Bagdad)',
        'Asia/Bahrain' => 'arab idő (Bahrein)',
        'Asia/Baku' => 'azerbajdzsáni idő (Baku)',
        'Asia/Bangkok' => 'indokínai idő (Bangkok)',
        'Asia/Barnaul' => 'Oroszország idő (Barnaul)',
        'Asia/Beirut' => 'kelet-európai időzóna (Bejrút)',
        'Asia/Bishkek' => 'kirgizisztáni idő (Biskek)',
        'Asia/Brunei' => 'Brunei Darussalam-i idő',
        'Asia/Calcutta' => 'indiai téli idő (Kalkutta)',
        'Asia/Chita' => 'jakutszki idő (Csita)',
        'Asia/Choibalsan' => 'ulánbátori idő (Csojbalszan)',
        'Asia/Colombo' => 'indiai téli idő (Colombo)',
        'Asia/Damascus' => 'kelet-európai időzóna (Damaszkusz)',
        'Asia/Dhaka' => 'bangladesi idő (Dakka)',
        'Asia/Dili' => 'kelet-timori téli idő (Dili)',
        'Asia/Dubai' => 'öbölbeli téli idő (Dubaj)',
        'Asia/Dushanbe' => 'tádzsikisztáni idő (Dusanbe)',
        'Asia/Famagusta' => 'kelet-európai időzóna (Famagusta)',
        'Asia/Gaza' => 'kelet-európai időzóna (Gáza)',
        'Asia/Hebron' => 'kelet-európai időzóna (Hebron)',
        'Asia/Hong_Kong' => 'hongkongi időzóna',
        'Asia/Hovd' => 'hovdi idő',
        'Asia/Irkutsk' => 'irkutszki idő',
        'Asia/Jakarta' => 'nyugat-indonéziai téli idő (Jakarta)',
        'Asia/Jayapura' => 'kelet-indonéziai idő (Jayapura)',
        'Asia/Jerusalem' => 'izraeli idő (Jeruzsálem)',
        'Asia/Kabul' => 'afganisztáni idő (Kabul)',
        'Asia/Kamchatka' => 'Petropavlovszk-kamcsatkai idő',
        'Asia/Karachi' => 'pakisztáni idő (Karacsi)',
        'Asia/Katmandu' => 'nepáli idő (Katmandu)',
        'Asia/Khandyga' => 'jakutszki idő (Handiga)',
        'Asia/Krasnoyarsk' => 'krasznojarszki idő',
        'Asia/Kuala_Lumpur' => 'malajziai idő (Kuala Lumpur)',
        'Asia/Kuching' => 'malajziai idő (Kucseng)',
        'Asia/Kuwait' => 'arab idő (Kuvait)',
        'Asia/Macau' => 'kínai idő (Makaó)',
        'Asia/Magadan' => 'magadáni idő',
        'Asia/Makassar' => 'közép-indonéziai idő (Makasar)',
        'Asia/Manila' => 'fülöp-szigeteki idő (Manila)',
        'Asia/Muscat' => 'öbölbeli téli idő (Maszkat)',
        'Asia/Nicosia' => 'kelet-európai időzóna (Nicosia)',
        'Asia/Novokuznetsk' => 'krasznojarszki idő (Novokuznyeck)',
        'Asia/Novosibirsk' => 'novoszibirszki idő',
        'Asia/Omsk' => 'omszki idő',
        'Asia/Oral' => 'nyugat-kazahsztáni idő (Oral)',
        'Asia/Phnom_Penh' => 'indokínai idő (Phnom Penh)',
        'Asia/Pontianak' => 'nyugat-indonéziai téli idő (Pontianak)',
        'Asia/Pyongyang' => 'koreai idő (Phenjan)',
        'Asia/Qatar' => 'arab idő (Katar)',
        'Asia/Qostanay' => 'kelet-kazahsztáni idő (Kosztanaj)',
        'Asia/Qyzylorda' => 'nyugat-kazahsztáni idő (Kizilorda)',
        'Asia/Rangoon' => 'mianmari idő (Yangon)',
        'Asia/Riyadh' => 'arab idő (Rijád)',
        'Asia/Saigon' => 'indokínai idő (Ho Si Minh-város)',
        'Asia/Sakhalin' => 'szahalini idő',
        'Asia/Samarkand' => 'üzbegisztáni idő (Szamarkand)',
        'Asia/Seoul' => 'koreai idő (Szöul)',
        'Asia/Shanghai' => 'kínai idő (Sanghaj)',
        'Asia/Singapore' => 'szingapúri téli idő',
        'Asia/Srednekolymsk' => 'magadáni idő (Szrednekolimszk)',
        'Asia/Taipei' => 'taipei idő (Tajpej)',
        'Asia/Tashkent' => 'üzbegisztáni idő (Taskent)',
        'Asia/Tbilisi' => 'grúziai idő (Tbiliszi)',
        'Asia/Tehran' => 'iráni idő (Teherán)',
        'Asia/Thimphu' => 'butáni idő (Timpu)',
        'Asia/Tokyo' => 'japán idő (Tokió)',
        'Asia/Tomsk' => 'Oroszország idő (Tomszk)',
        'Asia/Ulaanbaatar' => 'ulánbátori idő',
        'Asia/Urumqi' => 'Kína idő (Ürümcsi)',
        'Asia/Ust-Nera' => 'vlagyivosztoki idő (Uszty-Nyera)',
        'Asia/Vientiane' => 'indokínai idő (Vientián)',
        'Asia/Vladivostok' => 'vlagyivosztoki idő',
        'Asia/Yakutsk' => 'jakutszki idő',
        'Asia/Yekaterinburg' => 'jekatyerinburgi idő',
        'Asia/Yerevan' => 'örményországi idő (Jereván)',
        'Atlantic/Azores' => 'azori időzóna (Azori-szigetek)',
        'Atlantic/Bermuda' => 'atlanti-óceáni idő (Bermuda)',
        'Atlantic/Canary' => 'nyugat-európai időzóna (Kanári-szigetek)',
        'Atlantic/Cape_Verde' => 'zöld-foki-szigeteki időzóna',
        'Atlantic/Faeroe' => 'nyugat-európai időzóna (Feröer)',
        'Atlantic/Madeira' => 'nyugat-európai időzóna (Madeira)',
        'Atlantic/Reykjavik' => 'greenwichi középidő, téli idő (Reykjavík)',
        'Atlantic/South_Georgia' => 'déli-georgiai idő',
        'Atlantic/St_Helena' => 'greenwichi középidő, téli idő (Szent Ilona)',
        'Atlantic/Stanley' => 'falkland-szigeteki idő (Stanley)',
        'Australia/Adelaide' => 'közép-ausztráliai idő (Adelaide)',
        'Australia/Brisbane' => 'kelet-ausztráliai idő (Brisbane)',
        'Australia/Broken_Hill' => 'közép-ausztráliai idő (Broken Hill)',
        'Australia/Darwin' => 'közép-ausztráliai idő (Darwin)',
        'Australia/Eucla' => 'közép-nyugat-ausztráliai idő (Eucla)',
        'Australia/Hobart' => 'kelet-ausztráliai idő (Hobart)',
        'Australia/Lindeman' => 'kelet-ausztráliai idő (Lindeman)',
        'Australia/Lord_Howe' => 'Lord Howe-szigeti idő',
        'Australia/Melbourne' => 'kelet-ausztráliai idő (Melbourne)',
        'Australia/Perth' => 'nyugat-ausztráliai idő (Perth)',
        'Australia/Sydney' => 'kelet-ausztráliai idő (Sydney)',
        'CST6CDT' => 'középső államokbeli idő',
        'EST5EDT' => 'keleti államokbeli idő',
        'Etc/GMT' => 'greenwichi középidő, téli idő',
        'Etc/UTC' => 'koordinált világidő',
        'Europe/Amsterdam' => 'közép-európai időzóna (Amszterdam)',
        'Europe/Andorra' => 'közép-európai időzóna (Andorra)',
        'Europe/Astrakhan' => 'moszkvai idő (Asztrahán)',
        'Europe/Athens' => 'kelet-európai időzóna (Athén)',
        'Europe/Belgrade' => 'közép-európai időzóna (Belgrád)',
        'Europe/Berlin' => 'közép-európai időzóna (Berlin)',
        'Europe/Bratislava' => 'közép-európai időzóna (Pozsony)',
        'Europe/Brussels' => 'közép-európai időzóna (Brüsszel)',
        'Europe/Bucharest' => 'kelet-európai időzóna (Bukarest)',
        'Europe/Budapest' => 'közép-európai időzóna (Budapest)',
        'Europe/Busingen' => 'közép-európai időzóna (Büsingen)',
        'Europe/Chisinau' => 'kelet-európai időzóna (Chisinau)',
        'Europe/Copenhagen' => 'közép-európai időzóna (Koppenhága)',
        'Europe/Dublin' => 'greenwichi középidő, téli idő (Dublin)',
        'Europe/Gibraltar' => 'közép-európai időzóna (Gibraltár)',
        'Europe/Guernsey' => 'greenwichi középidő, téli idő (Guernsey)',
        'Europe/Helsinki' => 'kelet-európai időzóna (Helsinki)',
        'Europe/Isle_of_Man' => 'greenwichi középidő, téli idő (Man-sziget)',
        'Europe/Istanbul' => 'Törökország idő (Isztanbul)',
        'Europe/Jersey' => 'greenwichi középidő, téli idő (Jersey)',
        'Europe/Kaliningrad' => 'kelet-európai időzóna (Kalinyingrád)',
        'Europe/Kiev' => 'kelet-európai időzóna (Kijev)',
        'Europe/Kirov' => 'Oroszország idő (Kirov)',
        'Europe/Lisbon' => 'nyugat-európai időzóna (Lisszabon)',
        'Europe/Ljubljana' => 'közép-európai időzóna (Ljubljana)',
        'Europe/London' => 'greenwichi középidő, téli idő (London)',
        'Europe/Luxembourg' => 'közép-európai időzóna (Luxemburg)',
        'Europe/Madrid' => 'közép-európai időzóna (Madrid)',
        'Europe/Malta' => 'közép-európai időzóna (Málta)',
        'Europe/Mariehamn' => 'kelet-európai időzóna (Mariehamn)',
        'Europe/Minsk' => 'moszkvai idő (Minszk)',
        'Europe/Monaco' => 'közép-európai időzóna (Monaco)',
        'Europe/Moscow' => 'moszkvai idő',
        'Europe/Oslo' => 'közép-európai időzóna (Oslo)',
        'Europe/Paris' => 'közép-európai időzóna (Párizs)',
        'Europe/Podgorica' => 'közép-európai időzóna (Podgorica)',
        'Europe/Prague' => 'közép-európai időzóna (Prága)',
        'Europe/Riga' => 'kelet-európai időzóna (Riga)',
        'Europe/Rome' => 'közép-európai időzóna (Róma)',
        'Europe/Samara' => 'Szamarai idő',
        'Europe/San_Marino' => 'közép-európai időzóna (San Marino)',
        'Europe/Sarajevo' => 'közép-európai időzóna (Szarajevó)',
        'Europe/Saratov' => 'moszkvai idő (Szaratov)',
        'Europe/Simferopol' => 'moszkvai idő (Szimferopol)',
        'Europe/Skopje' => 'közép-európai időzóna (Szkopje)',
        'Europe/Sofia' => 'kelet-európai időzóna (Szófia)',
        'Europe/Stockholm' => 'közép-európai időzóna (Stockholm)',
        'Europe/Tallinn' => 'kelet-európai időzóna (Tallin)',
        'Europe/Tirane' => 'közép-európai időzóna (Tirana)',
        'Europe/Ulyanovsk' => 'moszkvai idő (Uljanovszk)',
        'Europe/Vaduz' => 'közép-európai időzóna (Vaduz)',
        'Europe/Vatican' => 'közép-európai időzóna (Vatikán)',
        'Europe/Vienna' => 'közép-európai időzóna (Bécs)',
        'Europe/Vilnius' => 'kelet-európai időzóna (Vilnius)',
        'Europe/Volgograd' => 'volgográdi idő',
        'Europe/Warsaw' => 'közép-európai időzóna (Varsó)',
        'Europe/Zagreb' => 'közép-európai időzóna (Zágráb)',
        'Europe/Zurich' => 'közép-európai időzóna (Zürich)',
        'Indian/Antananarivo' => 'kelet-afrikai téli idő (Antananarivo)',
        'Indian/Chagos' => 'indiai-óceáni idő (Chagos)',
        'Indian/Christmas' => 'karácsony-szigeti idő',
        'Indian/Cocos' => 'kókusz-szigeteki téli idő',
        'Indian/Comoro' => 'kelet-afrikai téli idő (Komoró)',
        'Indian/Kerguelen' => 'francia déli és antarktiszi idő (Kerguelen)',
        'Indian/Mahe' => 'seychelle-szigeteki idő (Mahe)',
        'Indian/Maldives' => 'maldív-szigeteki idő',
        'Indian/Mauritius' => 'mauritiusi időzóna',
        'Indian/Mayotte' => 'kelet-afrikai téli idő (Mayotte)',
        'Indian/Reunion' => 'réunioni idő',
        'MST7MDT' => 'hegyvidéki idő',
        'PST8PDT' => 'csendes-óceáni idő',
        'Pacific/Apia' => 'apiai idő',
        'Pacific/Auckland' => 'új-zélandi idő (Auckland)',
        'Pacific/Bougainville' => 'pápua új-guineai idő (Bougainville)',
        'Pacific/Chatham' => 'chathami idő (Chatham-szigetek)',
        'Pacific/Easter' => 'húsvét-szigeti időzóna (Húsvét-szigetek)',
        'Pacific/Efate' => 'vanuatui idő (Efate)',
        'Pacific/Enderbury' => 'phoenix-szigeteki téli idő (Enderbury)',
        'Pacific/Fakaofo' => 'tokelaui idő (Fakaofo)',
        'Pacific/Fiji' => 'fidzsi idő',
        'Pacific/Funafuti' => 'tuvalui idő (Funafuti)',
        'Pacific/Galapagos' => 'galápagosi téli idő (Galapagos-szigetek)',
        'Pacific/Gambier' => 'gambieri idő (Gambier-szigetek)',
        'Pacific/Guadalcanal' => 'salamon-szigeteki idő (Guadalcanal)',
        'Pacific/Guam' => 'chamorrói téli idő (Guam)',
        'Pacific/Honolulu' => 'hawaii-aleuti időzóna (Honolulu)',
        'Pacific/Kiritimati' => 'sor-szigeteki idő (Kiritimati-sziget)',
        'Pacific/Kosrae' => 'kosraei idő (Kosrae-szigetek)',
        'Pacific/Kwajalein' => 'marshall-szigeteki idő (Kwajalein-zátony)',
        'Pacific/Majuro' => 'marshall-szigeteki idő (Majuro-zátony)',
        'Pacific/Marquesas' => 'marquises-szigeteki idő (Marquesas-szigetek)',
        'Pacific/Midway' => 'szamoai idő (Midway-szigetek)',
        'Pacific/Nauru' => 'naurui idő',
        'Pacific/Niue' => 'niuei idő',
        'Pacific/Norfolk' => 'norfolk-szigeteki idő',
        'Pacific/Noumea' => 'új-kaledóniai idő (Noumea)',
        'Pacific/Pago_Pago' => 'szamoai idő (Pago Pago)',
        'Pacific/Palau' => 'palaui idő',
        'Pacific/Pitcairn' => 'pitcairn-szigeteki idő',
        'Pacific/Ponape' => 'ponape-szigeti idő (Ponape-szigetek)',
        'Pacific/Port_Moresby' => 'pápua új-guineai idő (Port Moresby)',
        'Pacific/Rarotonga' => 'cook-szigeteki idő (Rarotonga)',
        'Pacific/Saipan' => 'chamorrói téli idő (Saipan)',
        'Pacific/Tahiti' => 'tahiti idő',
        'Pacific/Tarawa' => 'gilbert-szigeteki idő (Tarawa)',
        'Pacific/Tongatapu' => 'tongai idő (Tongatapu)',
        'Pacific/Truk' => 'truki idő',
        'Pacific/Wake' => 'wake-szigeti idő',
        'Pacific/Wallis' => 'Wallis és Futuna-i idő',
    ],
    'Meta' => [],
];
";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";