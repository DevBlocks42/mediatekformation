1738044972
84e399b8f2181ccd73394fdeddff1638-phpdoc%3A8dab1ccec64dc04a454c56ff42072471-7464384927ec3069efcc8d3cf4dfb77e
s:7844:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjExOiJzZXNzaW9uLnBocCI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjE6e3M6NTg6IlxTeW1mb255XENvbXBvbmVudFxEZXBlbmRlbmN5SW5qZWN0aW9uXExvYWRlclxDb25maWd1cmF0b3IiO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1ODoiXFN5bWZvbnlcQ29tcG9uZW50XERlcGVuZGVuY3lJbmplY3Rpb25cTG9hZGVyXENvbmZpZ3VyYXRvciI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEyOiJDb25maWd1cmF0b3IiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaGFzaCI7czozMjoiNzQ2NDM4NDkyN2VjMzA2OWVmY2M4ZDNjZjRkZmI3N2UiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo2MDoidmVuZG9yL3N5bWZvbnkvZnJhbWV3b3JrLWJ1bmRsZS9SZXNvdXJjZXMvY29uZmlnL3Nlc3Npb24ucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czo0NjYxOiI8P3BocAoKLyoKICogVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIFN5bWZvbnkgcGFja2FnZS4KICoKICogKGMpIEZhYmllbiBQb3RlbmNpZXIgPGZhYmllbkBzeW1mb255LmNvbT4KICoKICogRm9yIHRoZSBmdWxsIGNvcHlyaWdodCBhbmQgbGljZW5zZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHZpZXcgdGhlIExJQ0VOU0UKICogZmlsZSB0aGF0IHdhcyBkaXN0cmlidXRlZCB3aXRoIHRoaXMgc291cmNlIGNvZGUuCiAqLwoKbmFtZXNwYWNlIFN5bWZvbnlcQ29tcG9uZW50XERlcGVuZGVuY3lJbmplY3Rpb25cTG9hZGVyXENvbmZpZ3VyYXRvcjsKCnVzZSBTeW1mb255XENvbXBvbmVudFxIdHRwRm91bmRhdGlvblxTZXNzaW9uXFNlc3Npb25GYWN0b3J5Owp1c2UgU3ltZm9ueVxDb21wb25lbnRcSHR0cEZvdW5kYXRpb25cU2Vzc2lvblxTdG9yYWdlXEhhbmRsZXJcQWJzdHJhY3RTZXNzaW9uSGFuZGxlcjsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XEh0dHBGb3VuZGF0aW9uXFNlc3Npb25cU3RvcmFnZVxIYW5kbGVyXElkZW50aXR5TWFyc2hhbGxlcjsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XEh0dHBGb3VuZGF0aW9uXFNlc3Npb25cU3RvcmFnZVxIYW5kbGVyXE1hcnNoYWxsaW5nU2Vzc2lvbkhhbmRsZXI7CnVzZSBTeW1mb255XENvbXBvbmVudFxIdHRwRm91bmRhdGlvblxTZXNzaW9uXFN0b3JhZ2VcSGFuZGxlclxOYXRpdmVGaWxlU2Vzc2lvbkhhbmRsZXI7CnVzZSBTeW1mb255XENvbXBvbmVudFxIdHRwRm91bmRhdGlvblxTZXNzaW9uXFN0b3JhZ2VcSGFuZGxlclxTZXNzaW9uSGFuZGxlckZhY3Rvcnk7CnVzZSBTeW1mb255XENvbXBvbmVudFxIdHRwRm91bmRhdGlvblxTZXNzaW9uXFN0b3JhZ2VcSGFuZGxlclxTdHJpY3RTZXNzaW9uSGFuZGxlcjsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XEh0dHBGb3VuZGF0aW9uXFNlc3Npb25cU3RvcmFnZVxNZXRhZGF0YUJhZzsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XEh0dHBGb3VuZGF0aW9uXFNlc3Npb25cU3RvcmFnZVxNb2NrRmlsZVNlc3Npb25TdG9yYWdlRmFjdG9yeTsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XEh0dHBGb3VuZGF0aW9uXFNlc3Npb25cU3RvcmFnZVxOYXRpdmVTZXNzaW9uU3RvcmFnZUZhY3Rvcnk7CnVzZSBTeW1mb255XENvbXBvbmVudFxIdHRwRm91bmRhdGlvblxTZXNzaW9uXFN0b3JhZ2VcUGhwQnJpZGdlU2Vzc2lvblN0b3JhZ2VGYWN0b3J5Owp1c2UgU3ltZm9ueVxDb21wb25lbnRcSHR0cEtlcm5lbFxFdmVudExpc3RlbmVyXFNlc3Npb25MaXN0ZW5lcjsKCnJldHVybiBzdGF0aWMgZnVuY3Rpb24gKENvbnRhaW5lckNvbmZpZ3VyYXRvciAkY29udGFpbmVyKSB7CiAgICAkY29udGFpbmVyLT5wYXJhbWV0ZXJzKCktPnNldCgnc2Vzc2lvbi5tZXRhZGF0YS5zdG9yYWdlX2tleScsICdfc2YyX21ldGEnKTsKCiAgICAkY29udGFpbmVyLT5zZXJ2aWNlcygpCiAgICAgICAgLT5zZXQoJ3Nlc3Npb24uZmFjdG9yeScsIFNlc3Npb25GYWN0b3J5OjpjbGFzcykKICAgICAgICAgICAgLT5hcmdzKFsKICAgICAgICAgICAgICAgIHNlcnZpY2UoJ3JlcXVlc3Rfc3RhY2snKSwKICAgICAgICAgICAgICAgIHNlcnZpY2UoJ3Nlc3Npb24uc3RvcmFnZS5mYWN0b3J5JyksCiAgICAgICAgICAgICAgICBbc2VydmljZSgnc2Vzc2lvbl9saXN0ZW5lcicpLCAnb25TZXNzaW9uVXNhZ2UnXSwKICAgICAgICAgICAgXSkKCiAgICAgICAgLT5zZXQoJ3Nlc3Npb24uc3RvcmFnZS5mYWN0b3J5Lm5hdGl2ZScsIE5hdGl2ZVNlc3Npb25TdG9yYWdlRmFjdG9yeTo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBwYXJhbSgnc2Vzc2lvbi5zdG9yYWdlLm9wdGlvbnMnKSwKICAgICAgICAgICAgICAgIHNlcnZpY2UoJ3Nlc3Npb24uaGFuZGxlcicpLAogICAgICAgICAgICAgICAgaW5saW5lX3NlcnZpY2UoTWV0YWRhdGFCYWc6OmNsYXNzKQogICAgICAgICAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtKCdzZXNzaW9uLm1ldGFkYXRhLnN0b3JhZ2Vfa2V5JyksCiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtKCdzZXNzaW9uLm1ldGFkYXRhLnVwZGF0ZV90aHJlc2hvbGQnKSwKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIGZhbHNlLAogICAgICAgICAgICBdKQogICAgICAgIC0+c2V0KCdzZXNzaW9uLnN0b3JhZ2UuZmFjdG9yeS5waHBfYnJpZGdlJywgUGhwQnJpZGdlU2Vzc2lvblN0b3JhZ2VGYWN0b3J5OjpjbGFzcykKICAgICAgICAgICAgLT5hcmdzKFsKICAgICAgICAgICAgICAgIHNlcnZpY2UoJ3Nlc3Npb24uaGFuZGxlcicpLAogICAgICAgICAgICAgICAgaW5saW5lX3NlcnZpY2UoTWV0YWRhdGFCYWc6OmNsYXNzKQogICAgICAgICAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtKCdzZXNzaW9uLm1ldGFkYXRhLnN0b3JhZ2Vfa2V5JyksCiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtKCdzZXNzaW9uLm1ldGFkYXRhLnVwZGF0ZV90aHJlc2hvbGQnKSwKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIGZhbHNlLAogICAgICAgICAgICBdKQogICAgICAgIC0+c2V0KCdzZXNzaW9uLnN0b3JhZ2UuZmFjdG9yeS5tb2NrX2ZpbGUnLCBNb2NrRmlsZVNlc3Npb25TdG9yYWdlRmFjdG9yeTo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBwYXJhbSgna2VybmVsLmNhY2hlX2RpcicpLicvc2Vzc2lvbnMnLAogICAgICAgICAgICAgICAgJ01PQ0tTRVNTSUQnLAogICAgICAgICAgICAgICAgaW5saW5lX3NlcnZpY2UoTWV0YWRhdGFCYWc6OmNsYXNzKQogICAgICAgICAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtKCdzZXNzaW9uLm1ldGFkYXRhLnN0b3JhZ2Vfa2V5JyksCiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtKCdzZXNzaW9uLm1ldGFkYXRhLnVwZGF0ZV90aHJlc2hvbGQnKSwKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgXSkKCiAgICAgICAgLT5hbGlhcyhcU2Vzc2lvbkhhbmRsZXJJbnRlcmZhY2U6OmNsYXNzLCAnc2Vzc2lvbi5oYW5kbGVyJykKCiAgICAgICAgLT5zZXQoJ3Nlc3Npb24uaGFuZGxlci5uYXRpdmUnLCBTdHJpY3RTZXNzaW9uSGFuZGxlcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBpbmxpbmVfc2VydmljZShcU2Vzc2lvbkhhbmRsZXI6OmNsYXNzKSwKICAgICAgICAgICAgXSkKCiAgICAgICAgLT5zZXQoJ3Nlc3Npb24uaGFuZGxlci5uYXRpdmVfZmlsZScsIFN0cmljdFNlc3Npb25IYW5kbGVyOjpjbGFzcykKICAgICAgICAgICAgLT5hcmdzKFsKICAgICAgICAgICAgICAgIGlubGluZV9zZXJ2aWNlKE5hdGl2ZUZpbGVTZXNzaW9uSGFuZGxlcjo6Y2xhc3MpCiAgICAgICAgICAgICAgICAgICAgLT5hcmdzKFtwYXJhbSgnc2Vzc2lvbi5zYXZlX3BhdGgnKV0pLAogICAgICAgICAgICBdKQoKICAgICAgICAtPnNldCgnc2Vzc2lvbi5hYnN0cmFjdF9oYW5kbGVyJywgQWJzdHJhY3RTZXNzaW9uSGFuZGxlcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+ZmFjdG9yeShbU2Vzc2lvbkhhbmRsZXJGYWN0b3J5OjpjbGFzcywgJ2NyZWF0ZUhhbmRsZXInXSkKICAgICAgICAgICAgLT5hcmdzKFthYnN0cmFjdF9hcmcoJ0Egc3RyaW5nIG9yIGEgY29ubmVjdGlvbiBvYmplY3QnKSwgW11dKQoKICAgICAgICAtPnNldCgnc2Vzc2lvbl9saXN0ZW5lcicsIFNlc3Npb25MaXN0ZW5lcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBzZXJ2aWNlX2xvY2F0b3IoWwogICAgICAgICAgICAgICAgICAgICdzZXNzaW9uX2ZhY3RvcnknID0+IHNlcnZpY2UoJ3Nlc3Npb24uZmFjdG9yeScpLT5pZ25vcmVPbkludmFsaWQoKSwKICAgICAgICAgICAgICAgICAgICAnbG9nZ2VyJyA9PiBzZXJ2aWNlKCdsb2dnZXInKS0+aWdub3JlT25JbnZhbGlkKCksCiAgICAgICAgICAgICAgICAgICAgJ3Nlc3Npb25fY29sbGVjdG9yJyA9PiBzZXJ2aWNlKCdkYXRhX2NvbGxlY3Rvci5yZXF1ZXN0LnNlc3Npb25fY29sbGVjdG9yJyktPmlnbm9yZU9uSW52YWxpZCgpLAogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBwYXJhbSgna2VybmVsLmRlYnVnJyksCiAgICAgICAgICAgICAgICBwYXJhbSgnc2Vzc2lvbi5zdG9yYWdlLm9wdGlvbnMnKSwKICAgICAgICAgICAgXSkKICAgICAgICAgICAgLT50YWcoJ2tlcm5lbC5ldmVudF9zdWJzY3JpYmVyJykKICAgICAgICAgICAgLT50YWcoJ2tlcm5lbC5yZXNldCcsIFsnbWV0aG9kJyA9PiAncmVzZXQnXSkKCiAgICAgICAgLT5zZXQoJ3Nlc3Npb24ubWFyc2hhbGxlcicsIElkZW50aXR5TWFyc2hhbGxlcjo6Y2xhc3MpCgogICAgICAgIC0+c2V0KCdzZXNzaW9uLm1hcnNoYWxsaW5nX2hhbmRsZXInLCBNYXJzaGFsbGluZ1Nlc3Npb25IYW5kbGVyOjpjbGFzcykKICAgICAgICAgICAgLT5kZWNvcmF0ZSgnc2Vzc2lvbi5oYW5kbGVyJykKICAgICAgICAgICAgLT5hcmdzKFsKICAgICAgICAgICAgICAgIHNlcnZpY2UoJ3Nlc3Npb24ubWFyc2hhbGxpbmdfaGFuZGxlci5pbm5lcicpLAogICAgICAgICAgICAgICAgc2VydmljZSgnc2Vzc2lvbi5tYXJzaGFsbGVyJyksCiAgICAgICAgICAgIF0pCiAgICA7Cn07CiI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";