1738044982
84e399b8f2181ccd73394fdeddff1638-phpdoc%3Abe45e73e41d1bf6fd48cfff84b08ffd0-ddfe1ad100d367704bc71731bd7cba18
s:35232:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:6:"af.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"ddfe1ad100d367704bc71731bd7cba18";s:39:" phpDocumentor\Reflection\Php\File path";s:51:"vendor/symfony/intl/Resources/data/timezones/af.php";s:41:" phpDocumentor\Reflection\Php\File source";s:25498:"<?php

return [
    'Names' => [
        'Africa/Abidjan' => 'Greenwich-tyd (Abidjan)',
        'Africa/Accra' => 'Greenwich-tyd (Accra)',
        'Africa/Addis_Ababa' => 'Oos-Afrika-tyd (Addis Abeba)',
        'Africa/Algiers' => 'Sentraal-Europese tyd (Algiers)',
        'Africa/Asmera' => 'Oos-Afrika-tyd (Asmara)',
        'Africa/Bamako' => 'Greenwich-tyd (Bamako)',
        'Africa/Bangui' => 'Wes-Afrika-tyd (Bangui)',
        'Africa/Banjul' => 'Greenwich-tyd (Banjul)',
        'Africa/Bissau' => 'Greenwich-tyd (Bissau)',
        'Africa/Blantyre' => 'Sentraal-Afrika-tyd (Blantyre)',
        'Africa/Brazzaville' => 'Wes-Afrika-tyd (Brazzaville)',
        'Africa/Bujumbura' => 'Sentraal-Afrika-tyd (Bujumbura)',
        'Africa/Cairo' => 'Oos-Europese tyd (Kaïro)',
        'Africa/Casablanca' => 'Wes-Europese tyd (Casablanca)',
        'Africa/Ceuta' => 'Sentraal-Europese tyd (Ceuta)',
        'Africa/Conakry' => 'Greenwich-tyd (Conakry)',
        'Africa/Dakar' => 'Greenwich-tyd (Dakar)',
        'Africa/Dar_es_Salaam' => 'Oos-Afrika-tyd (Dar es Salaam)',
        'Africa/Djibouti' => 'Oos-Afrika-tyd (Djiboeti)',
        'Africa/Douala' => 'Wes-Afrika-tyd (Douala)',
        'Africa/El_Aaiun' => 'Wes-Europese tyd (El Aaiun)',
        'Africa/Freetown' => 'Greenwich-tyd (Freetown)',
        'Africa/Gaborone' => 'Sentraal-Afrika-tyd (Gaborone)',
        'Africa/Harare' => 'Sentraal-Afrika-tyd (Harare)',
        'Africa/Johannesburg' => 'Suid-Afrika-standaardtyd (Johannesburg)',
        'Africa/Juba' => 'Sentraal-Afrika-tyd (Juba)',
        'Africa/Kampala' => 'Oos-Afrika-tyd (Kampala)',
        'Africa/Khartoum' => 'Sentraal-Afrika-tyd (Kartoem)',
        'Africa/Kigali' => 'Sentraal-Afrika-tyd (Kigali)',
        'Africa/Kinshasa' => 'Wes-Afrika-tyd (Kinshasa)',
        'Africa/Lagos' => 'Wes-Afrika-tyd (Lagos)',
        'Africa/Libreville' => 'Wes-Afrika-tyd (Libreville)',
        'Africa/Lome' => 'Greenwich-tyd (Lome)',
        'Africa/Luanda' => 'Wes-Afrika-tyd (Luanda)',
        'Africa/Lubumbashi' => 'Sentraal-Afrika-tyd (Lubumbashi)',
        'Africa/Lusaka' => 'Sentraal-Afrika-tyd (Lusaka)',
        'Africa/Malabo' => 'Wes-Afrika-tyd (Malabo)',
        'Africa/Maputo' => 'Sentraal-Afrika-tyd (Maputo)',
        'Africa/Maseru' => 'Suid-Afrika-standaardtyd (Maseru)',
        'Africa/Mbabane' => 'Suid-Afrika-standaardtyd (Mbabane)',
        'Africa/Mogadishu' => 'Oos-Afrika-tyd (Mogadisjoe)',
        'Africa/Monrovia' => 'Greenwich-tyd (Monrovia)',
        'Africa/Nairobi' => 'Oos-Afrika-tyd (Nairobi)',
        'Africa/Ndjamena' => 'Wes-Afrika-tyd (Ndjamena)',
        'Africa/Niamey' => 'Wes-Afrika-tyd (Niamey)',
        'Africa/Nouakchott' => 'Greenwich-tyd (Nouakchott)',
        'Africa/Ouagadougou' => 'Greenwich-tyd (Ouagadougou)',
        'Africa/Porto-Novo' => 'Wes-Afrika-tyd (Porto-Novo)',
        'Africa/Sao_Tome' => 'Greenwich-tyd (São Tomé)',
        'Africa/Tripoli' => 'Oos-Europese tyd (Tripoli)',
        'Africa/Tunis' => 'Sentraal-Europese tyd (Tunis)',
        'Africa/Windhoek' => 'Sentraal-Afrika-tyd (Windhoek)',
        'America/Adak' => 'Hawaii-Aleoete-tyd (Adak)',
        'America/Anchorage' => 'Alaska-tyd (Anchorage)',
        'America/Anguilla' => 'Atlantiese tyd (Anguilla)',
        'America/Antigua' => 'Atlantiese tyd (Antigua)',
        'America/Araguaina' => 'Brasilia-tyd (Araguaina)',
        'America/Argentina/La_Rioja' => 'Argentinië-tyd (La Rioja)',
        'America/Argentina/Rio_Gallegos' => 'Argentinië-tyd (Rio Gallegos)',
        'America/Argentina/Salta' => 'Argentinië-tyd (Salta)',
        'America/Argentina/San_Juan' => 'Argentinië-tyd (San Juan)',
        'America/Argentina/San_Luis' => 'Argentinië-tyd (San Luis)',
        'America/Argentina/Tucuman' => 'Argentinië-tyd (Tucuman)',
        'America/Argentina/Ushuaia' => 'Argentinië-tyd (Ushuaia)',
        'America/Aruba' => 'Atlantiese tyd (Aruba)',
        'America/Asuncion' => 'Paraguay-tyd (Asunción)',
        'America/Bahia' => 'Brasilia-tyd (Bahia)',
        'America/Bahia_Banderas' => 'Noord-Amerikaanse sentrale tyd (Bahia Banderas)',
        'America/Barbados' => 'Atlantiese tyd (Barbados)',
        'America/Belem' => 'Brasilia-tyd (Belem)',
        'America/Belize' => 'Noord-Amerikaanse sentrale tyd (Belize)',
        'America/Blanc-Sablon' => 'Atlantiese tyd (Blanc-Sablon)',
        'America/Boa_Vista' => 'Amasone-tyd (Boa Vista)',
        'America/Bogota' => 'Colombië-tyd (Bogota)',
        'America/Boise' => 'Noord-Amerikaanse bergtyd (Boise)',
        'America/Buenos_Aires' => 'Argentinië-tyd (Buenos Aires)',
        'America/Cambridge_Bay' => 'Noord-Amerikaanse bergtyd (Cambridgebaai)',
        'America/Campo_Grande' => 'Amasone-tyd (Campo Grande)',
        'America/Cancun' => 'Noord-Amerikaanse oostelike tyd (Cancun)',
        'America/Caracas' => 'Venezuela-tyd (Caracas)',
        'America/Catamarca' => 'Argentinië-tyd (Catamarca)',
        'America/Cayenne' => 'Frans-Guiana-tyd (Cayenne)',
        'America/Cayman' => 'Noord-Amerikaanse oostelike tyd (Kaaiman)',
        'America/Chicago' => 'Noord-Amerikaanse sentrale tyd (Chicago)',
        'America/Chihuahua' => 'Noord-Amerikaanse sentrale tyd (Chihuahua)',
        'America/Ciudad_Juarez' => 'Noord-Amerikaanse bergtyd (Ciudad Juárez)',
        'America/Coral_Harbour' => 'Noord-Amerikaanse oostelike tyd (Atikokan)',
        'America/Cordoba' => 'Argentinië-tyd (Cordoba)',
        'America/Costa_Rica' => 'Noord-Amerikaanse sentrale tyd (Costa Rica)',
        'America/Creston' => 'Noord-Amerikaanse bergtyd (Creston)',
        'America/Cuiaba' => 'Amasone-tyd (Cuiaba)',
        'America/Curacao' => 'Atlantiese tyd (Curaçao)',
        'America/Danmarkshavn' => 'Greenwich-tyd (Danmarkshavn)',
        'America/Dawson' => 'Yukontyd (Dawson)',
        'America/Dawson_Creek' => 'Noord-Amerikaanse bergtyd (Dawson Creek)',
        'America/Denver' => 'Noord-Amerikaanse bergtyd (Denver)',
        'America/Detroit' => 'Noord-Amerikaanse oostelike tyd (Detroit)',
        'America/Dominica' => 'Atlantiese tyd (Dominica)',
        'America/Edmonton' => 'Noord-Amerikaanse bergtyd (Edmonton)',
        'America/Eirunepe' => 'Brasilië-tyd (Eirunepe)',
        'America/El_Salvador' => 'Noord-Amerikaanse sentrale tyd (El Salvador)',
        'America/Fort_Nelson' => 'Noord-Amerikaanse bergtyd (Fort Nelson)',
        'America/Fortaleza' => 'Brasilia-tyd (Fortaleza)',
        'America/Glace_Bay' => 'Atlantiese tyd (Glacebaai)',
        'America/Godthab' => 'Wes-Groenland-tyd (Nuuk)',
        'America/Goose_Bay' => 'Atlantiese tyd (Goosebaai)',
        'America/Grand_Turk' => 'Noord-Amerikaanse oostelike tyd (Grand Turk)',
        'America/Grenada' => 'Atlantiese tyd (Grenada)',
        'America/Guadeloupe' => 'Atlantiese tyd (Guadeloupe)',
        'America/Guatemala' => 'Noord-Amerikaanse sentrale tyd (Guatemala)',
        'America/Guayaquil' => 'Ecuador-tyd (Guayaquil)',
        'America/Guyana' => 'Guiana-tyd (Guyana)',
        'America/Halifax' => 'Atlantiese tyd (Halifax)',
        'America/Havana' => 'Kuba-tyd (Havana)',
        'America/Hermosillo' => 'Meksikaanse Pasifiese tyd (Hermosillo)',
        'America/Indiana/Knox' => 'Noord-Amerikaanse sentrale tyd (Knox, Indiana)',
        'America/Indiana/Marengo' => 'Noord-Amerikaanse oostelike tyd (Marengo, Indiana)',
        'America/Indiana/Petersburg' => 'Noord-Amerikaanse oostelike tyd (Petersburg, Indiana)',
        'America/Indiana/Tell_City' => 'Noord-Amerikaanse sentrale tyd (Tell City, Indiana)',
        'America/Indiana/Vevay' => 'Noord-Amerikaanse oostelike tyd (Vevay, Indiana)',
        'America/Indiana/Vincennes' => 'Noord-Amerikaanse oostelike tyd (Vincennes, Indiana)',
        'America/Indiana/Winamac' => 'Noord-Amerikaanse oostelike tyd (Winamac, Indiana)',
        'America/Indianapolis' => 'Noord-Amerikaanse oostelike tyd (Indianapolis)',
        'America/Inuvik' => 'Noord-Amerikaanse bergtyd (Inuvik)',
        'America/Iqaluit' => 'Noord-Amerikaanse oostelike tyd (Iqaluit)',
        'America/Jamaica' => 'Noord-Amerikaanse oostelike tyd (Jamaika)',
        'America/Jujuy' => 'Argentinië-tyd (Jujuy)',
        'America/Juneau' => 'Alaska-tyd (Juneau)',
        'America/Kentucky/Monticello' => 'Noord-Amerikaanse oostelike tyd (Monticello, Kentucky)',
        'America/Kralendijk' => 'Atlantiese tyd (Kralendijk)',
        'America/La_Paz' => 'Bolivië-tyd (La Paz)',
        'America/Lima' => 'Peru-tyd (Lima)',
        'America/Los_Angeles' => 'Pasifiese tyd (Los Angeles)',
        'America/Louisville' => 'Noord-Amerikaanse oostelike tyd (Louisville)',
        'America/Lower_Princes' => 'Atlantiese tyd (Lower Prince’s Quarter)',
        'America/Maceio' => 'Brasilia-tyd (Maceio)',
        'America/Managua' => 'Noord-Amerikaanse sentrale tyd (Managua)',
        'America/Manaus' => 'Amasone-tyd (Manaus)',
        'America/Marigot' => 'Atlantiese tyd (Marigot)',
        'America/Martinique' => 'Atlantiese tyd (Martinique)',
        'America/Matamoros' => 'Noord-Amerikaanse sentrale tyd (Matamoros)',
        'America/Mazatlan' => 'Meksikaanse Pasifiese tyd (Mazatlan)',
        'America/Mendoza' => 'Argentinië-tyd (Mendoza)',
        'America/Menominee' => 'Noord-Amerikaanse sentrale tyd (Menominee)',
        'America/Merida' => 'Noord-Amerikaanse sentrale tyd (Merida)',
        'America/Metlakatla' => 'Alaska-tyd (Metlakatla)',
        'America/Mexico_City' => 'Noord-Amerikaanse sentrale tyd (Meksikostad)',
        'America/Miquelon' => 'Sint-Pierre en Miquelon-tyd',
        'America/Moncton' => 'Atlantiese tyd (Moncton)',
        'America/Monterrey' => 'Noord-Amerikaanse sentrale tyd (Monterrey)',
        'America/Montevideo' => 'Uruguay-tyd (Montevideo)',
        'America/Montserrat' => 'Atlantiese tyd (Montserrat)',
        'America/Nassau' => 'Noord-Amerikaanse oostelike tyd (Nassau)',
        'America/New_York' => 'Noord-Amerikaanse oostelike tyd (New York)',
        'America/Nome' => 'Alaska-tyd (Nome)',
        'America/Noronha' => 'Fernando de Noronha-tyd',
        'America/North_Dakota/Beulah' => 'Noord-Amerikaanse sentrale tyd (Beulah, Noord-Dakota)',
        'America/North_Dakota/Center' => 'Noord-Amerikaanse sentrale tyd (Center, Noord-Dakota)',
        'America/North_Dakota/New_Salem' => 'Noord-Amerikaanse sentrale tyd (New Salem, Noord-Dakota)',
        'America/Ojinaga' => 'Noord-Amerikaanse sentrale tyd (Ojinaga)',
        'America/Panama' => 'Noord-Amerikaanse oostelike tyd (Panama)',
        'America/Paramaribo' => 'Suriname-tyd (Paramaribo)',
        'America/Phoenix' => 'Noord-Amerikaanse bergtyd (Phoenix)',
        'America/Port-au-Prince' => 'Noord-Amerikaanse oostelike tyd (Port-au-Prince)',
        'America/Port_of_Spain' => 'Atlantiese tyd (Port of Spain)',
        'America/Porto_Velho' => 'Amasone-tyd (Porto Velho)',
        'America/Puerto_Rico' => 'Atlantiese tyd (Puerto Rico)',
        'America/Punta_Arenas' => 'Chili-tyd (Punta Arenas)',
        'America/Rankin_Inlet' => 'Noord-Amerikaanse sentrale tyd (Rankin Inlet)',
        'America/Recife' => 'Brasilia-tyd (Recife)',
        'America/Regina' => 'Noord-Amerikaanse sentrale tyd (Regina)',
        'America/Resolute' => 'Noord-Amerikaanse sentrale tyd (Resolute)',
        'America/Rio_Branco' => 'Brasilië-tyd (Rio Branco)',
        'America/Santarem' => 'Brasilia-tyd (Santarem)',
        'America/Santiago' => 'Chili-tyd (Santiago)',
        'America/Santo_Domingo' => 'Atlantiese tyd (Santo Domingo)',
        'America/Sao_Paulo' => 'Brasilia-tyd (Sao Paulo)',
        'America/Scoresbysund' => 'Oos-Groenland-tyd (Ittoqqortoormiit)',
        'America/Sitka' => 'Alaska-tyd (Sitka)',
        'America/St_Barthelemy' => 'Atlantiese tyd (Sint Barthélemy)',
        'America/St_Johns' => 'Newfoundland-tyd (Sint John’s)',
        'America/St_Kitts' => 'Atlantiese tyd (Sint Kitts)',
        'America/St_Lucia' => 'Atlantiese tyd (Sint Lucia)',
        'America/St_Thomas' => 'Atlantiese tyd (Sint Thomas)',
        'America/St_Vincent' => 'Atlantiese tyd (Sint Vincent)',
        'America/Swift_Current' => 'Noord-Amerikaanse sentrale tyd (Swift Current)',
        'America/Tegucigalpa' => 'Noord-Amerikaanse sentrale tyd (Tegucigalpa)',
        'America/Thule' => 'Atlantiese tyd (Thule)',
        'America/Tijuana' => 'Pasifiese tyd (Tijuana)',
        'America/Toronto' => 'Noord-Amerikaanse oostelike tyd (Toronto)',
        'America/Tortola' => 'Atlantiese tyd (Tortola)',
        'America/Vancouver' => 'Pasifiese tyd (Vancouver)',
        'America/Whitehorse' => 'Yukontyd (Whitehorse)',
        'America/Winnipeg' => 'Noord-Amerikaanse sentrale tyd (Winnipeg)',
        'America/Yakutat' => 'Alaska-tyd (Yakutat)',
        'Antarctica/Casey' => 'Antarktika-tyd (Casey)',
        'Antarctica/Davis' => 'Davis-tyd',
        'Antarctica/DumontDUrville' => 'Dumont-d’Urville-tyd',
        'Antarctica/Macquarie' => 'Oostelike Australiese tyd (Macquarie)',
        'Antarctica/Mawson' => 'Mawson-tyd',
        'Antarctica/McMurdo' => 'Nieu-Seeland-tyd (McMurdo)',
        'Antarctica/Palmer' => 'Chili-tyd (Palmer)',
        'Antarctica/Rothera' => 'Rothera-tyd',
        'Antarctica/Syowa' => 'Syowa-tyd',
        'Antarctica/Troll' => 'Greenwich-tyd (Troll)',
        'Antarctica/Vostok' => 'Wostok-tyd',
        'Arctic/Longyearbyen' => 'Sentraal-Europese tyd (Longyearbyen)',
        'Asia/Aden' => 'Arabiese tyd (Aden)',
        'Asia/Almaty' => 'Oos-Kazakstan-tyd (Almaty)',
        'Asia/Amman' => 'Oos-Europese tyd (Amman)',
        'Asia/Anadyr' => 'Anadyr-tyd',
        'Asia/Aqtau' => 'Wes-Kazakstan-tyd (Aqtau)',
        'Asia/Aqtobe' => 'Wes-Kazakstan-tyd (Aqtobe)',
        'Asia/Ashgabat' => 'Turkmenistan-tyd (Asjchabad)',
        'Asia/Atyrau' => 'Wes-Kazakstan-tyd (Atyrau)',
        'Asia/Baghdad' => 'Arabiese tyd (Bagdad)',
        'Asia/Bahrain' => 'Arabiese tyd (Bahrein)',
        'Asia/Baku' => 'Aserbeidjan-tyd (Bakoe)',
        'Asia/Bangkok' => 'Indosjina-tyd (Bangkok)',
        'Asia/Barnaul' => 'Rusland-tyd (Barnaul)',
        'Asia/Beirut' => 'Oos-Europese tyd (Beiroet)',
        'Asia/Bishkek' => 'Kirgistan-tyd (Bisjkek)',
        'Asia/Brunei' => 'Broenei Darussalam-tyd',
        'Asia/Calcutta' => 'Indië-standaardtyd (Kolkata)',
        'Asia/Chita' => 'Jakoetsk-tyd (Chita)',
        'Asia/Choibalsan' => 'Ulaanbaatar-tyd (Choibalsan)',
        'Asia/Colombo' => 'Indië-standaardtyd (Colombo)',
        'Asia/Damascus' => 'Oos-Europese tyd (Damaskus)',
        'Asia/Dhaka' => 'Bangladesj-tyd (Dhaka)',
        'Asia/Dili' => 'Oos-Timor-tyd (Dili)',
        'Asia/Dubai' => 'Persiese Golf-standaardtyd (Doebai)',
        'Asia/Dushanbe' => 'Tadjikistan-tyd (Dushanbe)',
        'Asia/Famagusta' => 'Oos-Europese tyd (Famagusta)',
        'Asia/Gaza' => 'Oos-Europese tyd (Gaza)',
        'Asia/Hebron' => 'Oos-Europese tyd (Hebron)',
        'Asia/Hong_Kong' => 'Hongkong-tyd',
        'Asia/Hovd' => 'Hovd-tyd',
        'Asia/Irkutsk' => 'Irkoetsk-tyd',
        'Asia/Jakarta' => 'Wes-Indonesië-tyd (Djakarta)',
        'Asia/Jayapura' => 'Oos-Indonesië-tyd (Jayapura)',
        'Asia/Jerusalem' => 'Israel-tyd (Jerusalem)',
        'Asia/Kabul' => 'Afganistan-tyd (Kaboel)',
        'Asia/Kamchatka' => 'Petropavlovsk-Kamchatski-tyd (Kamtsjatka)',
        'Asia/Karachi' => 'Pakistan-tyd (Karatsji)',
        'Asia/Katmandu' => 'Nepal-tyd (Katmandoe)',
        'Asia/Khandyga' => 'Jakoetsk-tyd (Khandyga)',
        'Asia/Krasnoyarsk' => 'Krasnojarsk-tyd',
        'Asia/Kuala_Lumpur' => 'Maleisië-tyd (Koeala-Loempoer)',
        'Asia/Kuching' => 'Maleisië-tyd (Kuching)',
        'Asia/Kuwait' => 'Arabiese tyd (Koeweit)',
        'Asia/Macau' => 'China-tyd (Macau)',
        'Asia/Magadan' => 'Magadan-tyd',
        'Asia/Makassar' => 'Sentraal-Indonesiese tyd (Makassar)',
        'Asia/Manila' => 'Filippynse tyd (Manila)',
        'Asia/Muscat' => 'Persiese Golf-standaardtyd (Muskat)',
        'Asia/Nicosia' => 'Oos-Europese tyd (Nicosia)',
        'Asia/Novokuznetsk' => 'Krasnojarsk-tyd (Novokuznetsk)',
        'Asia/Novosibirsk' => 'Novosibirsk-tyd',
        'Asia/Omsk' => 'Omsk-tyd',
        'Asia/Oral' => 'Wes-Kazakstan-tyd (Oral)',
        'Asia/Phnom_Penh' => 'Indosjina-tyd (Phnom Penh)',
        'Asia/Pontianak' => 'Wes-Indonesië-tyd (Pontianak)',
        'Asia/Pyongyang' => 'Koreaanse tyd (Pyongyang)',
        'Asia/Qatar' => 'Arabiese tyd (Katar)',
        'Asia/Qostanay' => 'Oos-Kazakstan-tyd (Kostanay)',
        'Asia/Qyzylorda' => 'Wes-Kazakstan-tyd (Qyzylorda)',
        'Asia/Rangoon' => 'Mianmar-tyd (Yangon)',
        'Asia/Riyadh' => 'Arabiese tyd (Riaad)',
        'Asia/Saigon' => 'Indosjina-tyd (Ho Tsji Minhstad)',
        'Asia/Sakhalin' => 'Sakhalin-tyd',
        'Asia/Samarkand' => 'Oesbekistan-tyd (Samarkand)',
        'Asia/Seoul' => 'Koreaanse tyd (Seoel)',
        'Asia/Shanghai' => 'China-tyd (Shanghai)',
        'Asia/Singapore' => 'Singapoer-standaardtyd',
        'Asia/Srednekolymsk' => 'Magadan-tyd (Srednekolymsk)',
        'Asia/Taipei' => 'Taipei-tyd',
        'Asia/Tashkent' => 'Oesbekistan-tyd (Tashkent)',
        'Asia/Tbilisi' => 'Georgië-tyd (Tbilisi)',
        'Asia/Tehran' => 'Iran-tyd (Tehran)',
        'Asia/Thimphu' => 'Bhoetan-tyd (Thimphu)',
        'Asia/Tokyo' => 'Japan-tyd (Tokio)',
        'Asia/Tomsk' => 'Rusland-tyd (Tomsk)',
        'Asia/Ulaanbaatar' => 'Ulaanbaatar-tyd',
        'Asia/Urumqi' => 'China-tyd (Urumqi)',
        'Asia/Ust-Nera' => 'Wladiwostok-tyd (Ust-Nera)',
        'Asia/Vientiane' => 'Indosjina-tyd (Vientiane)',
        'Asia/Vladivostok' => 'Wladiwostok-tyd',
        'Asia/Yakutsk' => 'Jakoetsk-tyd',
        'Asia/Yekaterinburg' => 'Jekaterinburg-tyd',
        'Asia/Yerevan' => 'Armenië-tyd (Yerevan)',
        'Atlantic/Azores' => 'Asore-tyd',
        'Atlantic/Bermuda' => 'Atlantiese tyd (Bermuda)',
        'Atlantic/Canary' => 'Wes-Europese tyd (Kanarie)',
        'Atlantic/Cape_Verde' => 'Kaap Verde-tyd',
        'Atlantic/Faeroe' => 'Wes-Europese tyd (Faroe)',
        'Atlantic/Madeira' => 'Wes-Europese tyd (Madeira)',
        'Atlantic/Reykjavik' => 'Greenwich-tyd (Reykjavik)',
        'Atlantic/South_Georgia' => 'Suid-Georgië-tyd',
        'Atlantic/St_Helena' => 'Greenwich-tyd (Sint Helena)',
        'Atlantic/Stanley' => 'Falklandeilande-tyd (Stanley)',
        'Australia/Adelaide' => 'Sentraal-Australiese tyd (Adelaide)',
        'Australia/Brisbane' => 'Oostelike Australiese tyd (Brisbane)',
        'Australia/Broken_Hill' => 'Sentraal-Australiese tyd (Broken Hill)',
        'Australia/Darwin' => 'Sentraal-Australiese tyd (Darwin)',
        'Australia/Eucla' => 'Sentraal-westelike Australiese tyd (Eucla)',
        'Australia/Hobart' => 'Oostelike Australiese tyd (Hobart)',
        'Australia/Lindeman' => 'Oostelike Australiese tyd (Lindeman)',
        'Australia/Lord_Howe' => 'Lord Howe-tyd',
        'Australia/Melbourne' => 'Oostelike Australiese tyd (Melbourne)',
        'Australia/Perth' => 'Westelike Australiese tyd (Perth)',
        'Australia/Sydney' => 'Oostelike Australiese tyd (Sydney)',
        'CST6CDT' => 'Noord-Amerikaanse sentrale tyd',
        'EST5EDT' => 'Noord-Amerikaanse oostelike tyd',
        'Etc/GMT' => 'Greenwich-tyd',
        'Etc/UTC' => 'Gekoördineerde universele tyd',
        'Europe/Amsterdam' => 'Sentraal-Europese tyd (Amsterdam)',
        'Europe/Andorra' => 'Sentraal-Europese tyd (Andorra)',
        'Europe/Astrakhan' => 'Moskou-tyd (Astrakhan)',
        'Europe/Athens' => 'Oos-Europese tyd (Athene)',
        'Europe/Belgrade' => 'Sentraal-Europese tyd (Belgrade)',
        'Europe/Berlin' => 'Sentraal-Europese tyd (Berlyn)',
        'Europe/Bratislava' => 'Sentraal-Europese tyd (Bratislava)',
        'Europe/Brussels' => 'Sentraal-Europese tyd (Brussel)',
        'Europe/Bucharest' => 'Oos-Europese tyd (Boekarest)',
        'Europe/Budapest' => 'Sentraal-Europese tyd (Boedapest)',
        'Europe/Busingen' => 'Sentraal-Europese tyd (Busingen)',
        'Europe/Chisinau' => 'Oos-Europese tyd (Chisinau)',
        'Europe/Copenhagen' => 'Sentraal-Europese tyd (Kopenhagen)',
        'Europe/Dublin' => 'Greenwich-tyd (Dublin)',
        'Europe/Gibraltar' => 'Sentraal-Europese tyd (Gibraltar)',
        'Europe/Guernsey' => 'Greenwich-tyd (Guernsey)',
        'Europe/Helsinki' => 'Oos-Europese tyd (Helsinki)',
        'Europe/Isle_of_Man' => 'Greenwich-tyd (Eiland Man)',
        'Europe/Istanbul' => 'Turkye-tyd (Istanbul)',
        'Europe/Jersey' => 'Greenwich-tyd (Jersey)',
        'Europe/Kaliningrad' => 'Oos-Europese tyd (Kaliningrad)',
        'Europe/Kiev' => 'Oos-Europese tyd (Kiëf)',
        'Europe/Kirov' => 'Rusland-tyd (Kirov)',
        'Europe/Lisbon' => 'Wes-Europese tyd (Lissabon)',
        'Europe/Ljubljana' => 'Sentraal-Europese tyd (Ljubljana)',
        'Europe/London' => 'Greenwich-tyd (Londen)',
        'Europe/Luxembourg' => 'Sentraal-Europese tyd (Luxemburg)',
        'Europe/Madrid' => 'Sentraal-Europese tyd (Madrid)',
        'Europe/Malta' => 'Sentraal-Europese tyd (Malta)',
        'Europe/Mariehamn' => 'Oos-Europese tyd (Mariehamn)',
        'Europe/Minsk' => 'Moskou-tyd (Minsk)',
        'Europe/Monaco' => 'Sentraal-Europese tyd (Monaco)',
        'Europe/Moscow' => 'Moskou-tyd',
        'Europe/Oslo' => 'Sentraal-Europese tyd (Oslo)',
        'Europe/Paris' => 'Sentraal-Europese tyd (Parys)',
        'Europe/Podgorica' => 'Sentraal-Europese tyd (Podgorica)',
        'Europe/Prague' => 'Sentraal-Europese tyd (Praag)',
        'Europe/Riga' => 'Oos-Europese tyd (Riga)',
        'Europe/Rome' => 'Sentraal-Europese tyd (Rome)',
        'Europe/Samara' => 'Samara-tyd',
        'Europe/San_Marino' => 'Sentraal-Europese tyd (San Marino)',
        'Europe/Sarajevo' => 'Sentraal-Europese tyd (Sarajevo)',
        'Europe/Saratov' => 'Moskou-tyd (Saratof)',
        'Europe/Simferopol' => 'Moskou-tyd (Simferopol)',
        'Europe/Skopje' => 'Sentraal-Europese tyd (Skopje)',
        'Europe/Sofia' => 'Oos-Europese tyd (Sofia)',
        'Europe/Stockholm' => 'Sentraal-Europese tyd (Stockholm)',
        'Europe/Tallinn' => 'Oos-Europese tyd (Tallinn)',
        'Europe/Tirane' => 'Sentraal-Europese tyd (Tirane)',
        'Europe/Ulyanovsk' => 'Moskou-tyd (Ulyanovsk)',
        'Europe/Vaduz' => 'Sentraal-Europese tyd (Vaduz)',
        'Europe/Vatican' => 'Sentraal-Europese tyd (Vatikaanstad)',
        'Europe/Vienna' => 'Sentraal-Europese tyd (Wene)',
        'Europe/Vilnius' => 'Oos-Europese tyd (Vilnius)',
        'Europe/Volgograd' => 'Wolgograd-tyd',
        'Europe/Warsaw' => 'Sentraal-Europese tyd (Warskou)',
        'Europe/Zagreb' => 'Sentraal-Europese tyd (Zagreb)',
        'Europe/Zurich' => 'Sentraal-Europese tyd (Zürich)',
        'Indian/Antananarivo' => 'Oos-Afrika-tyd (Antananarivo)',
        'Indian/Chagos' => 'Indiese Oseaan-tyd (Chagos)',
        'Indian/Christmas' => 'Christmaseiland-tyd',
        'Indian/Cocos' => 'Kokoseilande-tyd',
        'Indian/Comoro' => 'Oos-Afrika-tyd (Comore)',
        'Indian/Kerguelen' => 'Franse Suider- en Antarktiese tyd (Kerguelen)',
        'Indian/Mahe' => 'Seychelle-tyd (Mahe)',
        'Indian/Maldives' => 'Maledive-tyd',
        'Indian/Mauritius' => 'Mauritius-tyd',
        'Indian/Mayotte' => 'Oos-Afrika-tyd (Mayotte)',
        'Indian/Reunion' => 'Réunion-tyd',
        'MST7MDT' => 'Noord-Amerikaanse bergtyd',
        'PST8PDT' => 'Pasifiese tyd',
        'Pacific/Apia' => 'Apia-tyd',
        'Pacific/Auckland' => 'Nieu-Seeland-tyd (Auckland)',
        'Pacific/Bougainville' => 'Papoea-Nieu-Guinee-tyd (Bougainville)',
        'Pacific/Chatham' => 'Chatham-tyd',
        'Pacific/Easter' => 'Paaseiland-tyd',
        'Pacific/Efate' => 'Vanuatu-tyd (Efate)',
        'Pacific/Enderbury' => 'Fenikseilande-tyd (Enderbury)',
        'Pacific/Fakaofo' => 'Tokelau-tyd (Fakaofo)',
        'Pacific/Fiji' => 'Fidji-tyd',
        'Pacific/Funafuti' => 'Tuvalu-tyd (Funafuti)',
        'Pacific/Galapagos' => 'Galapagos-tyd',
        'Pacific/Gambier' => 'Gambier-tyd',
        'Pacific/Guadalcanal' => 'Salomonseilande-tyd (Guadalcanal)',
        'Pacific/Guam' => 'Chamorro-standaardtyd (Guam)',
        'Pacific/Honolulu' => 'Hawaii-Aleoete-tyd (Honolulu)',
        'Pacific/Kiritimati' => 'Line-eilande-tyd (Kiritimati)',
        'Pacific/Kosrae' => 'Kosrae-tyd',
        'Pacific/Kwajalein' => 'Marshalleilande-tyd (Kwajalein)',
        'Pacific/Majuro' => 'Marshalleilande-tyd (Majuro)',
        'Pacific/Marquesas' => 'Marquesas-tyd',
        'Pacific/Midway' => 'Samoa-tyd (Midway)',
        'Pacific/Nauru' => 'Nauru-tyd',
        'Pacific/Niue' => 'Niue-tyd',
        'Pacific/Norfolk' => 'Norfolkeiland-tyd',
        'Pacific/Noumea' => 'Nieu-Kaledonië-tyd (Nouméa)',
        'Pacific/Pago_Pago' => 'Samoa-tyd (Pago Pago)',
        'Pacific/Palau' => 'Palau-tyd',
        'Pacific/Pitcairn' => 'Pitcairn-tyd',
        'Pacific/Ponape' => 'Ponape-tyd (Pohnpei)',
        'Pacific/Port_Moresby' => 'Papoea-Nieu-Guinee-tyd (Port Moresby)',
        'Pacific/Rarotonga' => 'Cookeilande-tyd (Rarotonga)',
        'Pacific/Saipan' => 'Chamorro-standaardtyd (Saipan)',
        'Pacific/Tahiti' => 'Tahiti-tyd',
        'Pacific/Tarawa' => 'Gilberteilande-tyd (Tarawa)',
        'Pacific/Tongatapu' => 'Tonga-tyd (Tongatapu)',
        'Pacific/Truk' => 'Chuuk-tyd',
        'Pacific/Wake' => 'Wake-eiland-tyd',
        'Pacific/Wallis' => 'Wallis en Futuna-tyd (Mata-Utu)',
    ],
    'Meta' => [],
];
";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";